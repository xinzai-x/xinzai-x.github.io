<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>星仔人生录</title>
  
  <subtitle>珍惜当下 不负此生</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2024-08-03T09:37:37.556Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>星仔</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>通过 Cloudflare 和 JsDelivr 免费加速博客 GitHub 图床等静态资源</title>
    <link href="http://example.com/post/3e643b17.html"/>
    <id>http://example.com/post/3e643b17.html</id>
    <published>2024-08-03T09:25:05.000Z</published>
    <updated>2024-08-03T09:37:37.556Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a><center>前言</center></h1><p>本文通过学习此博客编写：<a href="https://www.haoyep.com/posts/github-graph-beds-cdn/#%E9%85%8D%E7%BD%AE%E5%9F%9F%E5%90%8D">地址</a>，通过 Cloudflare 和 jsDelivr 免费加速博客 GitHub 静态资源(GitHub图床)，自动实现 CDN 资源的海内外分流，加速博客访问速度。</p><h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a><center>配置</center></h1><p>首先，要配置好域名以及DNS，本人已经写了配置域名以及 Cloudflare DNS加速部署博客：<a href="https://blog.csdn.net/qq_65047384/article/details/140886169?spm=1001.2014.3001.5502">地址</a></p><p>进入部署好的DNS</p><img src="https://cdn.d3iiz.top/gh/xinzai-x/MyPic1/img/202408031735506.png" alt="进入" style="zoom: 50%;"><p>在 DNS 配置中，新增一条 CNAME 解析记录，并启用代理。 如图，我这里是将 cdn.haoyep.com 解析到了 jsd.cdn.zzko.cn，并使用 Cloudflare 代理（点亮小云朵）</p><img src="https://cdn.d3iiz.top/gh/xinzai-x/MyPic1/img/202408031736708.png" alt="添加记录" style="zoom:33%;"><p>目标：资源链接都使用 cdn.haoyep.com，Cloudflare 在代理 cdn.haoyep.com 时，判断请求来源是国内，则将 cdn.haoyep.com 重定向到 jsd.cdn.zzko.cn；国外的请求则重定向到 cdn.jsdelivr.net。</p><h2 id="配置国内重定向"><a href="#配置国内重定向" class="headerlink" title="配置国内重定向"></a><center>配置国内重定向</center></h2><p>规则名称 （必需）：标注国内，方便区分</p><p>自定义筛选表达式：<code>(http.host eq &quot;cdn.haoyep.com&quot; and ip.geoip.country eq &quot;CN&quot;)</code></p><p>URL 重定向</p><ul><li>类型：<code>动态</code></li><li>表达式：<code>concat(&quot;https://jsd.cdn.zzko.cn&quot;, http.request.uri.path)</code></li><li>状态代码：<code>302</code></li></ul><img src="https://cdn.d3iiz.top/gh/xinzai-x/MyPic1/img/202408031735019.png" alt="配置国内重定向" style="zoom: 50%;"><h2 id="配置国外重定向"><a href="#配置国外重定向" class="headerlink" title="配置国外重定向"></a><center>配置国外重定向</center></h2><p>规则名称 （必需）：标注国外，方便区分</p><p>自定义筛选表达式：(<code>http.host eq &quot;cdn.haoyep.com&quot; and ip.geoip.country ne &quot;CN&quot;</code>)</p><p>URL 重定向</p><ul><li>类型：<code>动态</code></li><li>表达式：<code>concat(&quot;https://cdn.jsdelivr.net&quot;, http.request.uri.path)</code></li><li>状态代码：<code>302</code></li></ul><img src="https://cdn.d3iiz.top/gh/xinzai-x/MyPic1/img/202408031735674.png" alt="配置国外重定向" style="zoom:50%;"><blockquote><p>技巧：<br>HTTP 重定向状态选择302而不是301。虽然两类请求都会被 Cloudflare 缓存，但301理论上是永久跳转而302是临时跳转，因此301可能会导致长时间缓存，不利于今后修改重定向到新地址。</p></blockquote><h2 id="PicGo-设置"><a href="#PicGo-设置" class="headerlink" title="PicGo 设置"></a><center>PicGo 设置</center></h2><p>我们已经除了GitHub上传图片教程：<a href="https://blog.csdn.net/qq_65047384/article/details/140401010">地址</a></p><p>这里只需修改，自定义域名连接里面的<code>cdn.haoyep.com</code>，修改成自己的，其它按之前的配置即可</p><img src="https://cdn.d3iiz.top/gh/xinzai-x/MyPic1/img/202408031736311.png" alt="PicGo配置" style="zoom: 50%;"><p>之前已经上传的图片，也只需要将图片链接中的<code>cdn.haoyep.com</code>，修改成自己的，在Typora可以ctrl+f，直接全部替换即可</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;&lt;center&gt;前言&lt;/center&gt;&lt;/h1&gt;&lt;p&gt;本文通过学习此博客编写：&lt;a href=&quot;https://www.haoyep.com/posts/git</summary>
      
    
    
    
    <category term="技术积累记录" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF%E7%A7%AF%E7%B4%AF%E8%AE%B0%E5%BD%95/"/>
    
    
    <category term="博客加速图床" scheme="http://example.com/tags/%E5%8D%9A%E5%AE%A2%E5%8A%A0%E9%80%9F%E5%9B%BE%E5%BA%8A/"/>
    
  </entry>
  
  <entry>
    <title>利用cloudflare加速github博客访问</title>
    <link href="http://example.com/post/b7e3ace9.html"/>
    <id>http://example.com/post/b7e3ace9.html</id>
    <published>2024-08-03T09:24:43.000Z</published>
    <updated>2024-08-03T09:34:07.962Z</updated>
    
    <content type="html"><![CDATA[<h1 id="域名购买"><a href="#域名购买" class="headerlink" title="域名购买"></a><center>域名购买</center></h1><p>阿里可能需要实名认证等，在注册账号是，按照提示注册即可，购买期间若需补充其它信息，按要求补充即可</p><p>这里选择阿里云的域名，提供的这个的非常便宜实惠的域名，但是续费可能就是原价，可以一年换一次，购买：<a href="https://mi.aliyun.com/?spm=5176.29045373.J_2177541330.5.3d1d183838ot1j#eyJwcm9kdWN0VHlwZSI6MiwicXVpY2tTZWFyY2giOiJbXCJcIl0iLCJrZXl3b3JkIjoiIiwiY29uc3RpdHV0ZUFyciI6WyIiXSwiZml4ZWRQcmljZVNlYXJjaFR5cGUiOiJzZWxlY3RlZCIsInF1aWNrU29ydCI6WyJwcmljZSIsImFzY2VuZCJdLCJtYXhTYWxlQXZhaWxEYXkiOiIiLCJzYWxlQXZhaWxEYXlSYW5nZSI6eyJtaW5TYWxlQXZhaWxEYXkiOiIiLCJtYXhTYWxlQXZhaWxEYXkiOiIifSwibWluRG9tYWluQXZhaWxEYXkiOjMwMCwiZG9tYWluQXZhaWxEYXlSYW5nZSI6eyJtaW5Eb21haW5BdmFpbERheSI6MzAwLCJtYXhEb21haW5BdmFpbERheSI6IiJ9LCJzZXNzaW9uQ29kZSI6ImV6bXZHaF81WWEyVGtxNXZGMEs5cyIsImNvbnN0aXR1dGUiOiIiLCJtaW5TYWxlQXZhaWxEYXkiOiIiLCJtYXhEb21haW5BdmFpbERheSI6IiIsInRhYiI6InNlbGVjdGVkIn0=">地址</a>。</p><p>购买完成后，在控制台看是否成功，可能需要等待几分钟</p><img src="https://cdn.d3iiz.top/gh/xinzai-x/MyPic1/img/202408031727256.png" alt="控制台" style="zoom: 33%;"><p>进入控制台后，进入域名控制台</p><img src="https://cdn.d3iiz.top/gh/xinzai-x/MyPic1/img/202408031727849.png" alt="查看域名" style="zoom:33%;"><p>这里可查看域名</p><img src="https://cdn.d3iiz.top/gh/xinzai-x/MyPic1/img/202408031726584.png" alt="域名列表" style="zoom:33%;"><h1 id="修改DNS"><a href="#修改DNS" class="headerlink" title="修改DNS"></a><center>修改DNS</center></h1><p>在域名列表点击 管理</p><img src="https://cdn.d3iiz.top/gh/xinzai-x/MyPic1/img/202408031726967.png" alt="第一步" style="zoom: 33%;"><p>修改DNS，添加需要的</p><img src="https://cdn.d3iiz.top/gh/xinzai-x/MyPic1/img/202408031726163.png" alt="修改DSN" style="zoom:33%;"><h1 id="域名购买-1"><a href="#域名购买-1" class="headerlink" title="域名购买"></a><center>域名购买</center></h1><p><a href="https://www.cloudflare-cn.com/">cloudflare地址</a>，进入后直接先注册账号</p><p>设置成中文，进入网站绑定域名</p><img src="https://cdn.d3iiz.top/gh/xinzai-x/MyPic1/img/202408031726589.png" alt="进入网站选项" style="zoom: 33%;"><p>在左侧栏中进入网站一栏，点击右方添加站点，第一次可能没有这个，但中间有一个可以直接添加</p><img src="https://cdn.d3iiz.top/gh/xinzai-x/MyPic1/img/202408031728518.png" alt="添加站点" style="zoom:33%;"><p>输入自己的域名，注意不要带<code>www</code>或者<code>https</code>，比如我的就直接填写<code>qinyu.space</code></p><img src="https://cdn.d3iiz.top/gh/xinzai-x/MyPic1/img/202408031729876.png" alt="添加域名" style="zoom:33%;"><p>选择套餐，<code>free</code>即可</p><img src="https://cdn.d3iiz.top/gh/xinzai-x/MyPic1/img/202408031726581.png" alt="选择套餐" style="zoom:33%;"><p>点击继续后 cloudflare 会自动扫描域名的 dns 记录，如果是刚刚创建的域名，可能扫描的结果为空。<strong>截图中的几条记录可以不用管</strong></p><img src="https://cdn.d3iiz.top/gh/xinzai-x/MyPic1/img/202408031726894.png" alt="添加DNS记录" style="zoom:33%;"><p>这一步很重要，点击添加记录，按照如下方式添加<code>类型为A</code>，名称为<code>@</code>，IPv4地址为<code>185.199.108.153</code>，<strong>按照上述方式再添加以下三条记录，类型和名称和上述相同，IPv4地址分别为</strong>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">185.199.109.153</span><br><span class="line">185.199.110.153</span><br><span class="line">185.199.111.153</span><br></pre></td></tr></table></figure><p>完成之后应该能看到列表中有以下四条这样的记录，除了名称是自己的域名外其他应该都和图中相同</p><img src="https://cdn.d3iiz.top/gh/xinzai-x/MyPic1/img/202408031726224.png" alt="添加后" style="zoom:33%;"><p>上述添加的4条ip地址均是GitHub Pages 的 IP 地址，具体可查看<a href="https://docs.github.com/zh/pages/configuring-a-custom-domain-for-your-github-pages-site/managing-a-custom-domain-for-your-github-pages-site">地址</a></p><p>点击继续后，往下滑 cloudflare 会要求将我们DNS服务器修改为以下图中所示的的服务器，可以先截个图或者存文档里</p><img src="https://cdn.d3iiz.top/gh/xinzai-x/MyPic1/img/202408031726745.png" alt="DNS服务器" style="zoom: 50%;"> <p>点击下方继续后会有一个快速入门指南，里面的配置可以都开启：</p><img src="https://cdn.d3iiz.top/gh/xinzai-x/MyPic1/img/202408031730170.png" alt="配置都开启" style="zoom:50%;"><p>回到上面讲述修改DNS，DNS服务器更改后生效需要一段时间，少则几分钟，慢则需要几个小时</p><p>返回 cloudflare，如果看到 “Cloudflare 正在保护您的站点”说明已经配置成功了：</p><img src="https://cdn.d3iiz.top/gh/xinzai-x/MyPic1/img/202408031731626.png" alt="配置成功" style="zoom:33%;"><h1 id="设置Github-page"><a href="#设置Github-page" class="headerlink" title="设置Github page"></a><center>设置Github page</center></h1><p>进入github.io对应的仓库，进入 <code>Settings</code>：</p><img src="https://cdn.d3iiz.top/gh/xinzai-x/MyPic1/img/202408031726308.png" alt="进入设置" style="zoom: 33%;"><p>进入左栏中的<code>pages</code>，在 <code>Custom domain</code>中输入自己的域名，点击<code>save</code>，如果成功会显示下图：</p><img src="https://i-blog.csdnimg.cn/direct/75569e79f21d48e0b3c0dd43d4605992.png#pic_center =600x" alt="添加域名" style="zoom:33%;"><p>这样就可以通过域名来访问自己的博客了，还可以在上图中勾选 <code>Enforcrs HTTPS</code>，这样网站仅会通过https提供服务。</p><blockquote><p>如果如下图显示dns配置不正确，推测可能是使用了cloudflare后，GitHub验证DNS时返回的是cdn服务器的ip地址，而不是在cloudflare上开始配置的4个GitHub page的ip地址，可以在线dig一下自己的域名验证一下。不过只要网站能通过域名正常访问就没什么问题。<br><img src="https://cdn.d3iiz.top/gh/xinzai-x/MyPic1/img/202408031726365.png" alt="提示" style="zoom:33%;"></p></blockquote><p>本文参考：<a href="https://qinyu.space/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/%E5%88%A9%E7%94%A8cloudflare%E5%8A%A0%E9%80%9Fgithub%E4%B8%BB%E9%A1%B5%E8%AE%BF%E9%97%AE/#%E9%85%8D%E7%BD%AE-cloudflare">地址</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;域名购买&quot;&gt;&lt;a href=&quot;#域名购买&quot; class=&quot;headerlink&quot; title=&quot;域名购买&quot;&gt;&lt;/a&gt;&lt;center&gt;域名购买&lt;/center&gt;&lt;/h1&gt;&lt;p&gt;阿里可能需要实名认证等，在注册账号是，按照提示注册即可，购买期间若需补充其它信息，按要求补</summary>
      
    
    
    
    <category term="技术积累记录" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF%E7%A7%AF%E7%B4%AF%E8%AE%B0%E5%BD%95/"/>
    
    
    <category term="加速github博客访问" scheme="http://example.com/tags/%E5%8A%A0%E9%80%9Fgithub%E5%8D%9A%E5%AE%A2%E8%AE%BF%E9%97%AE/"/>
    
  </entry>
  
  <entry>
    <title>2.外部中断(EXTI)</title>
    <link href="http://example.com/post/eb0bc4a3.html"/>
    <id>http://example.com/post/eb0bc4a3.html</id>
    <published>2024-08-03T09:21:42.000Z</published>
    <updated>2024-08-03T09:22:53.110Z</updated>
    
    <content type="html"><![CDATA[<h1 id="理论"><a href="#理论" class="headerlink" title="理论"></a><center>理论</center></h1><p>NVIC：嵌套向量中断控制器（<a href="https://blog.csdn.net/m0_74761015/article/details/136269042">解释教程</a>）</p><p>外部通用中断线(EXTI0~EXTI15)：每个GPIO设置成中断模式，与中断控制器连接的线</p><h2 id="外部中断触发方式"><a href="#外部中断触发方式" class="headerlink" title="外部中断触发方式"></a><center>外部中断触发方式</center></h2><p>上升沿触发、下降沿触发、双边沿触发</p><h2 id="外部中断触发函数"><a href="#外部中断触发函数" class="headerlink" title="外部中断触发函数"></a><center>外部中断触发函数</center></h2><p>在stm32f1xx_it.c文件里</p><table><thead><tr><th>函数</th></tr></thead><tbody><tr><td>EXTI0_IRQHandler</td></tr><tr><td>EXTI1_IRQHandler</td></tr><tr><td>EXTI2_IRQHandler</td></tr><tr><td>EXTI3_IRQHandler</td></tr><tr><td>EXTI4_IRQHandler</td></tr><tr><td>EXTI9_5_IRQHandler</td></tr><tr><td>EXTI15_10_IRQHandler</td></tr></tbody></table><h1 id="代码编写"><a href="#代码编写" class="headerlink" title="代码编写"></a><center>代码编写</center></h1><p>实验：按键PE3控制蜂鸣器(PB8)、按键PE4控制LED灯(PB5)</p><h2 id="Cube-IDE代码"><a href="#Cube-IDE代码" class="headerlink" title="Cube IDE代码"></a><center>Cube IDE代码</center></h2><p>Cube IDE中编写</p><h3 id="LED灯、蜂鸣器、按键配置"><a href="#LED灯、蜂鸣器、按键配置" class="headerlink" title="LED灯、蜂鸣器、按键配置"></a><center>LED灯、蜂鸣器、按键配置</center></h3><p>LED灯、蜂鸣器配置，上一篇已经说过，<a href="https://blog.csdn.net/qq_65047384/article/details/140796557?spm=1001.2014.3001.5501">地址</a></p><p>按键设置<code>下降沿触发</code>(也可上升沿触发)，GPIO Pull-up&#x2F;Pull-down：设置上拉，空闲状态为高电平</p><p>按键没按下时高电平，按下时有下降沿和上升沿，所以两个触发都可，按键这里是中断触发功能，不是GPIO输入功能</p><img src="https://cdn.d3iiz.top/gh/xinzai-x/MyPic1/img/202408031722280.png" alt="按键设置图" style="zoom: 33%;">]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;理论&quot;&gt;&lt;a href=&quot;#理论&quot; class=&quot;headerlink&quot; title=&quot;理论&quot;&gt;&lt;/a&gt;&lt;center&gt;理论&lt;/center&gt;&lt;/h1&gt;&lt;p&gt;NVIC：嵌套向量中断控制器（&lt;a href=&quot;https://blog.csdn.net/m0_7476</summary>
      
    
    
    
    <category term="32单片机" scheme="http://example.com/categories/32%E5%8D%95%E7%89%87%E6%9C%BA/"/>
    
    
    <category term="32单片机" scheme="http://example.com/tags/32%E5%8D%95%E7%89%87%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>ST-LINK未能串口keil识别的一个可能解决方案（前提驱动安装无问题）</title>
    <link href="http://example.com/post/a3ad0b3a.html"/>
    <id>http://example.com/post/a3ad0b3a.html</id>
    <published>2024-08-03T08:56:06.000Z</published>
    <updated>2024-08-03T08:58:52.240Z</updated>
    
    <content type="html"><![CDATA[<p>打开这个软件，在点击清除之前，按住单片机复位按钮不放，点击清除按钮，等待3-5秒放开复位按钮，即可清除重置，若提示没识别到，多重复几次，即可重置，重置完成之后再回到烧写软件，即可烧写成功</p><img src="https://cdn.d3iiz.top/gh/xinzai-x/MyPic1/img/202408031657478.png" alt="软件图" style="zoom:50%;"><p>在烧写时提示烧写成功后会显示如图所示</p><p><img src="https://cdn.d3iiz.top/gh/xinzai-x/MyPic1/img/202408031658168.png" alt="错误提示图"></p><p>解决方法：可能某个地方设置错误，我这里是这个没有设置成 Serial Wire，可以把全部设置重新检查一遍</p><p><img src="https://cdn.d3iiz.top/gh/xinzai-x/MyPic1/img/202408031657360.png" alt="方法图"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;打开这个软件，在点击清除之前，按住单片机复位按钮不放，点击清除按钮，等待3-5秒放开复位按钮，即可清除重置，若提示没识别到，多重复几次，即可重置，重置完成之后再回到烧写软件，即可烧写成功&lt;/p&gt;
&lt;img src=&quot;https://cdn.d3iiz.top/gh/xinz</summary>
      
    
    
    
    <category term="技术积累记录" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF%E7%A7%AF%E7%B4%AF%E8%AE%B0%E5%BD%95/"/>
    
    
    <category term="ST-LINK未能串口keil识别解决方案" scheme="http://example.com/tags/ST-LINK%E6%9C%AA%E8%83%BD%E4%B8%B2%E5%8F%A3keil%E8%AF%86%E5%88%AB%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    
  </entry>
  
  <entry>
    <title>STM32CubeIDE代码字体大小</title>
    <link href="http://example.com/post/43a9b762.html"/>
    <id>http://example.com/post/43a9b762.html</id>
    <published>2024-08-03T08:52:40.000Z</published>
    <updated>2024-08-03T08:56:33.993Z</updated>
    
    <content type="html"><![CDATA[<p> 进入首选项设置</p><img src="https://cdn.d3iiz.top/gh/xinzai-x/MyPic1/img/202408031654048.png" alt="img" style="zoom:50%;"><p>搜索editor，按照图中标号，进行设置</p><img src="https://cdn.d3iiz.top/gh/xinzai-x/MyPic1/img/202408031654274.png" alt="img" style="zoom:50%;"><p>按图中标号进行设置，选择需要的字号</p><img src="https://cdn.d3iiz.top/gh/xinzai-x/MyPic1/img/202408031654824.png" alt="img" style="zoom:50%;"><p>到此设置完成</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt; 进入首选项设置&lt;/p&gt;
&lt;img src=&quot;https://cdn.d3iiz.top/gh/xinzai-x/MyPic1/img/202408031654048.png&quot; alt=&quot;img&quot; style=&quot;zoom:50%;&quot;&gt;

&lt;p&gt;搜索editor，按照图中标号</summary>
      
    
    
    
    <category term="技术积累记录" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF%E7%A7%AF%E7%B4%AF%E8%AE%B0%E5%BD%95/"/>
    
    
    <category term="STM32CubeIDE代码字体大小" scheme="http://example.com/tags/STM32CubeIDE%E4%BB%A3%E7%A0%81%E5%AD%97%E4%BD%93%E5%A4%A7%E5%B0%8F/"/>
    
  </entry>
  
  <entry>
    <title>DHT11dht11.c(18) error C174 return-expression on void-function</title>
    <link href="http://example.com/post/c4236caa.html"/>
    <id>http://example.com/post/c4236caa.html</id>
    <published>2024-08-03T08:46:17.000Z</published>
    <updated>2024-08-03T09:06:37.464Z</updated>
    
    <content type="html"><![CDATA[<p>表示在函数dht11.c的第18行，有一个返回表达式出现在了一个返回类型为void的函数中。在C语言中，如果一个函数的声明或定义中指定了返回类型为void，那么这个函数不能有任何返回值。</p><p>​    要解决这个问题，你需要检查dht11.c文件中第18行的代码，确保没有返回值。如果该行代码确实需要返回一个值，那么你需要将该函数的返回类型修改为非void类型</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;表示在函数dht11.c的第18行，有一个返回表达式出现在了一个返回类型为void的函数中。在C语言中，如果一个函数的声明或定义中指定了返回类型为void，那么这个函数不能有任何返回值。&lt;/p&gt;
&lt;p&gt;​    要解决这个问题，你需要检查dht11.c文件中第18行的代码，</summary>
      
    
    
    
    <category term="错误记录" scheme="http://example.com/categories/%E9%94%99%E8%AF%AF%E8%AE%B0%E5%BD%95/"/>
    
    
  </entry>
  
  <entry>
    <title>STM32烧录的时候报错：Error :Flash Download failed -“Cortex-M3“</title>
    <link href="http://example.com/post/63d3dd68.html"/>
    <id>http://example.com/post/63d3dd68.html</id>
    <published>2024-08-03T08:46:17.000Z</published>
    <updated>2024-08-03T09:07:49.314Z</updated>
    
    <content type="html"><![CDATA[<p> 点击图中标号1，按顺序点击进入设置</p><img src="https://cdn.d3iiz.top/gh/xinzai-x/MyPic1/img/202408031700928.png" alt="img" style="zoom:50%;"><p>按图中标序，进入添加页面</p><img src="https://cdn.d3iiz.top/gh/xinzai-x/MyPic1/img/202408031700487.png" alt="img" style="zoom:50%;"><p>添加图中所选，然后一直确定退出即可，若没有图中所示选项，可能软件没下载对</p><img src="https://cdn.d3iiz.top/gh/xinzai-x/MyPic1/img/202408031700644.png" alt="img" style="zoom:50%;"><p>添加后，即可烧录成功。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt; 点击图中标号1，按顺序点击进入设置&lt;/p&gt;
&lt;img src=&quot;https://cdn.d3iiz.top/gh/xinzai-x/MyPic1/img/202408031700928.png&quot; alt=&quot;img&quot; style=&quot;zoom:50%;&quot;&gt;

&lt;p&gt;按图中标序</summary>
      
    
    
    
    <category term="错误记录" scheme="http://example.com/categories/%E9%94%99%E8%AF%AF%E8%AE%B0%E5%BD%95/"/>
    
    
  </entry>
  
  <entry>
    <title>stm32cubeIDE与stm32cubeMX库文件安装路径自定义设置</title>
    <link href="http://example.com/post/32e9e993.html"/>
    <id>http://example.com/post/32e9e993.html</id>
    <published>2024-08-03T08:44:26.000Z</published>
    <updated>2024-08-03T08:53:19.094Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1、-stm32cubeMX库文件安装路径自定义设置"><a href="#1、-stm32cubeMX库文件安装路径自定义设置" class="headerlink" title="1、 stm32cubeMX库文件安装路径自定义设置"></a>1、 stm32cubeMX库文件安装路径自定义设置</h1><p>打开stm32cubeMX软件，依次点击标题栏【Help】→【Updater Settings】 </p><img src="https://cdn.d3iiz.top/gh/xinzai-x/MyPic1/img/202408031651690.png" alt="img" style="zoom:33%;"><hr><p>点击图中的【Browser】，选择自己想要存放库文件的文件夹，选择完成后点击【OK】即可设置成功。 </p><img src="https://cdn.d3iiz.top/gh/xinzai-x/MyPic1/img/202408031649589.png" alt="img" style="zoom:33%;"><p> PS：这里的路径建议选择软件的安装目录</p><h1 id="2、-stm32cubeIDE库安装路径自定义设置"><a href="#2、-stm32cubeIDE库安装路径自定义设置" class="headerlink" title="2、 stm32cubeIDE库安装路径自定义设置"></a>2、 stm32cubeIDE库安装路径自定义设置</h1><p>首先打开 stm32cubeIDE软件，然后依次点击【Window】→【Preference】</p><img src="https://cdn.d3iiz.top/gh/xinzai-x/MyPic1/img/202408031649667.png" alt="img" style="zoom: 50%;"><hr><p> 依次点击左侧【STM32Cube】→【Firmware Updater】，点击上图中的【Browser】，选择自己想要存放库文件的文件夹，选择完成后点击【Apply and Close】即可设置成功</p><img src="https://cdn.d3iiz.top/gh/xinzai-x/MyPic1/img/202408031650943.png" alt="img" style="zoom: 33%;"><p>PS：stm32cubeIDE与stm32cubeMX的库文件是通用的，也可以直接选择了stm32cubeMX的库文件路径，这样stm32cubeIDE就可以自动识别文件夹中已有的库文件，避免库文件重复下载，节省了内存。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;1、-stm32cubeMX库文件安装路径自定义设置&quot;&gt;&lt;a href=&quot;#1、-stm32cubeMX库文件安装路径自定义设置&quot; class=&quot;headerlink&quot; title=&quot;1、 stm32cubeMX库文件安装路径自定义设置&quot;&gt;&lt;/a&gt;1、 stm32</summary>
      
    
    
    
    <category term="技术积累记录" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF%E7%A7%AF%E7%B4%AF%E8%AE%B0%E5%BD%95/"/>
    
    
    <category term="IDE与MX库文件安装路径自定义设置" scheme="http://example.com/tags/IDE%E4%B8%8EMX%E5%BA%93%E6%96%87%E4%BB%B6%E5%AE%89%E8%A3%85%E8%B7%AF%E5%BE%84%E8%87%AA%E5%AE%9A%E4%B9%89%E8%AE%BE%E7%BD%AE/"/>
    
  </entry>
  
  <entry>
    <title>新电脑 个人博客迁移</title>
    <link href="http://example.com/post/362c3b0.html"/>
    <id>http://example.com/post/362c3b0.html</id>
    <published>2024-08-03T08:29:18.000Z</published>
    <updated>2024-08-03T08:42:51.072Z</updated>
    
    <content type="html"><![CDATA[<h1 id="安装和配置所需要的软件"><a href="#安装和配置所需要的软件" class="headerlink" title="安装和配置所需要的软件"></a><center>安装和配置所需要的软件</center></h1><p>安装Git 客户端，安装过程省略，一般默认下一步</p><p>​    下载地址：<a href="https://git-scm.com/downloads">Git客户端</a></p><p>​    这个无脑下一步即可无需配置</p><p>安装node JS，安装过程省略，一般默认下一步</p><p>​    下载地址：<a href="https://nodejs.cn/download/">node JS</a></p><p>​    配置看这位大佬教程：<a href="https://blog.csdn.net/qq_38514863/article/details/123145473">地址</a></p><p>拷贝个人博客文件夹中，部分文件，到新电脑，存放个人博客文件的文件夹中</p><blockquote><p>_config.yml</p><p>package.json</p><p>scaffolds&#x2F;</p><p>source&#x2F;</p><p>themes&#x2F;</p><p>.gitignore    这个图中没标，注意保留</p></blockquote><img src="https://cdn.d3iiz.top/gh/xinzai-x/MyPic1/img/202408031631634.png" alt="img" style="zoom:33%;"><h1 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a><center>安装hexo</center></h1><p>在 cmd 下输入下面指令安装 hexo</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br></pre></td></tr></table></figure><img src="https://cdn.d3iiz.top/gh/xinzai-x/MyPic1/img/202408031631749.png" alt="img" style="zoom:50%;"><h1 id="配置博客"><a href="#配置博客" class="headerlink" title="配置博客"></a><center>配置博客</center></h1><p>进入 F:&#x2F;Blog 目录（你拷贝到新电脑的目录），右键git，输入下面指令安装相关模块</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">// “ ”内换成自己对应的</span><br><span class="line">git config --global user.name &quot;HuGen&quot;</span><br><span class="line">git config --global user.email &quot;LoveHuGen@126q.com&quot;</span><br><span class="line">ssh-keygen -t rsa -C &quot;LoveHuGen@126q.com&quot;</span><br></pre></td></tr></table></figure><p>Github 添加 SSH Keys</p><p>1、在本地创建 <code>SSH Keys</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;wujiajiansh@163.com&quot;</span><br><span class="line">//一直回车，直到结束</span><br></pre></td></tr></table></figure><p>2、复制key</p><img src="https://cdn.d3iiz.top/gh/xinzai-x/MyPic1/img/202408031629005.png" alt="img" style="zoom:50%;"><p>进入登录GitHub，在设置中添加ssh key</p><img src="https://i-blog.csdnimg.cn/blog_migrate/3431a3fd067aaa03d8860c1652da41c9.png" alt="img" style="zoom: 33%;"><p>将上一步中的文件里面的内容全部复制进去 ，点击添加</p><img src="https://cdn.d3iiz.top/gh/xinzai-x/MyPic1/img/202408031629211.png" alt="img" style="zoom:33%;"><h1 id="部署博客"><a href="#部署博客" class="headerlink" title="部署博客"></a><center>部署博客</center></h1><p>打开电脑的：Windows PowerShell 进入博客目录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">npm install</span><br><span class="line">npm install hexo-deployer-git --save  // 文章部署到 git 的模块</span><br><span class="line">（下面为选择安装）</span><br><span class="line">npm install hexo-generator-feed --save  // 建立 RSS 订阅</span><br><span class="line">npm install hexo-generator-sitemap --save // 建立站点地图</span><br></pre></td></tr></table></figure><p>依次命令安装 </p><img src="https://cdn.d3iiz.top/gh/xinzai-x/MyPic1/img/202408031629186.png" alt="img" style="zoom: 50%;"><p>全部安装完成之后，一键三连部署上传</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo cl &amp;&amp; hexo g  &amp;&amp; hexo d</span><br></pre></td></tr></table></figure><p>到此全部完成，感谢观看！！！ </p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;安装和配置所需要的软件&quot;&gt;&lt;a href=&quot;#安装和配置所需要的软件&quot; class=&quot;headerlink&quot; title=&quot;安装和配置所需要的软件&quot;&gt;&lt;/a&gt;&lt;center&gt;安装和配置所需要的软件&lt;/center&gt;&lt;/h1&gt;&lt;p&gt;安装Git 客户端，安装过程省略，</summary>
      
    
    
    
    <category term="技术积累记录" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF%E7%A7%AF%E7%B4%AF%E8%AE%B0%E5%BD%95/"/>
    
    
    <category term="个人博客迁移" scheme="http://example.com/tags/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E8%BF%81%E7%A7%BB/"/>
    
  </entry>
  
  <entry>
    <title>1.GPIO</title>
    <link href="http://example.com/post/adb202b7.html"/>
    <id>http://example.com/post/adb202b7.html</id>
    <published>2024-08-02T07:47:03.000Z</published>
    <updated>2024-08-03T08:01:28.851Z</updated>
    
    <content type="html"><![CDATA[<h1 id="理论说明"><a href="#理论说明" class="headerlink" title="理论说明"></a><center>理论说明</center></h1><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a><center>输入</center></h2><p>上拉输入：拉高电平</p><p>下拉输入：拉低电平</p><p>浮空输入：不拉高也不拉低电平</p><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a><center>输出</center></h2><p>开漏输出：不能输出高电平（P-MOS不可用，则只能低电平）</p><p>推挽输出：可输出高低电平</p><img src="https://cdn.d3iiz.top/gh/xinzai-x/MyPic/img/202408022058509.png" alt="输入输出电路图" style="zoom:33%;"><p>输出速率</p><ul><li>Low：2MHz</li><li>Medium：10MHz</li><li>High：50MHz</li></ul><h1 id="代码编写"><a href="#代码编写" class="headerlink" title="代码编写"></a><center>代码编写</center></h1><p>LED灯闪烁、按键PE3控制蜂鸣器(PB8)开关、按键PE4控制 LED2(PE5) 亮灭、光敏传感器(PB11)控制 LED1(PB5) 亮灭</p><h2 id="Cube-IDE代码"><a href="#Cube-IDE代码" class="headerlink" title="Cube IDE代码"></a><center>Cube IDE代码</center></h2><p>Cube IDE中编写</p><h3 id="实验一：LED灯闪烁"><a href="#实验一：LED灯闪烁" class="headerlink" title="实验一：LED灯闪烁"></a><center>实验一：LED灯闪烁</center></h3><h4 id="LED灯配置"><a href="#LED灯配置" class="headerlink" title="LED灯配置"></a><center>LED灯配置</center></h4><p>配置引脚功能：</p><p>GPIO Pull-up&#x2F;Pull-down：因为LED灯初始化时就已经设置了高低电平，没有空闲状态，无论是上拉还是下拉都起不到作用</p><img src="https://cdn.d3iiz.top/gh/xinzai-x/MyPic/img/202408022058550.png" alt="GPIO配置" style="zoom:33%;"><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a><center>代码</center></h4><p>在main.c文件，大概94行开始</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">  <span class="comment">/* USER CODE BEGIN WHILE */</span></span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//参数1：GPIO口名字(PB)，参数2：GPIO数字(PB5中的5)，参数3：高低电平(0,1)</span></span><br><span class="line">HAL_GPIO_WritePin(LED1_GPIO_Port, LED1_Pin, <span class="number">0</span>);</span><br><span class="line">HAL_Delay(<span class="number">1000</span>);</span><br><span class="line">HAL_GPIO_WritePin(LED1_GPIO_Port, LED1_Pin, <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//HAL_GPIO_TogglePin(LED1_GPIO_Port, LED1_Pin);//电平反转,无需设置高低电平</span></span><br><span class="line">HAL_Delay(<span class="number">1000</span>);</span><br><span class="line"><span class="comment">/* USER CODE END WHILE */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* USER CODE BEGIN 3 */</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* USER CODE END 3 */</span></span><br></pre></td></tr></table></figure><h3 id="实验二：按键控制蜂鸣器、LED灯"><a href="#实验二：按键控制蜂鸣器、LED灯" class="headerlink" title="实验二：按键控制蜂鸣器、LED灯"></a><center>实验二：按键控制蜂鸣器、LED灯</center></h3><h4 id="按键、蜂鸣器配置"><a href="#按键、蜂鸣器配置" class="headerlink" title="按键、蜂鸣器配置"></a><center>按键、蜂鸣器配置</center></h4><p>按键PE3控制蜂鸣器(PB8)开关、按键PE4控制 LED2(PE5) 亮灭、光敏传感器(PB11)控制 LED1(PB5) 亮灭</p><p>按键：设置成<code>上拉输入</code>，PE4则为高电平，当按键按下时，PE4为0(可用if判断是否按下)，则按键按下(其它按钮同理)</p><img src="https://cdn.d3iiz.top/gh/xinzai-x/MyPic/img/202408022058792.png" alt="按键电路图" style="zoom:50%;"><p>LED灯、蜂鸣器(PB8)：输出高低电平，设置<code>推挽输出</code></p><p>光敏传感器(PB11)：高低电平由外界光照强度来决定，设置<code>浮空输入</code></p><p>按键配置：</p><img src="https://cdn.d3iiz.top/gh/xinzai-x/MyPic/img/202408022102523.png" alt="按钮配置" style="zoom:33%;"><p>LED灯配置方面已经说明，直接配置</p><p>蜂鸣器配置(PB8)：</p><p>GPIO Pull-up&#x2F;Pull-down：因为蜂鸣器初始化时就已经设置了高低电平，没有空闲状态，无论是上拉还是下拉都起不到作用</p><img src="https://cdn.d3iiz.top/gh/xinzai-x/MyPic/img/202408022102449.png" alt="蜂鸣器配置图" style="zoom: 33%;"><p>光敏传感器配置(PB11)：</p><img src="https://cdn.d3iiz.top/gh/xinzai-x/MyPic/img/202408022102960.png" alt="光敏传感器配置图" style="zoom:33%;"><p>光敏传感器AO  DO有什么区别？</p><p>AO：输出模拟信号</p><p>DO：输出数字信号（高低电平）</p><h4 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a><center>代码</center></h4><p>在main.c文件，大概94行开始</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* USER CODE BEGIN WHILE */</span></span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="number">0</span> == HAL_GPIO_ReadPin(Key1_GPIO_Port, Key1_Pin))<span class="comment">//检测读取按键高低电平</span></span><br><span class="line">&#123;</span><br><span class="line">HAL_Delay(<span class="number">120</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="number">0</span> == HAL_GPIO_ReadPin(Key1_GPIO_Port, Key1_Pin))<span class="comment">//检测读取按键高低电平</span></span><br><span class="line">&#123;</span><br><span class="line">HAL_GPIO_TogglePin(BEEP_GPIO_Port, BEEP_Pin);<span class="comment">//电平反转,无需设置高低电平</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="number">0</span> == HAL_GPIO_ReadPin(Key2_GPIO_Port, Key2_Pin))<span class="comment">//检测读取按键输入高低电平</span></span><br><span class="line">&#123;</span><br><span class="line">HAL_Delay(<span class="number">120</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="number">0</span> == HAL_GPIO_ReadPin(Key2_GPIO_Port, Key2_Pin))<span class="comment">//检测读取按键高低电平</span></span><br><span class="line">&#123;</span><br><span class="line">HAL_GPIO_TogglePin(LED2_GPIO_Port, LED2_Pin);<span class="comment">//电平反转,无需设置高低电平</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="number">0</span> == HAL_GPIO_ReadPin(SUN_GPIO_Port, SUN_Pin))<span class="comment">//检测读取光敏传感器输入高低电平</span></span><br><span class="line">&#123;</span><br><span class="line">HAL_GPIO_WritePin(LED1_GPIO_Port, LED1_Pin, <span class="number">1</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">HAL_GPIO_WritePin(LED1_GPIO_Port, LED1_Pin, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">   <span class="comment">/* USER CODE END WHILE */</span></span><br><span class="line"></span><br><span class="line">   <span class="comment">/* USER CODE BEGIN 3 */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>效果展示：<br>[video(video-8ZdCXtcq-1722497936311)(type-csdn)(url-<a href="https://live.csdn.net/v/embed/414340)(image-https://img-blog.csdnimg.cn/img_convert/1ddf5e3e8fa7bae7111014a6e3b0bfed.jpeg)(title-)]">https://live.csdn.net/v/embed/414340)(image-https://img-blog.csdnimg.cn/img_convert/1ddf5e3e8fa7bae7111014a6e3b0bfed.jpeg)(title-)]</a></p><h3 id="代码过程"><a href="#代码过程" class="headerlink" title="代码过程"></a><center>代码过程</center></h3><p>初始化时钟</p><ol><li>初始化时钟</li></ol><p>APB2ENR：外设时钟使能寄存器</p><img src="https://cdn.d3iiz.top/gh/xinzai-x/MyPic/img/202408022058546.png" alt="外设时钟使能寄存器图" style="zoom:50%;"><p>大概功能：将APB2ENR(外设时钟使能寄存器)初始化IO端口B时钟开启</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//使能时钟初始化代码，在gpio.c中48行</span></span><br><span class="line">__HAL_RCC_GPIOE_CLK_ENABLE();</span><br><span class="line">__HAL_RCC_GPIOB_CLK_ENABLE();</span><br><span class="line">__HAL_RCC_GPIOA_CLK_ENABLE();</span><br><span class="line"></span><br><span class="line"><span class="comment">//__HAL_RCC_GPIOB_CLK_ENABLE(); 如下过程</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __HAL_RCC_GPIOB_CLK_ENABLE()   do &#123; \</span></span><br><span class="line"><span class="meta"> __IO uint32_t tmpreg;  <span class="comment">/*定义一个变量*/</span>\</span></span><br><span class="line"><span class="meta">SET_BIT(RCC-&gt;APB2ENR, RCC_APB2ENR_IOPBEN);\</span></span><br><span class="line"><span class="meta"><span class="comment">/* Delay after an RCC peripheral clock enabling(下方两个延时作用) */</span>\</span></span><br><span class="line"><span class="meta">tmpreg = READ_BIT(RCC-&gt;APB2ENR, RCC_APB2ENR_IOPBEN);\</span></span><br><span class="line"><span class="meta">UNUSED(tmpreg); \</span></span><br><span class="line"><span class="meta">&#125; while(0U)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//SET_BIT(RCC-&gt;APB2ENR, RCC_APB2ENR_IOPBEN); 的解释</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//1.RCC_APB2ENR_IOPBEN</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> RCC_APB2ENR_IOPBEN_Pos(3U)                              </span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> RCC_APB2ENR_IOPBEN_Msk(0x1UL &lt;&lt; RCC_APB2ENR_IOPBEN_Pos)<span class="comment">/*RCC_APB2ENR_IOPBEN_Msk 等于0x1&lt;&lt; 3 结果：0x00000008 */</span></span></span><br><span class="line"><span class="comment">//0x1 = 0000 0001 &lt;&lt; 3 = 0000 1000(对应上图,位3为1) = 0x00000008 </span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> RCC_APB2ENR_IOPBENRCC_APB2ENR_IOPBEN_Msk<span class="comment">/* RCC_APB2ENR_IOPBEN 等于0x00000008 */</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//2.RCC寄存器，RCC_BASE强转成这个RCC_TypeDef类型的结构体</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> RCC                 ((RCC_TypeDef *)RCC_BASE)</span></span><br><span class="line"><span class="comment">//RCC_BASE = 由总线矩阵偏移到AHB系统总线再偏移到复位和时钟控制(RCC)(可看参考手册的系统结构)(下面三行从下往上看)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> RCC_BASE              (AHBPERIPH_BASE + 0x00001000UL)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> AHBPERIPH_BASE        (PERIPH_BASE + 0x00020000UL)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PERIPH_BASE           0x40000000UL</span></span><br><span class="line"><span class="comment">//RCC_TypeDef（结构体）</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  __IO <span class="type">uint32_t</span> CR;</span><br><span class="line">  __IO <span class="type">uint32_t</span> CFGR;</span><br><span class="line">  __IO <span class="type">uint32_t</span> CIR;</span><br><span class="line">  __IO <span class="type">uint32_t</span> APB2RSTR;</span><br><span class="line">  __IO <span class="type">uint32_t</span> APB1RSTR;</span><br><span class="line">  __IO <span class="type">uint32_t</span> AHBENR;</span><br><span class="line">  __IO <span class="type">uint32_t</span> APB2ENR;</span><br><span class="line">  __IO <span class="type">uint32_t</span> APB1ENR;</span><br><span class="line">  __IO <span class="type">uint32_t</span> BDCR;</span><br><span class="line">  __IO <span class="type">uint32_t</span> CSR;</span><br><span class="line">&#125; RCC_TypeDef;</span><br><span class="line"></span><br><span class="line"><span class="comment">//3.RCC-&gt;APB2ENR</span></span><br><span class="line">RCC指向APB2ENR，则就是结构体内的__IO <span class="type">uint32_t</span> APB2ENR;</span><br><span class="line"></span><br><span class="line"><span class="comment">//将APB2ENR的位3置1</span></span><br></pre></td></tr></table></figure><ol start="2"><li>初始化引脚</li></ol><p>GPIOx_BSRR：端口位设置&#x2F;清除寄存器</p><p>低16位中若有某一位 置1，则这个引脚为1(高电平)，若都为0，则不影响</p><p>高16位中若有某一位 置1，则这个引脚位0(低电平)，若都为0，则不影响</p><img src="https://cdn.d3iiz.top/gh/xinzai-x/MyPic/img/202408022101304.png" alt="端口位设置/清除寄存器图" style="zoom:50%;"><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//gpio.c中第53行</span></span><br><span class="line"><span class="comment">/*Configure GPIO pin Output Level */</span></span><br><span class="line">HAL_GPIO_WritePin(LED2_GPIO_Port, LED2_Pin, GPIO_PIN_SET);</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">HAL_GPIO_WritePin</span><span class="params">(GPIO_TypeDef *GPIOx, <span class="type">uint16_t</span> GPIO_Pin, GPIO_PinState PinState)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="comment">/* Check the parameters */</span></span><br><span class="line">  assert_param(IS_GPIO_PIN(GPIO_Pin));</span><br><span class="line">  assert_param(IS_GPIO_PIN_ACTION(PinState));</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (PinState != GPIO_PIN_RESET)<span class="comment">//GPIO_PIN_RESET为0</span></span><br><span class="line">  &#123;</span><br><span class="line">    GPIOx-&gt;BSRR = GPIO_Pin;<span class="comment">//给BSRR寄存器 低16位赋值 置1</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">    GPIOx-&gt;BSRR = (<span class="type">uint32_t</span>)GPIO_Pin &lt;&lt; <span class="number">16u</span>;<span class="comment">//给BSRR寄存器 高16位赋值 置0</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//GPIO_TypeDef *GPIOx 等于 LED2_GPIO_Port</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LED2_GPIO_Port GPIOE</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> GPIOE((GPIO_TypeDef *)GPIOE_BASE)</span></span><br><span class="line"><span class="comment">//GPIO_TypeDef 强转</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  __IO <span class="type">uint32_t</span> CRL;</span><br><span class="line">  __IO <span class="type">uint32_t</span> CRH;</span><br><span class="line">  __IO <span class="type">uint32_t</span> IDR;</span><br><span class="line">  __IO <span class="type">uint32_t</span> ODR;</span><br><span class="line">  __IO <span class="type">uint32_t</span> BSRR;</span><br><span class="line">  __IO <span class="type">uint32_t</span> BRR;</span><br><span class="line">  __IO <span class="type">uint32_t</span> LCKR;</span><br><span class="line">&#125; GPIO_TypeDef;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> GPIOE_BASE            (APB2PERIPH_BASE + 0x00001800UL)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> APB2PERIPH_BASE       (PERIPH_BASE + 0x00010000UL)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PERIPH_BASE           0x40000000UL</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//GPIO_Pin 等于 LED2_Pin</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LED2_Pin GPIO_PIN_5</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> GPIO_PIN_5((uint16_t)0x0020)  <span class="comment">/* Pin 5 selected    */</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><ol start="3"><li>写实际需求（输入：read  判断，输出：write   0&#x2F;1）</li></ol><h2 id="Keil代码"><a href="#Keil代码" class="headerlink" title="Keil代码"></a><center>Keil代码</center></h2><p>修改的地方如下：</p><p>main.c</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//main函数中</span></span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="number">0</span> == HAL_GPIO_ReadPin(Key1_GPIO_Port, Key1_Pin))<span class="comment">//检测读取按键高低电平</span></span><br><span class="line">&#123;</span><br><span class="line">HAL_Delay(<span class="number">120</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="number">0</span> == HAL_GPIO_ReadPin(Key1_GPIO_Port, Key1_Pin))<span class="comment">//检测读取按键高低电平</span></span><br><span class="line">&#123;</span><br><span class="line">HAL_GPIO_TogglePin(BEEP_GPIO_Port, BEEP_Pin);<span class="comment">//电平反转,无需设置高低电平</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="number">0</span> == HAL_GPIO_ReadPin(Key2_GPIO_Port, Key2_Pin))<span class="comment">//检测读取按键输入高低电平</span></span><br><span class="line">&#123;</span><br><span class="line">HAL_Delay(<span class="number">120</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="number">0</span> == HAL_GPIO_ReadPin(Key2_GPIO_Port, Key2_Pin))<span class="comment">//检测读取按键高低电平</span></span><br><span class="line">&#123;</span><br><span class="line">HAL_GPIO_TogglePin(LED2_GPIO_Port, LED2_Pin);<span class="comment">//电平反转,无需设置高低电平</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="number">0</span> == HAL_GPIO_ReadPin(SUN_GPIO_Port, SUN_Pin))<span class="comment">//检测读取光敏传感器输入高低电平</span></span><br><span class="line">&#123;</span><br><span class="line">HAL_GPIO_WritePin(LED1_GPIO_Port, LED1_Pin, <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">HAL_GPIO_WritePin(LED1_GPIO_Port, LED1_Pin, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>gpio.c</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">MDK_GPIO_Init</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">GPIO_InitTypeDef GPIO_InitStruct = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* GPIO Ports Clock Enable */</span></span><br><span class="line">  __HAL_RCC_GPIOE_CLK_ENABLE();</span><br><span class="line">  __HAL_RCC_GPIOB_CLK_ENABLE();</span><br><span class="line">  __HAL_RCC_GPIOA_CLK_ENABLE();</span><br><span class="line"></span><br><span class="line">  <span class="comment">/*Configure GPIO pin Output Level */</span></span><br><span class="line">  HAL_GPIO_WritePin(LED2_GPIO_Port, LED2_Pin, GPIO_PIN_SET);</span><br><span class="line"></span><br><span class="line">  <span class="comment">/*Configure GPIO pin Output Level */</span></span><br><span class="line">  HAL_GPIO_WritePin(LED1_GPIO_Port, LED1_Pin, GPIO_PIN_SET);</span><br><span class="line"></span><br><span class="line">  <span class="comment">/*Configure GPIO pin Output Level */</span></span><br><span class="line">  HAL_GPIO_WritePin(BEEP_GPIO_Port, BEEP_Pin, GPIO_PIN_RESET);</span><br><span class="line"></span><br><span class="line">  <span class="comment">/*Configure GPIO pins : PEPin PEPin */</span></span><br><span class="line">  GPIO_InitStruct.Pin = Key1_Pin|Key2_Pin;</span><br><span class="line">  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;</span><br><span class="line">  GPIO_InitStruct.Pull = GPIO_PULLUP;</span><br><span class="line">  HAL_GPIO_Init(GPIOE, &amp;GPIO_InitStruct);</span><br><span class="line"></span><br><span class="line">  <span class="comment">/*Configure GPIO pin : PtPin */</span></span><br><span class="line">  GPIO_InitStruct.Pin = LED2_Pin;</span><br><span class="line">  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;</span><br><span class="line">  GPIO_InitStruct.Pull = GPIO_NOPULL;</span><br><span class="line">  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;</span><br><span class="line">  HAL_GPIO_Init(LED2_GPIO_Port, &amp;GPIO_InitStruct);</span><br><span class="line"></span><br><span class="line">  <span class="comment">/*Configure GPIO pin : PtPin */</span></span><br><span class="line">  GPIO_InitStruct.Pin = SUN_Pin;</span><br><span class="line">  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;</span><br><span class="line">  GPIO_InitStruct.Pull = GPIO_NOPULL;</span><br><span class="line">  HAL_GPIO_Init(SUN_GPIO_Port, &amp;GPIO_InitStruct);</span><br><span class="line"></span><br><span class="line">  <span class="comment">/*Configure GPIO pin : PtPin */</span></span><br><span class="line">  GPIO_InitStruct.Pin = LED1_Pin;</span><br><span class="line">  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;</span><br><span class="line">  GPIO_InitStruct.Pull = GPIO_NOPULL;</span><br><span class="line">  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;</span><br><span class="line">  HAL_GPIO_Init(LED1_GPIO_Port, &amp;GPIO_InitStruct);</span><br><span class="line"></span><br><span class="line">  <span class="comment">/*Configure GPIO pin : PtPin */</span></span><br><span class="line">  GPIO_InitStruct.Pin = BEEP_Pin;</span><br><span class="line">  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;</span><br><span class="line">  GPIO_InitStruct.Pull = GPIO_PULLUP;</span><br><span class="line">  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;</span><br><span class="line">  HAL_GPIO_Init(BEEP_GPIO_Port, &amp;GPIO_InitStruct);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>main.h</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//60行开始</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> Key1_Pin GPIO_PIN_3</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> Key1_GPIO_Port GPIOE</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> Key2_Pin GPIO_PIN_4</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> Key2_GPIO_Port GPIOE</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LED2_Pin GPIO_PIN_5</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LED2_GPIO_Port GPIOE</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SUN_Pin GPIO_PIN_11</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SUN_GPIO_Port GPIOB</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LED1_Pin GPIO_PIN_5</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LED1_GPIO_Port GPIOB</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> BEEP_Pin GPIO_PIN_8</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> BEEP_GPIO_Port GPIOB</span></span><br></pre></td></tr></table></figure><p>若烧录完成后，需要按复位按键才可正常，可尝试以下设置</p><p>第一步：</p><img src="https://cdn.d3iiz.top/gh/xinzai-x/MyPic/img/202408022101639.png" alt="设置1" style="zoom:50%;"><p>第二步：</p><img src="https://cdn.d3iiz.top/gh/xinzai-x/MyPic/img/202408022101545.png" alt="设置2" style="zoom:50%;">]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;理论说明&quot;&gt;&lt;a href=&quot;#理论说明&quot; class=&quot;headerlink&quot; title=&quot;理论说明&quot;&gt;&lt;/a&gt;&lt;center&gt;理论说明&lt;/center&gt;&lt;/h1&gt;&lt;h2 id=&quot;输入&quot;&gt;&lt;a href=&quot;#输入&quot; class=&quot;headerlink&quot; tit</summary>
      
    
    
    
    <category term="32单片机" scheme="http://example.com/categories/32%E5%8D%95%E7%89%87%E6%9C%BA/"/>
    
    
    <category term="32单片机" scheme="http://example.com/tags/32%E5%8D%95%E7%89%87%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>0.SMT32原理概述</title>
    <link href="http://example.com/post/99cd7d8.html"/>
    <id>http://example.com/post/99cd7d8.html</id>
    <published>2024-08-02T07:41:35.000Z</published>
    <updated>2024-08-03T08:01:22.525Z</updated>
    
    <content type="html"><![CDATA[<h1 id="51和32区别"><a href="#51和32区别" class="headerlink" title="51和32区别"></a><center>51和32区别</center></h1><p>位数：</p><p>&ensp;&ensp;&ensp;&ensp;51：8位（STC89C52）</p><p>&ensp;&ensp;&ensp;&ensp;32：32位（STM32F103ZET6）</p><p>时钟：</p><ul><li>51：11.0592Mhz晶振</li><li>32<ul><li>F103：8Mhz晶振(×9)，主频：72Mhz</li><li>F103：12Mhz晶振(×6)，主频：72Mhz</li><li>F407：168Mhz主频</li></ul></li></ul><h1 id="时钟"><a href="#时钟" class="headerlink" title="时钟"></a><center>时钟</center></h1><p>E：外部，I：内部</p><p>高速外部晶振：HSE</p><p>低速外部晶振：LSE</p><p>高速内部晶振：HSI</p><p>低速内部晶振：LSI</p><p>锁相环：让8MHz晶振变成72MHz主频</p><p>每个外设初始化的大致流程</p><ol><li>把图形化界面配置的参数赋值给对应的结构体的成员变量</li><li>把结构体地址当做参数传给初始化函数</li><li>初始化函数根据每个结构体成员变量操作对应的寄存器</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//时钟初始化</span></span><br><span class="line">SystemClock_Config();</span><br><span class="line"></span><br><span class="line">RCC_OscInitTypeDef RCC_OscInitStruct = &#123;<span class="number">0</span>&#125;;<span class="comment">//结构体类型变量</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//在void SystemClock_Config(void)中(main.c第133)</span></span><br><span class="line">RCC_OscInitStruct.HSEState = RCC_HSE_ON;<span class="comment">//(144行)</span></span><br><span class="line"></span><br><span class="line">HAL_RCC_OscConfig(&amp;RCC_OscInitStruct);<span class="comment">//(main.c第148)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)中</span></span><br><span class="line">__HAL_RCC_HSE_CONFIG(RCC_OscInitStruct-&gt;HSEState);<span class="comment">//377行</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __HAL_RCC_HSE_CONFIG(__STATE__)<span class="comment">//__STATE__ = RCC_OscInitStruct-&gt;HSEState(RCC_HSE_ON)           </span></span></span><br><span class="line">   <span class="keyword">do</span>&#123;                                                     </span><br><span class="line">     <span class="keyword">if</span> ((__STATE__) == RCC_HSE_ON)                        </span><br><span class="line">     &#123;                                                     </span><br><span class="line">       SET_BIT(RCC-&gt;CR, RCC_CR_HSEON);<span class="comment">//RCC-&gt;CR = 时钟控制寄存器(RCC_CR)</span></span><br><span class="line">     &#125; </span><br><span class="line"><span class="meta">#<span class="keyword">define</span> RCC_CR_HSEON_Pos           (16U)</span></span><br><span class="line"><span class="comment">//0x1左移16位（注意是二进制左移）               </span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> RCC_CR_HSEON_Msk           (0x1UL &lt;&lt; RCC_CR_HSEON_Pos)   <span class="comment">/*!&lt; 0x00010000 */</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> RCC_CR_HSEON               RCC_CR_HSEON_Msk</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//第17个数为1，则是第十六位，第16位：0：HSE振荡器关闭，1：HSE振荡器开启。</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SET_BIT(REG, BIT)     ((REG) |= (BIT))<span class="comment">//BIT = RCC_CR_HSEON(0x00010000)</span></span></span><br></pre></td></tr></table></figure><h1 id="STM32芯片参数"><a href="#STM32芯片参数" class="headerlink" title="STM32芯片参数"></a><center>STM32芯片参数</center></h1><p>Core: ARM 32-bit Cortex™-M3 CPU：ARM架构，32位单片机，内核型号</p><p>72 MHz maximum frequency：72MHz主频</p><p>芯片型号含义：</p><img src="https://cdn.d3iiz.top/gh/xinzai-x/MyPic/img/202408022046308.png" alt="芯片型号含义" style="zoom:50%;"><p> Flash：磁盘，RAM：运行内存</p><p>一般软件、代码等运行在RAM，但32单片机代码运行在Flash</p><p>3 × 12-bit, 1 µs A&#x2F;D converters</p><ul><li>A&#x2F;D converter &#x3D; ADC：A：模拟信号，D：数字信号，模拟信号转数字信号</li><li>3：3路ADC</li><li>Conversion range: 0 to 3.6 V：采样值 0-3.6V</li><li>12bit：$2^{12} &#x3D; 4096$，将采样范围分成4096份，即为采样精度，这个越高精度越高</li><li>2 × 12-bit D&#x2F;A converters &#x3D; DAC：数字信号转模拟信号</li><li>Serial wire debug (SWD) ：STL烧写</li><li>Up to 112 fast I&#x2F;O ports：112个IO口功能引脚</li><li>Up to 11 timers：11个定时器</li></ul><h1 id="软件安装与使用"><a href="#软件安装与使用" class="headerlink" title="软件安装与使用"></a><center>软件安装与使用</center></h1><p>注意：<code>所有路径不能有中文</code>(包含用户名)</p><p>安装：keil、STM32CubeMX、STM32CubeIDE（需要的留言）</p><p><a href="https://blog.csdn.net/qq_65047384/article/details/140686974">STM32CubeIDE与STM32CubeMX库文件安装路径自定义设置</a></p><p>搜索自己芯片型号（我的型号：<code>STM32F103ZET6</code>）</p><img src="https://cdn.d3iiz.top/gh/xinzai-x/MyPic/img/202408022046767.png" alt="便捷技巧" style="zoom:33%;"><h2 id="新建工程必须设置"><a href="#新建工程必须设置" class="headerlink" title="新建工程必须设置"></a><center>新建工程必须设置</center></h2><h3 id="STM32CubeMX"><a href="#STM32CubeMX" class="headerlink" title="STM32CubeMX"></a>STM32CubeMX</h3><img src="https://cdn.d3iiz.top/gh/xinzai-x/MyPic/img/202408022057113.png" alt="设置1" style="zoom:33%;"><hr><img src="https://cdn.d3iiz.top/gh/xinzai-x/MyPic/img/202408022057228.png" alt="设置2" style="zoom:33%;"><hr><img src="https://cdn.d3iiz.top/gh/xinzai-x/MyPic/img/202408022046933.png" alt="时钟配置" style="zoom:33%;"><hr><img src="https://cdn.d3iiz.top/gh/xinzai-x/MyPic/img/202408022046781.png" alt="工程" style="zoom:33%;"><hr><img src="https://cdn.d3iiz.top/gh/xinzai-x/MyPic/img/202408022046602.png" alt="工程1" style="zoom:33%;"><hr><p>完成，建工程</p><img src="https://cdn.d3iiz.top/gh/xinzai-x/MyPic/img/202408022054262.png" alt="完成" style="zoom: 33%;"><h3 id="STM32CubeIDE"><a href="#STM32CubeIDE" class="headerlink" title="STM32CubeIDE"></a>STM32CubeIDE</h3><p>新建工程</p><img src="https://cdn.d3iiz.top/gh/xinzai-x/MyPic/img/202408022046269.png" alt="新建工程" style="zoom: 50%;"><hr><img src="https://cdn.d3iiz.top/gh/xinzai-x/MyPic/img/202408022046143.png" alt="选型号" style="zoom:33%;"><hr><img src="https://cdn.d3iiz.top/gh/xinzai-x/MyPic/img/202408022054341.png" alt="工程名" style="zoom:33%;"><hr><p>版本号这里：1.8.5</p><img src="https://cdn.d3iiz.top/gh/xinzai-x/MyPic/img/202408022046327.png" alt="完成" style="zoom:33%;"><p>若别人工程为别的版本，需下载别的版本</p><img src="https://cdn.d3iiz.top/gh/xinzai-x/MyPic/img/202408022054735.png" alt="下载1" style="zoom:50%;"><p>下载工程对应版本即可</p><img src="https://cdn.d3iiz.top/gh/xinzai-x/MyPic/img/202408022046183.png" alt="下载对应版本" style="zoom:33%;"><hr><p>这里与STM32CubeMX相同，参考上面配置，最后：<code>ctrl + s</code> 保存</p><img src="https://cdn.d3iiz.top/gh/xinzai-x/MyPic/img/202408022046464.png" alt="在这里插入图片描述" style="zoom: 33%;"><p>Keil+CubeMX &#x3D; CubeIDE</p><h1 id="烧录"><a href="#烧录" class="headerlink" title="烧录"></a><center>烧录</center></h1><p>代码烧录方式</p><h2 id="ST-Link"><a href="#ST-Link" class="headerlink" title="ST-Link"></a><center>ST-Link</center></h2><p>将ST-Link烧写器与单片机连接</p><p><strong>CubeMX keil软件烧录</strong></p><p>编译无错误后，点击图中框选按钮烧录</p><img src="https://cdn.d3iiz.top/gh/xinzai-x/MyPic/img/202408022046458.png" alt="烧录按钮" style="zoom:50%;"><p>若烧录不成功，可看是否是这个错误：<a href="https://blog.csdn.net/qq_65047384/article/details/140702048?spm=1001.2014.3001.5501">链接</a></p><p><strong>CubeIDE软件烧录</strong></p><p>编译无错误后，点击图中框选按钮烧录</p><img src="https://cdn.d3iiz.top/gh/xinzai-x/MyPic/img/202408022046795.png" alt="烧录介绍" style="zoom:50%;"><h2 id="STM32-ST-LINK-Utility"><a href="#STM32-ST-LINK-Utility" class="headerlink" title="STM32 ST-LINK Utility"></a><center>STM32 ST-LINK Utility</center></h2><p>其实是一个烧写软件，看图可知，对应功能</p><img src="https://cdn.d3iiz.top/gh/xinzai-x/MyPic/img/202408022046292.png" alt="介绍" style="zoom:50%;"><p>选择好对应hex文件，直接烧写即可</p><img src="https://cdn.d3iiz.top/gh/xinzai-x/MyPic/img/202408022055078.png" alt="烧写界面" style="zoom:50%;"><h2 id="串口烧录"><a href="#串口烧录" class="headerlink" title="串口烧录"></a><center>串口烧录</center></h2><p>步骤：</p><ol><li><p>数据线连接电脑和单片机串口1</p></li><li><p>手动将板子的BOOT0置1，BOOT1置0，使用Bootloader方式</p></li><li><p>断电 重启</p></li><li><p>打开FlyMCU软件烧写（若没有反应可按复位按钮尝试）</p> <img src="https://cdn.d3iiz.top/gh/xinzai-x/MyPic/img/202408022046523.png" alt="界面介绍" style="zoom: 50%;"></li><li><p>手动将板子的BOOT0置0，BOOT1置0</p></li><li><p>板子重新上电</p></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;51和32区别&quot;&gt;&lt;a href=&quot;#51和32区别&quot; class=&quot;headerlink&quot; title=&quot;51和32区别&quot;&gt;&lt;/a&gt;&lt;center&gt;51和32区别&lt;/center&gt;&lt;/h1&gt;&lt;p&gt;位数：&lt;/p&gt;
&lt;p&gt;&amp;ensp;&amp;ensp;&amp;ensp;&amp;ens</summary>
      
    
    
    
    <category term="32单片机" scheme="http://example.com/categories/32%E5%8D%95%E7%89%87%E6%9C%BA/"/>
    
    
    <category term="32单片机" scheme="http://example.com/tags/32%E5%8D%95%E7%89%87%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>电机控制</title>
    <link href="http://example.com/post/93c966f3.html"/>
    <id>http://example.com/post/93c966f3.html</id>
    <published>2024-08-02T03:01:57.000Z</published>
    <updated>2024-08-03T09:12:53.299Z</updated>
    
    <content type="html"><![CDATA[<h1 id="直流电机"><a href="#直流电机" class="headerlink" title="直流电机"></a><center>直流电机</center></h1><p>原理：<a href="https://www.bilibili.com/video/BV1PM4y1w79m/?t=3.337014&spm_id_from=333.1350.jump_directly&vd_source=1c838941386ee32c4501615c317f75e0">链接</a></p><p>转速：脉冲宽度调制（Pulse width modulation，PWM）</p><p>周期（频率）、占空比</p><img src="https://cdn.d3iiz.top/gh/xinzai-x/MyPic1/img/202408031246045.png" alt="电机变速解析图" style="zoom:50%;"><h2 id="电机驱动电路"><a href="#电机驱动电路" class="headerlink" title="电机驱动电路"></a><center>电机驱动电路</center></h2><img src="https://cdn.d3iiz.top/gh/xinzai-x/MyPic1/img/202408031249504.png" alt="驱动实物图" style="zoom:50%;"><h2 id="代码编写"><a href="#代码编写" class="headerlink" title="代码编写"></a><center>代码编写</center></h2><p>按键控制直流电机速度</p><h3 id="main-c"><a href="#main-c" class="headerlink" title="main.c"></a>main.c</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;main.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;delay.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> count = <span class="number">0</span>,level = <span class="number">7</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">TR0 = <span class="number">1</span>;</span><br><span class="line">TH0 = <span class="number">0xDC</span>;</span><br><span class="line">TL0 = <span class="number">0x00</span>;</span><br><span class="line">TMOD = <span class="number">0x01</span>;</span><br><span class="line">ET0 = <span class="number">1</span>;</span><br><span class="line">EA =<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(KEY1 == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">Delay120ms();</span><br><span class="line"><span class="keyword">if</span>(KEY1 == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">level++;</span><br><span class="line">level = level % <span class="number">10</span>;<span class="comment">//到10才清理</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="mian-h"><a href="#mian-h" class="headerlink" title="mian.h"></a>mian.h</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __MAIN_H__</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __MAIN_H__</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;reg52.h&quot;</span></span></span><br><span class="line"><span class="comment">//定义LED、按键</span></span><br><span class="line">sbit LED1 = P1^<span class="number">0</span>;</span><br><span class="line">sbit KEY1 = P3^<span class="number">2</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">extern</span> <span class="type">char</span> count,level;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br></pre></td></tr></table></figure><h3 id="time-c"><a href="#time-c" class="headerlink" title="time.c"></a>time.c</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;main.h&quot;</span></span></span><br><span class="line"><span class="comment">//定时中断</span></span><br><span class="line">Timer0_Routine(<span class="type">void</span>) interrupt <span class="number">1</span></span><br><span class="line">&#123;</span><br><span class="line">TH0 = <span class="number">0xDC</span>;</span><br><span class="line">TL0 = <span class="number">0x00</span>;</span><br><span class="line">count++;<span class="comment">//每次定时中断加1</span></span><br><span class="line"><span class="keyword">if</span>(count &gt; level)<span class="comment">//level越大，占空比越小速度越慢</span></span><br><span class="line">LED1 = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">LED1 = <span class="number">0</span>;</span><br><span class="line">count = count % <span class="number">10</span>;<span class="comment">//到10清零</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="delay-c"><a href="#delay-c" class="headerlink" title="delay.c"></a>delay.c</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;delay.h&quot;</span></span></span><br><span class="line"><span class="comment">//延时函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay120ms</span><span class="params">()</span><span class="comment">//@11.0592MHz</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> data i, j;</span><br><span class="line"></span><br><span class="line">i = <span class="number">216</span>;</span><br><span class="line">j = <span class="number">37</span>;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">while</span> (--j);</span><br><span class="line">&#125; <span class="keyword">while</span> (--i);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="delay-h"><a href="#delay-h" class="headerlink" title="delay.h"></a>delay.h</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __DELAY_H__</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __DELAY_H__</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay120ms</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br></pre></td></tr></table></figure><p>练习：直流电机与iic通信连接oled屏，显示电机转速等级数字</p><h1 id="进步电机"><a href="#进步电机" class="headerlink" title="进步电机"></a><center>进步电机</center></h1><p>原理：<a href="https://www.bilibili.com/video/BV1nA4m1A7Ke/?t=93.445511&spm_id_from=333.1350.jump_directly&vd_source=1c838941386ee32c4501615c317f75e0">链接</a></p><h2 id="代码编写-1"><a href="#代码编写-1" class="headerlink" title="代码编写"></a><center>代码编写</center></h2><h3 id="main-c-1"><a href="#main-c-1" class="headerlink" title="main.c"></a>main.c</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;main.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;delay.h&quot;</span></span></span><br><span class="line"><span class="type">int</span> x,y;</span><br><span class="line">uchar phasecw[<span class="number">4</span>] =&#123;<span class="number">0x08</span>,<span class="number">0x04</span>,<span class="number">0x02</span>,<span class="number">0x01</span>&#125;;<span class="comment">//正向，四相电机对应四相通电</span></span><br><span class="line">uchar phaseccw[<span class="number">4</span>]=&#123;<span class="number">0x01</span>,<span class="number">0x02</span>,<span class="number">0x04</span>,<span class="number">0x08</span>&#125;;<span class="comment">//方向</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(x = <span class="number">0</span>;x &lt; <span class="number">100</span>;x++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(y = <span class="number">0</span>;y &lt; <span class="number">4</span>;y++)<span class="comment">//四相通电转的角度</span></span><br><span class="line">&#123;</span><br><span class="line">P2 = phasecw[y];<span class="comment">//电机连接P2口(低四位)</span></span><br><span class="line">Delay5ms();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="main-h"><a href="#main-h" class="headerlink" title="main.h"></a>main.h</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __MAIN_H__</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __MAIN_H__</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;reg52.h&quot;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">unsigned</span> <span class="type">char</span> uchar;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br></pre></td></tr></table></figure><h3 id="delay-c-1"><a href="#delay-c-1" class="headerlink" title="delay.c"></a>delay.c</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;delay.h&quot;</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay5ms</span><span class="params">()</span><span class="comment">//@11.0592MHz</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> data i, j;</span><br><span class="line"></span><br><span class="line">i = <span class="number">9</span>;</span><br><span class="line">j = <span class="number">244</span>;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">while</span> (--j);</span><br><span class="line">&#125; <span class="keyword">while</span> (--i);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="delay-h-1"><a href="#delay-h-1" class="headerlink" title="delay.h"></a>delay.h</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __DELAY_H__</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __DELAY_H__</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay5ms</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br></pre></td></tr></table></figure><p>练习：OLED屏显示步进电机前进还是后退(前进1，后退0)，按键控制步进电机前进还是后退</p><h1 id="舵机控制"><a href="#舵机控制" class="headerlink" title="舵机控制"></a><center>舵机控制</center></h1><p>角度：180&#x2F;360度（这里舵机180度）</p><p>模型图：</p><img src="https://cdn.d3iiz.top/gh/xinzai-x/MyPic1/img/202408031246245.png" alt="展示接线图" style="zoom:50%;"><p>信号说明：</p><img src="https://cdn.d3iiz.top/gh/xinzai-x/MyPic1/img/202408031246721.png" alt="信号使用说明" style="zoom:33%;"><h2 id="代码编写-2"><a href="#代码编写-2" class="headerlink" title="代码编写"></a><center>代码编写</center></h2><p>舵机180度控制旋转</p><h3 id="main-c-2"><a href="#main-c-2" class="headerlink" title="main.c"></a>main.c</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;main.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;delay.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> level = <span class="number">0</span>,count = <span class="number">0</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">TR0 = <span class="number">1</span>;</span><br><span class="line"><span class="comment">//定时器时间：0.5ms</span></span><br><span class="line">TMOD |= <span class="number">0x01</span>;</span><br><span class="line">TL0 = <span class="number">0x33</span>;</span><br><span class="line">TH0 = <span class="number">0xFE</span>;</span><br><span class="line">ET0 = <span class="number">1</span>;</span><br><span class="line">EA = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(KEY1 == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">Delay120ms();</span><br><span class="line"><span class="keyword">if</span>(KEY1 == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">level++;</span><br><span class="line">level = level % <span class="number">6</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Timer0_Routine(<span class="type">void</span>) interrupt <span class="number">1</span></span><br><span class="line">&#123;</span><br><span class="line">TL0 = <span class="number">0x33</span>;</span><br><span class="line">TH0 = <span class="number">0xFE</span>;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">level为1时，脉冲为1，持续时间0.5ms，转动角度为0，但按键延迟120ms，早过一个周期，</span></span><br><span class="line"><span class="comment">则下次按键时count为0，则持续时间为1ms，转动角度为45，以此类推，下次转动90，</span></span><br><span class="line"><span class="comment">但上一次已经转了45，所以实际再转45就到90度，当到达180度时，level为1时，转动0度，</span></span><br><span class="line"><span class="comment">相当于回到原点</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">if</span>(count &lt; level)</span><br><span class="line">SG90_PWM = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">SG90_PWM = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">count++;</span><br><span class="line"><span class="comment">//周期20ms，0.5ms一次定时中断触发，40次则20ms</span></span><br><span class="line"><span class="keyword">if</span>(count &gt; <span class="number">40</span>)</span><br><span class="line">count = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="main-h-1"><a href="#main-h-1" class="headerlink" title="main.h"></a>main.h</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __MAIN_H__</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __MAIN_H__</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;reg52.h&gt;</span></span></span><br><span class="line"></span><br><span class="line">sbit SG90_PWM = P2^<span class="number">0</span>;</span><br><span class="line">sbit KEY1 = P3^<span class="number">2</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br></pre></td></tr></table></figure><h3 id="delay-c-2"><a href="#delay-c-2" class="headerlink" title="delay.c"></a>delay.c</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;delay.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay120ms</span><span class="params">()</span><span class="comment">//@11.0592MHz</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> data i, j;</span><br><span class="line"></span><br><span class="line">i = <span class="number">216</span>;</span><br><span class="line">j = <span class="number">37</span>;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">while</span> (--j);</span><br><span class="line">&#125; <span class="keyword">while</span> (--i);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="delay-h-2"><a href="#delay-h-2" class="headerlink" title="delay.h"></a>delay.h</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __DELAY_H__</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __DELAY_H__</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay120ms</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br></pre></td></tr></table></figure><p>练习：OLED屏显示数字代表舵机旋转角度，按键控制舵机角度</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;直流电机&quot;&gt;&lt;a href=&quot;#直流电机&quot; class=&quot;headerlink&quot; title=&quot;直流电机&quot;&gt;&lt;/a&gt;&lt;center&gt;直流电机&lt;/center&gt;&lt;/h1&gt;&lt;p&gt;原理：&lt;a href=&quot;https://www.bilibili.com/video/BV</summary>
      
    
    
    
    <category term="51单片机" scheme="http://example.com/categories/51%E5%8D%95%E7%89%87%E6%9C%BA/"/>
    
    
    <category term="51单片机" scheme="http://example.com/tags/51%E5%8D%95%E7%89%87%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>单总线通信</title>
    <link href="http://example.com/post/8212ff63.html"/>
    <id>http://example.com/post/8212ff63.html</id>
    <published>2024-07-14T07:49:18.000Z</published>
    <updated>2024-08-03T08:01:03.377Z</updated>
    
    <content type="html"><![CDATA[<h1 id="DHT11介绍分析"><a href="#DHT11介绍分析" class="headerlink" title="DHT11介绍分析"></a><center>DHT11介绍分析</center></h1><p>HT11数字温湿度传感器</p><p>数据格式(在HDT11没有小数)：</p><p>&ensp;&ensp;&ensp;&ensp;8bit湿度整数数据 + 8bit湿度小数数据 + 8bit温度整数数据 + 8bit温度小数数据 + 8bit校验和</p><p>校验方式将温湿度4个字节数据加起来 &#x3D; 校验和，传送完成后重新加起来与校验和数据比较是否相同</p><h2 id="开始信号时序"><a href="#开始信号时序" class="headerlink" title="开始信号时序"></a><center>开始信号时序</center></h2><p>线空闲状态为高电平，单片机把总线拉低必须<code>大于18毫秒</code>，保证DHT11能检测到起始信号，单片机发送<code>开始信号</code>结束后，延时等待20-40us，DHT11接收到单片机开始信号后，等待单片机开始信号结束，然后发送80us低电平<code>响应信号</code></p><img src="https://cdn.d3iiz.top/gh/xinzai-x/MyPic1/img/202408031243618.png" alt="开始信号时序" style="zoom:50%;"><p>HT11发送响应信号后,再把总线拉高80us，准备发送数据</p><h2 id="MCU接收数据时序"><a href="#MCU接收数据时序" class="headerlink" title="MCU接收数据时序"></a><center>MCU接收数据时序</center></h2><p>每一bit数据都以50us低电平时隙开始，<code>高电平长短</code>决定数据位是 0 还是 1</p><p><strong>数字0信号时序</strong></p><img src="https://cdn.d3iiz.top/gh/xinzai-x/MyPic1/img/202408031244272.png" alt="数字0信号时序图" style="zoom:50%;"><p><strong>数字1信号时序</strong></p><img src="https://cdn.d3iiz.top/gh/xinzai-x/MyPic1/img/202408031243625.png" alt="数字1信号时序图" style="zoom: 50%;"><h1 id="代码编写"><a href="#代码编写" class="headerlink" title="代码编写"></a><center>代码编写</center></h1><p>利用上一个IIC协议和OLED模块，使用单总线通信和温湿度模块，在OLED屏上显示温湿度</p><h2 id="dht11-c"><a href="#dht11-c" class="headerlink" title="dht11.c"></a>dht11.c</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;dht11.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;delay.h&quot;</span></span></span><br><span class="line"><span class="type">char</span> <span class="title function_">DHT11_Start</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">uchar delay_count = <span class="number">0</span>;<span class="comment">//用于计数</span></span><br><span class="line">DHT11_IO = <span class="number">1</span>;<span class="comment">//一开始单片机时序高电平</span></span><br><span class="line">Delay30us();</span><br><span class="line">DHT11_IO = <span class="number">0</span>;<span class="comment">//拉低电平至少18us</span></span><br><span class="line">Delay25ms();</span><br><span class="line">DHT11_IO = <span class="number">1</span>;<span class="comment">//再拉高20-40us</span></span><br><span class="line">Delay30us();</span><br><span class="line"><span class="comment">//当DHT11响应信号开始时为低电平(80us)，等到结束时高电平，取反结束或大于80us时结束</span></span><br><span class="line"><span class="keyword">while</span>(!DHT11_IO &amp;&amp; delay_count &lt; <span class="number">80</span>)</span><br><span class="line">&#123;</span><br><span class="line">delay_count++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(delay_count &gt;= <span class="number">80</span>)<span class="comment">//大于80us结束</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">delay_count = <span class="number">0</span>;<span class="comment">//重置计数值</span></span><br><span class="line"><span class="comment">//响应信号结束拉高80us后拉低，代表数据开始传输，等拉低电平时或大于80us结束</span></span><br><span class="line"><span class="keyword">while</span>(DHT11_IO &amp;&amp; delay_count &lt; <span class="number">80</span>)</span><br><span class="line">&#123;</span><br><span class="line">delay_count++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(delay_count &gt;= <span class="number">80</span>)<span class="comment">//大于80us结束</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">char</span> <span class="title function_">DHT11_Write</span><span class="params">(<span class="type">int</span> *humi,<span class="type">int</span> *temp)</span></span><br><span class="line">&#123;</span><br><span class="line">uchar delay_count = <span class="number">0</span>,data_byte,tmp,x,y;</span><br><span class="line">uchar DHT11_Data[<span class="number">5</span>];<span class="comment">//定义数组保存数据</span></span><br><span class="line">DHT11_Start();<span class="comment">//调用开始函数</span></span><br><span class="line"><span class="comment">//发送40bit数据</span></span><br><span class="line"><span class="keyword">for</span>(x = <span class="number">0</span>;x &lt; <span class="number">5</span>;x++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(y = <span class="number">0</span>;y &lt; <span class="number">8</span>;y++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//数据发送前低电平，判断为高电平时则开始若有问题跳出(&gt;50)</span></span><br><span class="line"><span class="keyword">while</span>(!DHT11_IO &amp;&amp; delay_count &lt; <span class="number">50</span>)</span><br><span class="line">delay_count++;</span><br><span class="line"><span class="keyword">if</span>(delay_count &gt;= <span class="number">50</span>)<span class="comment">//大于80us结束</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">delay_count = <span class="number">0</span>;</span><br><span class="line">tmp = <span class="number">0</span>;</span><br><span class="line">Delay30us();</span><br><span class="line"><span class="keyword">if</span>(DHT11_IO == <span class="number">1</span>)<span class="comment">//若条件不成立发送数据0</span></span><br><span class="line">&#123;</span><br><span class="line">tmp = <span class="number">1</span>;<span class="comment">//发送数据1</span></span><br><span class="line"><span class="keyword">while</span>(DHT11_IO &amp;&amp; delay_count &lt; <span class="number">50</span>)</span><br><span class="line">delay_count++;</span><br><span class="line"><span class="keyword">if</span>(delay_count &gt;= <span class="number">50</span>)<span class="comment">//大于80us结束</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line">delay_count = <span class="number">0</span>;</span><br><span class="line">data_byte &lt;&lt;= <span class="number">1</span>;<span class="comment">//左移一位</span></span><br><span class="line">data_byte |= tmp;<span class="comment">//将每一位数据传给data_byte</span></span><br><span class="line">&#125;</span><br><span class="line">DHT11_Data[x]=data_byte;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//若前四个数值加起来不等于校验位的数，则全部清零</span></span><br><span class="line"><span class="keyword">if</span>(DHT11_Data[<span class="number">0</span>]+DHT11_Data[<span class="number">1</span>]+DHT11_Data[<span class="number">2</span>]+DHT11_Data[<span class="number">3</span>] != DHT11_Data[<span class="number">4</span>])</span><br><span class="line">&#123;</span><br><span class="line">DHT11_Data[<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line">DHT11_Data[<span class="number">1</span>]=<span class="number">0</span>;</span><br><span class="line">DHT11_Data[<span class="number">2</span>]=<span class="number">0</span>;</span><br><span class="line">DHT11_Data[<span class="number">3</span>]=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//因为DHT11只有整数，所以是0，2</span></span><br><span class="line">*humi = (<span class="type">int</span>)DHT11_Data[<span class="number">0</span>];<span class="comment">//相同地址，值改变则另一个相同地址的变量也改变</span></span><br><span class="line">*temp = (<span class="type">int</span>)DHT11_Data[<span class="number">2</span>];</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="dat11-h"><a href="#dat11-h" class="headerlink" title="dat11.h"></a>dat11.h</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __DHT11_H__</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __DHT11_H__</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;main.h&quot;</span></span></span><br><span class="line"></span><br><span class="line">sbit DHT11_IO = P1^<span class="number">2</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">char</span> <span class="title function_">DHT11_Start</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">char</span> <span class="title function_">DHT11_Write</span><span class="params">(<span class="type">int</span> *humi,<span class="type">int</span> *temp)</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br></pre></td></tr></table></figure><h2 id="main-c"><a href="#main-c" class="headerlink" title="main.c"></a>main.c</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;iic.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;oled.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;bmp.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;main.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;dht11.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> H,T;</span><br><span class="line"><span class="type">char</span> DHT11_Buf[<span class="number">20</span>];</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">OLED_Init();<span class="comment">//初始化OLED</span></span><br><span class="line">OLED_Clear();</span><br><span class="line">OLED_ShowCHinese(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>);<span class="comment">//星（x坐标,y坐标,字模第几个）</span></span><br><span class="line">OLED_ShowCHinese(<span class="number">18</span>,<span class="number">0</span>,<span class="number">1</span>);<span class="comment">//仔</span></span><br><span class="line">OLED_ShowCHinese(<span class="number">36</span>,<span class="number">0</span>,<span class="number">2</span>);<span class="comment">//爱</span></span><br><span class="line">OLED_ShowCHinese(<span class="number">54</span>,<span class="number">0</span>,<span class="number">3</span>);<span class="comment">//分</span></span><br><span class="line">OLED_ShowCHinese(<span class="number">72</span>,<span class="number">0</span>,<span class="number">4</span>);<span class="comment">//享</span></span><br><span class="line">OLED_ShowCHinese(<span class="number">90</span>,<span class="number">0</span>,<span class="number">5</span>);<span class="comment">//抖</span></span><br><span class="line">OLED_ShowCHinese(<span class="number">108</span>,<span class="number">0</span>,<span class="number">6</span>);<span class="comment">//音</span></span><br><span class="line">OLED_ShowCHinese(<span class="number">0</span>,<span class="number">2</span>,<span class="number">5</span>);<span class="comment">//抖</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">OLED_Clear();</span><br><span class="line">OLED_ShowString(<span class="number">6</span>,<span class="number">3</span>,<span class="string">&quot;0.96&#x27; OLED TEST&quot;</span>,<span class="number">16</span>);<span class="comment">//显示字符串（x,y,字符串,字号）</span></span><br><span class="line">OLED_Clear();</span><br><span class="line">OLED_ShowNum(<span class="number">103</span>,<span class="number">6</span>,<span class="number">224</span>,<span class="number">3</span>,<span class="number">16</span>);<span class="comment">//显示数字（x,y,数字,数字个数,字号）</span></span><br><span class="line">OLED_Clear();</span><br><span class="line">OLED_DrawBMP(<span class="number">0</span>,<span class="number">0</span>,<span class="number">128</span>,<span class="number">8</span>,BMP1);<span class="comment">//（1,2：左上角坐标，3,4：右下角坐标，图片字模）</span></span><br><span class="line">OLED_Clear();</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">DHT11_Write(&amp;H, &amp;T);</span><br><span class="line"><span class="built_in">sprintf</span>(DHT11_Buf,<span class="string">&quot;H2:%d T2:%d&quot;</span>,H,T);<span class="comment">//将形式字符赋值给DHT11_Buf</span></span><br><span class="line">OLED_ShowString(<span class="number">0</span>,<span class="number">4</span>,DHT11_Buf,<span class="number">16</span>);<span class="comment">//发送字符串</span></span><br><span class="line">Delay1000ms();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="main-h"><a href="#main-h" class="headerlink" title="main.h"></a>main.h</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __MAIN_H__</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __MAIN_H__</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;reg52.h&quot;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">unsigned</span> <span class="type">char</span> uchar;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br></pre></td></tr></table></figure><h2 id="iic-c"><a href="#iic-c" class="headerlink" title="iic.c"></a>iic.c</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;iic.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;delay.h&quot;</span></span></span><br><span class="line">uchar i = <span class="number">0</span>;</span><br><span class="line"><span class="comment">//开始标志时序</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">IIC_start</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//一开始SCL和SDA都为高电平</span></span><br><span class="line">IIC_SCL = <span class="number">1</span>;</span><br><span class="line">IIC_SDA = <span class="number">1</span>;</span><br><span class="line">Delay5us();<span class="comment">//10us一个周期</span></span><br><span class="line">IIC_SDA = <span class="number">0</span>;<span class="comment">//大概一半周期SDA变低电平</span></span><br><span class="line">Delay5us();<span class="comment">//再过半个周期</span></span><br><span class="line">IIC_SCL = <span class="number">0</span>;<span class="comment">//SCL变低电平</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//结束标志时序</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">IIC_stop</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//一开始SCL、SDA都为低电平</span></span><br><span class="line">IIC_SCL = <span class="number">0</span>;</span><br><span class="line">IIC_SDA = <span class="number">0</span>;</span><br><span class="line">Delay5us();</span><br><span class="line">IIC_SCL = <span class="number">1</span>;<span class="comment">//过半个周期SCL变高电平</span></span><br><span class="line">Delay5us();</span><br><span class="line">IIC_SDA = <span class="number">1</span>;<span class="comment">//过半个周期SDA变高电平</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//写数据</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">IIC_write</span><span class="params">(uchar a1)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(i = <span class="number">0</span>;i &lt; <span class="number">8</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">a1 &lt;&lt;= <span class="number">1</span>;</span><br><span class="line">IIC_SDA = CY;<span class="comment">//进位标志位，左移溢出的保存在CY里</span></span><br><span class="line">IIC_SCL = <span class="number">0</span>;</span><br><span class="line">Delay5us();</span><br><span class="line">IIC_SCL = <span class="number">1</span>;</span><br><span class="line">Delay5us();</span><br><span class="line">IIC_SCL = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//应答</span></span><br><span class="line">IIC_SDA = <span class="number">0</span>;</span><br><span class="line">IIC_SCL = <span class="number">0</span>;</span><br><span class="line">Delay5us();</span><br><span class="line">IIC_SCL = <span class="number">1</span>;</span><br><span class="line">Delay5us();</span><br><span class="line">IIC_SCL = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="iic-h"><a href="#iic-h" class="headerlink" title="iic.h"></a>iic.h</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __IIC_H__</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __IIC_H__</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;main.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">IIC_start</span><span class="params">()</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">IIC_stop</span><span class="params">()</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">IIC_write</span><span class="params">(uchar a1)</span>;</span><br><span class="line"><span class="comment">//定义时间线和数据线</span></span><br><span class="line">sbit IIC_SCL = P1^<span class="number">5</span>;</span><br><span class="line">sbit IIC_SDA = P1^<span class="number">4</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br></pre></td></tr></table></figure><h2 id="oled-c"><a href="#oled-c" class="headerlink" title="oled.c"></a>oled.c</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;oled.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;oledfont.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;iic.h&quot;</span></span></span><br><span class="line"><span class="comment">/**********************************************</span></span><br><span class="line"><span class="comment">// IIC Write Command</span></span><br><span class="line"><span class="comment">**********************************************/</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Write_IIC_Command</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> IIC_Command)</span></span><br><span class="line">&#123;</span><br><span class="line">   IIC_start();</span><br><span class="line">   IIC_write(<span class="number">0x78</span>);            <span class="comment">//Slave address,SA0=0</span></span><br><span class="line">   IIC_write(<span class="number">0x00</span>);<span class="comment">//write command</span></span><br><span class="line">   IIC_write(IIC_Command); </span><br><span class="line">   IIC_stop();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**********************************************</span></span><br><span class="line"><span class="comment">// IIC Write Data</span></span><br><span class="line"><span class="comment">**********************************************/</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Write_IIC_Data</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> IIC_Data)</span></span><br><span class="line">&#123;</span><br><span class="line">   IIC_start();</span><br><span class="line">   IIC_write(<span class="number">0x78</span>);<span class="comment">//D/C#=0; R/W#=0</span></span><br><span class="line">   IIC_write(<span class="number">0x40</span>);<span class="comment">//write data</span></span><br><span class="line">   IIC_write(IIC_Data);</span><br><span class="line">   IIC_stop();</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_WR_Byte</span><span class="params">(<span class="type">unsigned</span> dat,<span class="type">unsigned</span> cmd)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(cmd)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">   Write_IIC_Data(dat);</span><br><span class="line">   </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">   Write_IIC_Command(dat);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/********************************************</span></span><br><span class="line"><span class="comment">// fill_Picture</span></span><br><span class="line"><span class="comment">********************************************/</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">fill_picture</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> fill_Data)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> m,n;</span><br><span class="line"><span class="keyword">for</span>(m=<span class="number">0</span>;m&lt;<span class="number">8</span>;m++)</span><br><span class="line">&#123;</span><br><span class="line">OLED_WR_Byte(<span class="number">0xb0</span>+m,<span class="number">0</span>);<span class="comment">//page0-page1</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0x00</span>,<span class="number">0</span>);<span class="comment">//low column start address</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0x10</span>,<span class="number">0</span>);<span class="comment">//high column start address</span></span><br><span class="line"><span class="keyword">for</span>(n=<span class="number">0</span>;n&lt;<span class="number">128</span>;n++)</span><br><span class="line">&#123;</span><br><span class="line">OLED_WR_Byte(fill_Data,<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/***********************Delay****************************************/</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay_50ms</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> Del_50ms)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> m;</span><br><span class="line"><span class="keyword">for</span>(;Del_50ms&gt;<span class="number">0</span>;Del_50ms--)</span><br><span class="line"><span class="keyword">for</span>(m=<span class="number">6245</span>;m&gt;<span class="number">0</span>;m--);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay_1ms</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> Del_1ms)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> j;</span><br><span class="line"><span class="keyword">while</span>(Del_1ms--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;<span class="number">123</span>;j++);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//坐标设置</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_Set_Pos</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> x, <span class="type">unsigned</span> <span class="type">char</span> y)</span> </span><br><span class="line">&#123; OLED_WR_Byte(<span class="number">0xb0</span>+y,OLED_CMD);</span><br><span class="line">OLED_WR_Byte(((x&amp;<span class="number">0xf0</span>)&gt;&gt;<span class="number">4</span>)|<span class="number">0x10</span>,OLED_CMD);</span><br><span class="line">OLED_WR_Byte((x&amp;<span class="number">0x0f</span>),OLED_CMD); </span><br><span class="line">&#125;     </span><br><span class="line"><span class="comment">//开启OLED显示    </span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_Display_On</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">OLED_WR_Byte(<span class="number">0X8D</span>,OLED_CMD);  <span class="comment">//SET DCDC命令</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0X14</span>,OLED_CMD);  <span class="comment">//DCDC ON</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0XAF</span>,OLED_CMD);  <span class="comment">//DISPLAY ON</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//关闭OLED显示     </span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_Display_Off</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">OLED_WR_Byte(<span class="number">0X8D</span>,OLED_CMD);  <span class="comment">//SET DCDC命令</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0X10</span>,OLED_CMD);  <span class="comment">//DCDC OFF</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0XAE</span>,OLED_CMD);  <span class="comment">//DISPLAY OFF</span></span><br><span class="line">&#125;    </span><br><span class="line"><span class="comment">//清屏函数,清完屏,整个屏幕是黑色的!和没点亮一样!!!  </span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_Clear</span><span class="params">(<span class="type">void</span>)</span>  </span><br><span class="line">&#123;  </span><br><span class="line">u8 i,n;    </span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">8</span>;i++)  </span><br><span class="line">&#123;  </span><br><span class="line">OLED_WR_Byte (<span class="number">0xb0</span>+i,OLED_CMD);    <span class="comment">//设置页地址（0~7）</span></span><br><span class="line">OLED_WR_Byte (<span class="number">0x00</span>,OLED_CMD);      <span class="comment">//设置显示位置—列低地址</span></span><br><span class="line">OLED_WR_Byte (<span class="number">0x10</span>,OLED_CMD);      <span class="comment">//设置显示位置—列高地址   </span></span><br><span class="line"><span class="keyword">for</span>(n=<span class="number">0</span>;n&lt;<span class="number">128</span>;n++)OLED_WR_Byte(<span class="number">0</span>,OLED_DATA); </span><br><span class="line">&#125; <span class="comment">//更新显示</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_On</span><span class="params">(<span class="type">void</span>)</span>  </span><br><span class="line">&#123;  </span><br><span class="line">u8 i,n;    </span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">8</span>;i++)  </span><br><span class="line">&#123;  </span><br><span class="line">OLED_WR_Byte (<span class="number">0xb0</span>+i,OLED_CMD);    <span class="comment">//设置页地址（0~7）</span></span><br><span class="line">OLED_WR_Byte (<span class="number">0x00</span>,OLED_CMD);      <span class="comment">//设置显示位置—列低地址</span></span><br><span class="line">OLED_WR_Byte (<span class="number">0x10</span>,OLED_CMD);      <span class="comment">//设置显示位置—列高地址   </span></span><br><span class="line"><span class="keyword">for</span>(n=<span class="number">0</span>;n&lt;<span class="number">128</span>;n++)OLED_WR_Byte(<span class="number">1</span>,OLED_DATA); </span><br><span class="line">&#125; <span class="comment">//更新显示</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//在指定位置显示一个字符,包括部分字符</span></span><br><span class="line"><span class="comment">//x:0~127</span></span><br><span class="line"><span class="comment">//y:0~63</span></span><br><span class="line"><span class="comment">//mode:0,反白显示;1,正常显示 </span></span><br><span class="line"><span class="comment">//size:选择字体 16/12 </span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_ShowChar</span><span class="params">(u8 x,u8 y,u8 chr,u8 Char_Size)</span></span><br><span class="line">&#123;      </span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> c=<span class="number">0</span>,i=<span class="number">0</span>;</span><br><span class="line">c=chr-<span class="string">&#x27; &#x27;</span>;<span class="comment">//得到偏移后的值</span></span><br><span class="line"><span class="keyword">if</span>(x&gt;Max_Column<span class="number">-1</span>)&#123;x=<span class="number">0</span>;y=y+<span class="number">2</span>;&#125;</span><br><span class="line"><span class="keyword">if</span>(Char_Size ==<span class="number">16</span>)</span><br><span class="line">&#123;</span><br><span class="line">OLED_Set_Pos(x,y);</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">8</span>;i++)</span><br><span class="line">OLED_WR_Byte(F8X16[c*<span class="number">16</span>+i],OLED_DATA);</span><br><span class="line">OLED_Set_Pos(x,y+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">8</span>;i++)</span><br><span class="line">OLED_WR_Byte(F8X16[c*<span class="number">16</span>+i+<span class="number">8</span>],OLED_DATA);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">OLED_Set_Pos(x,y);</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">6</span>;i++)</span><br><span class="line">OLED_WR_Byte(F6x8[c][i],OLED_DATA);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//m^n函数</span></span><br><span class="line">u32 <span class="title function_">oled_pow</span><span class="params">(u8 m,u8 n)</span></span><br><span class="line">&#123;</span><br><span class="line">u32 result=<span class="number">1</span>; </span><br><span class="line"><span class="keyword">while</span>(n--)result*=m;    </span><br><span class="line"><span class="keyword">return</span> result;</span><br><span class="line">&#125;  </span><br><span class="line"><span class="comment">//显示2个数字</span></span><br><span class="line"><span class="comment">//x,y :起点坐标 </span></span><br><span class="line"><span class="comment">//len :数字的位数</span></span><br><span class="line"><span class="comment">//size:字体大小</span></span><br><span class="line"><span class="comment">//mode:模式0,填充模式;1,叠加模式</span></span><br><span class="line"><span class="comment">//num:数值(0~4294967295);   </span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_ShowNum</span><span class="params">(u8 x,u8 y,u32 num,u8 len,u8 size2)</span></span><br><span class="line">&#123;         </span><br><span class="line">u8 t,temp;</span><br><span class="line">u8 enshow=<span class="number">0</span>;   </span><br><span class="line"><span class="keyword">for</span>(t=<span class="number">0</span>;t&lt;len;t++)</span><br><span class="line">&#123;</span><br><span class="line">temp=(num/oled_pow(<span class="number">10</span>,len-t<span class="number">-1</span>))%<span class="number">10</span>;</span><br><span class="line"><span class="keyword">if</span>(enshow==<span class="number">0</span>&amp;&amp;t&lt;(len<span class="number">-1</span>))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(temp==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">OLED_ShowChar(x+(size2/<span class="number">2</span>)*t,y,<span class="string">&#x27; &#x27;</span>,size2);</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;<span class="keyword">else</span> enshow=<span class="number">1</span>; </span><br><span class="line">  </span><br><span class="line">&#125;</span><br><span class="line"> OLED_ShowChar(x+(size2/<span class="number">2</span>)*t,y,temp+<span class="string">&#x27;0&#x27;</span>,size2); </span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br><span class="line"><span class="comment">//显示一个字符号串</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_ShowString</span><span class="params">(u8 x,u8 y,u8 *chr,u8 Char_Size)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> j=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (chr[j]!=<span class="string">&#x27;\0&#x27;</span>)</span><br><span class="line">&#123;OLED_ShowChar(x,y,chr[j],Char_Size);</span><br><span class="line">x+=<span class="number">8</span>;</span><br><span class="line"><span class="keyword">if</span>(x&gt;<span class="number">120</span>)&#123;x=<span class="number">0</span>;y+=<span class="number">2</span>;&#125;</span><br><span class="line">j++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//显示汉字</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_ShowCHinese</span><span class="params">(u8 x,u8 y,u8 no)</span></span><br><span class="line">&#123;          </span><br><span class="line">u8 t,adder=<span class="number">0</span>;</span><br><span class="line">OLED_Set_Pos(x,y);</span><br><span class="line">    <span class="keyword">for</span>(t=<span class="number">0</span>;t&lt;<span class="number">16</span>;t++)</span><br><span class="line">&#123;</span><br><span class="line">OLED_WR_Byte(Hzk[<span class="number">2</span>*no][t],OLED_DATA);</span><br><span class="line">adder+=<span class="number">1</span>;</span><br><span class="line">     &#125;</span><br><span class="line">OLED_Set_Pos(x,y+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span>(t=<span class="number">0</span>;t&lt;<span class="number">16</span>;t++)</span><br><span class="line">&#123;</span><br><span class="line">OLED_WR_Byte(Hzk[<span class="number">2</span>*no+<span class="number">1</span>][t],OLED_DATA);</span><br><span class="line">adder+=<span class="number">1</span>;</span><br><span class="line">      &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/***********功能描述：显示显示BMP图片128×64起始点坐标(x,y),x的范围0～127，y为页的范围0～7*****************/</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_DrawBMP</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> x0, <span class="type">unsigned</span> <span class="type">char</span> y0,<span class="type">unsigned</span> <span class="type">char</span> x1, <span class="type">unsigned</span> <span class="type">char</span> y1,<span class="type">unsigned</span> <span class="type">char</span> BMP[])</span></span><br><span class="line">&#123; </span><br><span class="line"> <span class="type">unsigned</span> <span class="type">int</span> j=<span class="number">0</span>;</span><br><span class="line"> <span class="type">unsigned</span> <span class="type">char</span> x,y;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">if</span>(y1%<span class="number">8</span>==<span class="number">0</span>) y=y1/<span class="number">8</span>;      </span><br><span class="line">  <span class="keyword">else</span> y=y1/<span class="number">8</span>+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(y=y0;y&lt;y1;y++)</span><br><span class="line">&#123;</span><br><span class="line">OLED_Set_Pos(x0,y);</span><br><span class="line">    <span class="keyword">for</span>(x=x0;x&lt;x1;x++)</span><br><span class="line">    &#123;      </span><br><span class="line">    OLED_WR_Byte(BMP[j++],OLED_DATA);    </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="comment">//初始化SSD1306    </span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_Init</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123; </span><br><span class="line"> </span><br><span class="line">OLED_WR_Byte(<span class="number">0xAE</span>,OLED_CMD);<span class="comment">//--display off</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0x00</span>,OLED_CMD);<span class="comment">//---set low column address</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0x10</span>,OLED_CMD);<span class="comment">//---set high column address</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0x40</span>,OLED_CMD);<span class="comment">//--set start line address  </span></span><br><span class="line">OLED_WR_Byte(<span class="number">0xB0</span>,OLED_CMD);<span class="comment">//--set page address</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0x81</span>,OLED_CMD); <span class="comment">// contract control</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0xFF</span>,OLED_CMD);<span class="comment">//--128   </span></span><br><span class="line">OLED_WR_Byte(<span class="number">0xA1</span>,OLED_CMD);<span class="comment">//set segment remap </span></span><br><span class="line">OLED_WR_Byte(<span class="number">0xA6</span>,OLED_CMD);<span class="comment">//--normal / reverse</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0xA8</span>,OLED_CMD);<span class="comment">//--set multiplex ratio(1 to 64)</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0x3F</span>,OLED_CMD);<span class="comment">//--1/32 duty</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0xC8</span>,OLED_CMD);<span class="comment">//Com scan direction</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0xD3</span>,OLED_CMD);<span class="comment">//-set display offset</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0x00</span>,OLED_CMD);<span class="comment">//</span></span><br><span class="line"></span><br><span class="line">OLED_WR_Byte(<span class="number">0xD5</span>,OLED_CMD);<span class="comment">//set osc division</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0x80</span>,OLED_CMD);<span class="comment">//</span></span><br><span class="line"></span><br><span class="line">OLED_WR_Byte(<span class="number">0xD8</span>,OLED_CMD);<span class="comment">//set area color mode off</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0x05</span>,OLED_CMD);<span class="comment">//</span></span><br><span class="line"></span><br><span class="line">OLED_WR_Byte(<span class="number">0xD9</span>,OLED_CMD);<span class="comment">//Set Pre-Charge Period</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0xF1</span>,OLED_CMD);<span class="comment">//</span></span><br><span class="line"></span><br><span class="line">OLED_WR_Byte(<span class="number">0xDA</span>,OLED_CMD);<span class="comment">//set com pin configuartion</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0x12</span>,OLED_CMD);<span class="comment">//</span></span><br><span class="line"></span><br><span class="line">OLED_WR_Byte(<span class="number">0xDB</span>,OLED_CMD);<span class="comment">//set Vcomh</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0x30</span>,OLED_CMD);<span class="comment">//</span></span><br><span class="line"></span><br><span class="line">OLED_WR_Byte(<span class="number">0x8D</span>,OLED_CMD);<span class="comment">//set charge pump enable</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0x14</span>,OLED_CMD);<span class="comment">//</span></span><br><span class="line"></span><br><span class="line">OLED_WR_Byte(<span class="number">0xAF</span>,OLED_CMD);<span class="comment">//--turn on oled panel</span></span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure><h2 id="oled-h"><a href="#oled-h" class="headerlink" title="oled.h"></a>oled.h</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __OLED_H__</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __OLED_H__</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>  u8 unsigned char </span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>  u32 unsigned int </span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> OLED_CMD  0<span class="comment">//写命令</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> OLED_DATA 1<span class="comment">//写数据</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> OLED_MODE 0</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//OLED模式设置</span></span><br><span class="line"><span class="comment">//0:4线串行模式</span></span><br><span class="line"><span class="comment">//1:并行8080模式</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SIZE 16</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> XLevelL0x02</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> XLevelH0x10</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> Max_Column128</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> Max_Row64</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>Brightness0xFF </span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> X_WIDTH 128</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> Y_WIDTH 64      </span></span><br><span class="line"><span class="comment">//-----------------OLED端口定义----------------     </span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">delay_ms</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> ms)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//OLED控制用函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_WR_Byte</span><span class="params">(<span class="type">unsigned</span> dat,<span class="type">unsigned</span> cmd)</span>;  </span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_Display_On</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_Display_Off</span><span class="params">(<span class="type">void</span>)</span>;          </span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_Init</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_Clear</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_DrawPoint</span><span class="params">(u8 x,u8 y,u8 t)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_Fill</span><span class="params">(u8 x1,u8 y1,u8 x2,u8 y2,u8 dot)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_ShowChar</span><span class="params">(u8 x,u8 y,u8 chr,u8 Char_Size)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_ShowNum</span><span class="params">(u8 x,u8 y,u32 num,u8 len,u8 size)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_ShowString</span><span class="params">(u8 x,u8 y, u8 *p,u8 Char_Size)</span>; </span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_Set_Pos</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> x, <span class="type">unsigned</span> <span class="type">char</span> y)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_ShowCHinese</span><span class="params">(u8 x,u8 y,u8 no)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_DrawBMP</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> x0, <span class="type">unsigned</span> <span class="type">char</span> y0,<span class="type">unsigned</span> <span class="type">char</span> x1, <span class="type">unsigned</span> <span class="type">char</span> y1,<span class="type">unsigned</span> <span class="type">char</span> BMP[])</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay_50ms</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> Del_50ms)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay_1ms</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> Del_1ms)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">fill_picture</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> fill_Data)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">Picture</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Write_IIC_Command</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> IIC_Command)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">Write_IIC_Data</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> IIC_Data)</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="delay-c"><a href="#delay-c" class="headerlink" title="delay.c"></a>delay.c</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;delay.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;intrins.h&gt;</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay5us</span><span class="params">()</span><span class="comment">//@11.0592MHz</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay30us</span><span class="params">()</span><span class="comment">//@11.0592MHz</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> data i;</span><br><span class="line"></span><br><span class="line">i = <span class="number">11</span>;</span><br><span class="line"><span class="keyword">while</span> (--i);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay25ms</span><span class="params">()</span><span class="comment">//@11.0592MHz</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> data i, j;</span><br><span class="line"></span><br><span class="line">i = <span class="number">45</span>;</span><br><span class="line">j = <span class="number">208</span>;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">while</span> (--j);</span><br><span class="line">&#125; <span class="keyword">while</span> (--i);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay1000ms</span><span class="params">()</span>    <span class="comment">//@11.0592MHz</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">unsigned</span> <span class="type">char</span> data i, j, k;</span><br><span class="line">  _nop_();</span><br><span class="line">  i = <span class="number">8</span>;</span><br><span class="line">  j = <span class="number">1</span>;</span><br><span class="line">  k = <span class="number">243</span>;</span><br><span class="line">  <span class="keyword">do</span></span><br><span class="line">  &#123;</span><br><span class="line">     <span class="keyword">do</span></span><br><span class="line">     &#123;</span><br><span class="line">       <span class="keyword">while</span> (--k);</span><br><span class="line">     &#125; <span class="keyword">while</span> (--j);</span><br><span class="line">  &#125; <span class="keyword">while</span> (--i);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="delay-h"><a href="#delay-h" class="headerlink" title="delay.h"></a>delay.h</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __DELAY_H__</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __DELAY_H__</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay5us</span><span class="params">()</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay30us</span><span class="params">()</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay25ms</span><span class="params">()</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay1000ms</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;DHT11介绍分析&quot;&gt;&lt;a href=&quot;#DHT11介绍分析&quot; class=&quot;headerlink&quot; title=&quot;DHT11介绍分析&quot;&gt;&lt;/a&gt;&lt;center&gt;DHT11介绍分析&lt;/center&gt;&lt;/h1&gt;&lt;p&gt;HT11数字温湿度传感器&lt;/p&gt;
&lt;p&gt;数据格式(</summary>
      
    
    
    
    <category term="51单片机" scheme="http://example.com/categories/51%E5%8D%95%E7%89%87%E6%9C%BA/"/>
    
    
    <category term="51单片机" scheme="http://example.com/tags/51%E5%8D%95%E7%89%87%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>6.IIC通信</title>
    <link href="http://example.com/post/f5fba2c3.html"/>
    <id>http://example.com/post/f5fba2c3.html</id>
    <published>2024-06-19T08:41:34.000Z</published>
    <updated>2024-08-03T08:00:57.869Z</updated>
    
    <content type="html"><![CDATA[<h1 id="IIC理论"><a href="#IIC理论" class="headerlink" title="IIC理论"></a><center>IIC理论</center></h1><h2 id="实现方式"><a href="#实现方式" class="headerlink" title="实现方式"></a><center>实现方式</center></h2><p>软件IIC：流程清楚、占用时间、速度慢</p><p>硬件IIC ：用法复杂、速度快、可以用DMA</p><h2 id="电路"><a href="#电路" class="headerlink" title="电路"></a><center>电路</center></h2><p>SCL：时钟线，SDA：数据线</p><p>上拉电阻：4.7k-10k</p><h2 id="速率"><a href="#速率" class="headerlink" title="速率"></a><center>速率</center></h2><p>标准模式：100Kb&#x2F;s、快速模式：400Kb&#x2F;s、高速模式：3.4Mb&#x2F;s</p><p>100kbit&#x2F;s 是指1秒钟传输100kbit。1个时钟脉冲只能传输1bit数据。1秒中内要传输100kbit数据，则需要100k个时钟脉冲。每个时钟脉冲的周期 T&#x3D;1&#x2F;100 000 &#x3D; 10us</p><p>HZ和bit&#x2F;s是一个相同的概念。时钟周期为1HZ，则传输数据的速率为1bit&#x2F;s；时钟周期为100KHZ，则传输数据的速率为100kbit&#x2F;s</p><h2 id="时序"><a href="#时序" class="headerlink" title="时序"></a><center>时序</center></h2><img src="https://cdn.d3iiz.top/gh/xinzai-x/MyPic/img/202407091551334.png" alt="时钟信号图" style="zoom:50%;"><h3 id="空闲状态"><a href="#空闲状态" class="headerlink" title="空闲状态"></a>空闲状态</h3><p>SDA和SCL全为高电平</p><h3 id="开始信号"><a href="#开始信号" class="headerlink" title="开始信号"></a>开始信号</h3><p>当SCL为高电平时，SDA<code>由高到低</code>的跳变：表示数据传输的开始</p><h3 id="停止信号"><a href="#停止信号" class="headerlink" title="停止信号"></a>停止信号</h3><p>当SCL为高电平时，SDA<code>由低到高</code>的跳变：表示数据的结束</p><h3 id="读写操作"><a href="#读写操作" class="headerlink" title="读写操作"></a>读写操作</h3><ul><li>发送从机地址<ul><li>每个 I2C 器件都有一个设备地址<ul><li>先发送设备地址来决定访问哪个 I2C 器件</li></ul></li><li>发送8位数据<ul><li>高 7 位是设备地址,后 1 位是读写位<ul><li>1 表示读操作</li><li>0表示写操作</li></ul></li></ul></li><li>应答信号  <ul><li>发端在SDA上每发送一个字节的数据，在SCL第9个时钟期间释放该数据线SDA</li><li>接收端反馈一个应答信号<ul><li>应答信号为低电平时：规定为有效应答（ACK），表示已地接收了</li><li>该字节应答信号为高电平时，规定为非应答（NACK），表示没有成功接收该字节</li><li>有时候简单的软件IIC不校验ACK</li></ul></li></ul></li><li>读写数据<ul><li>根据前一个字节的读写位，确定读写</li></ul></li></ul></li></ul><h2 id="总线设备相关"><a href="#总线设备相关" class="headerlink" title="总线设备相关"></a><center>总线设备相关</center></h2><p>总线最多挂载2^7-1&#x3D;127个设备（0地址不算）</p><p>设备枚举（for）</p><h1 id="代码编写"><a href="#代码编写" class="headerlink" title="代码编写"></a><center>代码编写</center></h1><p>OLED屏的使用</p><h2 id="iic-c（主要）"><a href="#iic-c（主要）" class="headerlink" title="iic.c（主要）"></a>iic.c（主要）</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;iic.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;delay.h&quot;</span></span></span><br><span class="line"><span class="comment">//参考上面时序图理解（按时间先为主判断）</span></span><br><span class="line"><span class="comment">//开始</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">IIC_Start</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">IIC_SCL = <span class="number">1</span>;</span><br><span class="line">IIC_SDA = <span class="number">1</span>;</span><br><span class="line">Delay5us();</span><br><span class="line">IIC_SDA = <span class="number">0</span>;</span><br><span class="line">Delay5us();</span><br><span class="line">IIC_SCL = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//结束</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">IIC_Stop</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">IIC_SCL = <span class="number">1</span>;</span><br><span class="line">IIC_SDA = <span class="number">0</span>;</span><br><span class="line">Delay5us();</span><br><span class="line">IIC_SDA = <span class="number">1</span>;</span><br><span class="line">Delay5us();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//发送数据</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">IIC_Write_Byte</span><span class="params">(uchar wbyte)</span></span><br><span class="line">&#123;</span><br><span class="line">uchar i;</span><br><span class="line"><span class="keyword">for</span>(i = <span class="number">0</span>;i &lt; <span class="number">8</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">wbyte &lt;&lt;= <span class="number">1</span>;</span><br><span class="line">IIC_SDA = CY;<span class="comment">//进位标志位，左移溢出的保存在CY里</span></span><br><span class="line">IIC_SCL = <span class="number">1</span>;</span><br><span class="line">Delay5us();</span><br><span class="line">IIC_SCL = <span class="number">0</span>;</span><br><span class="line">Delay5us();</span><br><span class="line">&#125;</span><br><span class="line">IIC_SCL = <span class="number">1</span>;</span><br><span class="line">Delay5us();</span><br><span class="line">IIC_SCL = <span class="number">0</span>;</span><br><span class="line">Delay5us();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="iic-h"><a href="#iic-h" class="headerlink" title="iic.h"></a>iic.h</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __IIC_H__</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __IIC_H__</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;main.h&gt;</span></span></span><br><span class="line"><span class="comment">//声明三个函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">IIC_Start</span><span class="params">()</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">IIC_Stop</span><span class="params">()</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">IIC_Write_Byte</span><span class="params">(uchar wbyte)</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br></pre></td></tr></table></figure><h2 id="main-c"><a href="#main-c" class="headerlink" title="main.c"></a>main.c</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">#include &quot;iic.h&quot;</span><br><span class="line">#include &quot;oled.h&quot;</span><br><span class="line">#include &quot;bmp.h&quot;</span><br><span class="line">#include &quot;main.h&quot;</span><br><span class="line">void main()</span><br><span class="line">&#123;</span><br><span class="line">u8 t;</span><br><span class="line">OLED_Init();//初始化OLED</span><br><span class="line">OLED_Clear();</span><br><span class="line">OLED_ShowCHinese(0,0,0);//星</span><br><span class="line">OLED_ShowCHinese(18,0,1);//仔</span><br><span class="line">OLED_ShowCHinese(36,0,2);//爱</span><br><span class="line">OLED_ShowCHinese(54,0,3);//分</span><br><span class="line">OLED_ShowCHinese(72,0,4);//享</span><br><span class="line">OLED_ShowCHinese(90,0,5);//抖</span><br><span class="line">OLED_ShowCHinese(108,0,6);//音</span><br><span class="line">OLED_ShowCHinese(0,2,6);//音</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">OLED_Clear();</span><br><span class="line">OLED_ShowString(6,3,&quot;0.96&#x27; OLED TEST&quot;,16);//显示字符串（x,y,字符串,字号）</span><br><span class="line">OLED_Clear();</span><br><span class="line">OLED_ShowNum(103,6,224,3,16);//显示数字（x,y,数字,数字个数,字号）</span><br><span class="line">OLED_Clear();</span><br><span class="line">OLED_DrawBMP(0,0,128,8,BMP1);//（1,2：左上角坐标，3,4：右下角坐标，图片字模）</span><br><span class="line">while(1);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="main-h"><a href="#main-h" class="headerlink" title="main.h"></a>main.h</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __MAIN_H__</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __MAIN_H__</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;reg52.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">unsigned</span> <span class="type">char</span> uchar;</span><br><span class="line"></span><br><span class="line"><span class="comment">//定义时间线和数据线</span></span><br><span class="line">sbit IIC_SCL = P1^<span class="number">5</span>;</span><br><span class="line">sbit IIC_SDA = P1^<span class="number">4</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br></pre></td></tr></table></figure><h2 id="oled-c"><a href="#oled-c" class="headerlink" title="oled.c"></a>oled.c</h2><img src="https://cdn.d3iiz.top/gh/xinzai-x/MyPic1/img/202408031302009.png" alt="代码解析1" style="zoom:50%;"><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;oled.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;oledfont.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;iic.h&quot;</span></span></span><br><span class="line"><span class="comment">/**********************************************</span></span><br><span class="line"><span class="comment">// IIC Write Command(命令)</span></span><br><span class="line"><span class="comment">**********************************************/</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Write_IIC_Command</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> IIC_Command)</span></span><br><span class="line">&#123;</span><br><span class="line">   IIC_Start();</span><br><span class="line">   IIC_Write_Byte(<span class="number">0x78</span>);<span class="comment">//从机地址,SA0=0</span></span><br><span class="line">   IIC_Write_Byte(<span class="number">0x00</span>);<span class="comment">//write command</span></span><br><span class="line">   IIC_Write_Byte(IIC_Command); </span><br><span class="line">   IIC_Stop();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**********************************************</span></span><br><span class="line"><span class="comment">// IIC Write Data(数据)</span></span><br><span class="line"><span class="comment">**********************************************/</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Write_IIC_Data</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> IIC_Data)</span></span><br><span class="line">&#123;</span><br><span class="line">   IIC_Start();</span><br><span class="line">   IIC_Write_Byte(<span class="number">0x78</span>);<span class="comment">//D/C#=0; R/W#=0</span></span><br><span class="line">   IIC_Write_Byte(<span class="number">0x40</span>);<span class="comment">//write data</span></span><br><span class="line">   IIC_Write_Byte(IIC_Data);</span><br><span class="line">   IIC_Stop();</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_WR_Byte</span><span class="params">(<span class="type">unsigned</span> dat,<span class="type">unsigned</span> cmd)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(cmd)</span><br><span class="line">&#123;</span><br><span class="line">        Write_IIC_Data(dat);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        Write_IIC_Command(dat);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/********************************************</span></span><br><span class="line"><span class="comment">// fill_Picture</span></span><br><span class="line"><span class="comment">********************************************/</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">fill_picture</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> fill_Data)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> m,n;</span><br><span class="line"><span class="keyword">for</span>(m=<span class="number">0</span>;m&lt;<span class="number">8</span>;m++)</span><br><span class="line">&#123;</span><br><span class="line">OLED_WR_Byte(<span class="number">0xb0</span>+m,<span class="number">0</span>);<span class="comment">//page0-page1</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0x00</span>,<span class="number">0</span>);<span class="comment">//low column start address</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0x10</span>,<span class="number">0</span>);<span class="comment">//high column start address</span></span><br><span class="line"><span class="keyword">for</span>(n=<span class="number">0</span>;n&lt;<span class="number">128</span>;n++)</span><br><span class="line">&#123;</span><br><span class="line">OLED_WR_Byte(fill_Data,<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/***********************Delay****************************************/</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay_50ms</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> Del_50ms)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> m;</span><br><span class="line"><span class="keyword">for</span>(;Del_50ms&gt;<span class="number">0</span>;Del_50ms--)</span><br><span class="line"><span class="keyword">for</span>(m=<span class="number">6245</span>;m&gt;<span class="number">0</span>;m--);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay_1ms</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> Del_1ms)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> j;</span><br><span class="line"><span class="keyword">while</span>(Del_1ms--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;<span class="number">123</span>;j++);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//坐标设置</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_Set_Pos</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> x, <span class="type">unsigned</span> <span class="type">char</span> y)</span> </span><br><span class="line">&#123;</span><br><span class="line">    OLED_WR_Byte(<span class="number">0xb0</span>+y,OLED_CMD);</span><br><span class="line">OLED_WR_Byte(((x&amp;<span class="number">0xf0</span>)&gt;&gt;<span class="number">4</span>)|<span class="number">0x10</span>,OLED_CMD);</span><br><span class="line">OLED_WR_Byte((x&amp;<span class="number">0x0f</span>),OLED_CMD); </span><br><span class="line">&#125;     </span><br><span class="line"><span class="comment">//开启OLED显示    </span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_Display_On</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">OLED_WR_Byte(<span class="number">0X8D</span>,OLED_CMD);  <span class="comment">//SET DCDC命令</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0X14</span>,OLED_CMD);  <span class="comment">//DCDC ON</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0XAF</span>,OLED_CMD);  <span class="comment">//DISPLAY ON</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//关闭OLED显示     </span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_Display_Off</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">OLED_WR_Byte(<span class="number">0X8D</span>,OLED_CMD);  <span class="comment">//SET DCDC命令</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0X10</span>,OLED_CMD);  <span class="comment">//DCDC OFF</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0XAE</span>,OLED_CMD);  <span class="comment">//DISPLAY OFF</span></span><br><span class="line">&#125;    </span><br><span class="line"><span class="comment">//清屏函数,清完屏,整个屏幕是黑色的!和没点亮一样!!!  </span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_Clear</span><span class="params">(<span class="type">void</span>)</span>  </span><br><span class="line">&#123;  </span><br><span class="line">u8 i,n;    </span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">8</span>;i++)  </span><br><span class="line">&#123;  </span><br><span class="line">OLED_WR_Byte (<span class="number">0xb0</span>+i,OLED_CMD);    <span class="comment">//设置页地址（0~7）</span></span><br><span class="line">OLED_WR_Byte (<span class="number">0x00</span>,OLED_CMD);      <span class="comment">//设置显示位置—列低地址</span></span><br><span class="line">OLED_WR_Byte (<span class="number">0x10</span>,OLED_CMD);      <span class="comment">//设置显示位置—列高地址   </span></span><br><span class="line"><span class="keyword">for</span>(n=<span class="number">0</span>;n&lt;<span class="number">128</span>;n++)OLED_WR_Byte(<span class="number">0</span>,OLED_DATA); </span><br><span class="line">&#125; <span class="comment">//更新显示</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_On</span><span class="params">(<span class="type">void</span>)</span>  </span><br><span class="line">&#123;  </span><br><span class="line">u8 i,n;    </span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">8</span>;i++)  </span><br><span class="line">&#123;  </span><br><span class="line">OLED_WR_Byte (<span class="number">0xb0</span>+i,OLED_CMD);<span class="comment">//设置页地址（0~7）</span></span><br><span class="line">OLED_WR_Byte (<span class="number">0x00</span>,OLED_CMD);<span class="comment">//设置显示位置—列低地址</span></span><br><span class="line">OLED_WR_Byte (<span class="number">0x10</span>,OLED_CMD);<span class="comment">//设置显示位置—列高地址   </span></span><br><span class="line"><span class="keyword">for</span>(n=<span class="number">0</span>;n&lt;<span class="number">128</span>;n++)OLED_WR_Byte(<span class="number">1</span>,OLED_DATA); </span><br><span class="line">&#125; <span class="comment">//更新显示</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//在指定位置显示一个字符,包括部分字符</span></span><br><span class="line"><span class="comment">//x:0~127</span></span><br><span class="line"><span class="comment">//y:0~63</span></span><br><span class="line"><span class="comment">//mode:0,反白显示;1,正常显示 </span></span><br><span class="line"><span class="comment">//size:选择字体 16/12 </span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_ShowChar</span><span class="params">(u8 x,u8 y,u8 chr,u8 Char_Size)</span></span><br><span class="line">&#123;      </span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> c=<span class="number">0</span>,i=<span class="number">0</span>;</span><br><span class="line">    c=chr-<span class="string">&#x27; &#x27;</span>;<span class="comment">//得到偏移后的值</span></span><br><span class="line">    <span class="keyword">if</span>(x&gt;Max_Column<span class="number">-1</span>)&#123;x=<span class="number">0</span>;y=y+<span class="number">2</span>;&#125;</span><br><span class="line">    <span class="keyword">if</span>(Char_Size ==<span class="number">16</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        OLED_Set_Pos(x,y);</span><br><span class="line">        <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">8</span>;i++)</span><br><span class="line">        OLED_WR_Byte(F8X16[c*<span class="number">16</span>+i],OLED_DATA);</span><br><span class="line">        OLED_Set_Pos(x,y+<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">8</span>;i++)</span><br><span class="line">        OLED_WR_Byte(F8X16[c*<span class="number">16</span>+i+<span class="number">8</span>],OLED_DATA);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">    &#123;</span><br><span class="line">        OLED_Set_Pos(x,y);</span><br><span class="line">        <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">6</span>;i++)</span><br><span class="line">        OLED_WR_Byte(F6x8[c][i],OLED_DATA);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//m^n函数</span></span><br><span class="line">u32 <span class="title function_">oled_pow</span><span class="params">(u8 m,u8 n)</span></span><br><span class="line">&#123;</span><br><span class="line">u32 result=<span class="number">1</span>; </span><br><span class="line"><span class="keyword">while</span>(n--)result*=m;    </span><br><span class="line"><span class="keyword">return</span> result;</span><br><span class="line">&#125;  </span><br><span class="line"><span class="comment">//显示2个数字</span></span><br><span class="line"><span class="comment">//x,y :起点坐标 </span></span><br><span class="line"><span class="comment">//len :数字的位数</span></span><br><span class="line"><span class="comment">//size:字体大小</span></span><br><span class="line"><span class="comment">//mode:模式0,填充模式;1,叠加模式</span></span><br><span class="line"><span class="comment">//num:数值(0~4294967295);   </span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_ShowNum</span><span class="params">(u8 x,u8 y,u32 num,u8 len,u8 size2)</span></span><br><span class="line">&#123;         </span><br><span class="line">u8 t,temp;</span><br><span class="line">u8 enshow=<span class="number">0</span>;   </span><br><span class="line"><span class="keyword">for</span>(t=<span class="number">0</span>;t&lt;len;t++)</span><br><span class="line">&#123;</span><br><span class="line">temp=(num/oled_pow(<span class="number">10</span>,len-t<span class="number">-1</span>))%<span class="number">10</span>;</span><br><span class="line"><span class="keyword">if</span>(enshow==<span class="number">0</span>&amp;&amp;t&lt;(len<span class="number">-1</span>))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(temp==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">OLED_ShowChar(x+(size2/<span class="number">2</span>)*t,y,<span class="string">&#x27; &#x27;</span>,size2);</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;<span class="keyword">else</span> enshow=<span class="number">1</span>; </span><br><span class="line">&#125;</span><br><span class="line"> OLED_ShowChar(x+(size2/<span class="number">2</span>)*t,y,temp+<span class="string">&#x27;0&#x27;</span>,size2); </span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br><span class="line"><span class="comment">//显示一个字符号串</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_ShowString</span><span class="params">(u8 x,u8 y,u8 *chr,u8 Char_Size)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> j=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (chr[j]!=<span class="string">&#x27;\0&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line">        OLED_ShowChar(x,y,chr[j],Char_Size);</span><br><span class="line">x+=<span class="number">8</span>;</span><br><span class="line"><span class="keyword">if</span>(x&gt;<span class="number">120</span>)&#123;x=<span class="number">0</span>;y+=<span class="number">2</span>;&#125;</span><br><span class="line">j++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//显示汉字</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_ShowCHinese</span><span class="params">(u8 x,u8 y,u8 no)</span></span><br><span class="line">&#123;          </span><br><span class="line">u8 t,adder=<span class="number">0</span>;</span><br><span class="line">OLED_Set_Pos(x,y);</span><br><span class="line">    <span class="keyword">for</span>(t=<span class="number">0</span>;t&lt;<span class="number">16</span>;t++)</span><br><span class="line">&#123;</span><br><span class="line">        OLED_WR_Byte(Hzk[<span class="number">2</span>*no][t],OLED_DATA);</span><br><span class="line">adder+=<span class="number">1</span>;</span><br><span class="line">     &#125;</span><br><span class="line">OLED_Set_Pos(x,y+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span>(t=<span class="number">0</span>;t&lt;<span class="number">16</span>;t++)</span><br><span class="line">&#123;</span><br><span class="line">        OLED_WR_Byte(Hzk[<span class="number">2</span>*no+<span class="number">1</span>][t],OLED_DATA);</span><br><span class="line">        adder += <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/***********功能描述：显示显示BMP图片128×64起始点坐标(x,y),x的范围0～127，y为页的范围0～7*****************/</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_DrawBMP</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> x0, <span class="type">unsigned</span> <span class="type">char</span> y0,<span class="type">unsigned</span> <span class="type">char</span> x1, <span class="type">unsigned</span> <span class="type">char</span> y1,<span class="type">unsigned</span> <span class="type">char</span> BMP[])</span></span><br><span class="line">&#123; </span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> j=<span class="number">0</span>;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">char</span> x,y;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(y1%<span class="number">8</span>==<span class="number">0</span>) y=y1/<span class="number">8</span>;      </span><br><span class="line">    <span class="keyword">else</span> y=y1/<span class="number">8</span>+<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(y=y0;y&lt;y1;y++)</span><br><span class="line">    &#123;</span><br><span class="line">        OLED_Set_Pos(x0,y);</span><br><span class="line">    <span class="keyword">for</span>(x=x0;x&lt;x1;x++)</span><br><span class="line">        &#123;      </span><br><span class="line">            OLED_WR_Byte(BMP[j++],OLED_DATA);    </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="comment">//初始化SSD1306    </span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_Init</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123; </span><br><span class="line"> </span><br><span class="line">OLED_WR_Byte(<span class="number">0xAE</span>,OLED_CMD);<span class="comment">//--display off</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0x00</span>,OLED_CMD);<span class="comment">//---set low column address</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0x10</span>,OLED_CMD);<span class="comment">//---set high column address</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0x40</span>,OLED_CMD);<span class="comment">//--set start line address  </span></span><br><span class="line">OLED_WR_Byte(<span class="number">0xB0</span>,OLED_CMD);<span class="comment">//--set page address</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0x81</span>,OLED_CMD); <span class="comment">// contract control</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0xFF</span>,OLED_CMD);<span class="comment">//--128   </span></span><br><span class="line">OLED_WR_Byte(<span class="number">0xA1</span>,OLED_CMD);<span class="comment">//set segment remap </span></span><br><span class="line">OLED_WR_Byte(<span class="number">0xA6</span>,OLED_CMD);<span class="comment">//--normal / reverse</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0xA8</span>,OLED_CMD);<span class="comment">//--set multiplex ratio(1 to 64)</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0x3F</span>,OLED_CMD);<span class="comment">//--1/32 duty</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0xC8</span>,OLED_CMD);<span class="comment">//Com scan direction</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0xD3</span>,OLED_CMD);<span class="comment">//-set display offset</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0x00</span>,OLED_CMD);<span class="comment">//</span></span><br><span class="line"></span><br><span class="line">OLED_WR_Byte(<span class="number">0xD5</span>,OLED_CMD);<span class="comment">//set osc division</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0x80</span>,OLED_CMD);<span class="comment">//</span></span><br><span class="line"></span><br><span class="line">OLED_WR_Byte(<span class="number">0xD8</span>,OLED_CMD);<span class="comment">//set area color mode off</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0x05</span>,OLED_CMD);<span class="comment">//</span></span><br><span class="line"></span><br><span class="line">OLED_WR_Byte(<span class="number">0xD9</span>,OLED_CMD);<span class="comment">//Set Pre-Charge Period</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0xF1</span>,OLED_CMD);<span class="comment">//</span></span><br><span class="line"></span><br><span class="line">OLED_WR_Byte(<span class="number">0xDA</span>,OLED_CMD);<span class="comment">//set com pin configuartion</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0x12</span>,OLED_CMD);<span class="comment">//</span></span><br><span class="line"></span><br><span class="line">OLED_WR_Byte(<span class="number">0xDB</span>,OLED_CMD);<span class="comment">//set Vcomh</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0x30</span>,OLED_CMD);<span class="comment">//</span></span><br><span class="line"></span><br><span class="line">OLED_WR_Byte(<span class="number">0x8D</span>,OLED_CMD);<span class="comment">//set charge pump enable</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0x14</span>,OLED_CMD);<span class="comment">//</span></span><br><span class="line"></span><br><span class="line">OLED_WR_Byte(<span class="number">0xAF</span>,OLED_CMD);<span class="comment">//--turn on oled panel</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="oled-h"><a href="#oled-h" class="headerlink" title="oled.h"></a>oled.h</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __OLED_H__</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __OLED_H__</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>  u8 unsigned char </span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>  u32 unsigned int </span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> OLED_CMD  0<span class="comment">//写命令</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> OLED_DATA 1<span class="comment">//写数据</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> OLED_MODE 0</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//OLED模式设置</span></span><br><span class="line"><span class="comment">//0:4线串行模式</span></span><br><span class="line"><span class="comment">//1:并行8080模式</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SIZE 16</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> XLevelL0x02</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> XLevelH0x10</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> Max_Column128</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> Max_Row64</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>Brightness0xFF </span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> X_WIDTH 128</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> Y_WIDTH 64      </span></span><br><span class="line"><span class="comment">//-----------------OLED端口定义----------------     </span></span><br><span class="line"><span class="type">void</span> <span class="title function_">delay_ms</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> ms)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//OLED控制用函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_WR_Byte</span><span class="params">(<span class="type">unsigned</span> dat,<span class="type">unsigned</span> cmd)</span>;  </span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_Display_On</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_Display_Off</span><span class="params">(<span class="type">void</span>)</span>;          </span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_Init</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_Clear</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_DrawPoint</span><span class="params">(u8 x,u8 y,u8 t)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_Fill</span><span class="params">(u8 x1,u8 y1,u8 x2,u8 y2,u8 dot)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_ShowChar</span><span class="params">(u8 x,u8 y,u8 chr,u8 Char_Size)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_ShowNum</span><span class="params">(u8 x,u8 y,u32 num,u8 len,u8 size)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_ShowString</span><span class="params">(u8 x,u8 y, u8 *p,u8 Char_Size)</span>; </span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_Set_Pos</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> x, <span class="type">unsigned</span> <span class="type">char</span> y)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_ShowCHinese</span><span class="params">(u8 x,u8 y,u8 no)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_DrawBMP</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> x0, <span class="type">unsigned</span> <span class="type">char</span> y0,<span class="type">unsigned</span> <span class="type">char</span> x1, <span class="type">unsigned</span> <span class="type">char</span> y1,<span class="type">unsigned</span> <span class="type">char</span> BMP[])</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay_50ms</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> Del_50ms)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay_1ms</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> Del_1ms)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">fill_picture</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> fill_Data)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">Picture</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Write_IIC_Command</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> IIC_Command)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">Write_IIC_Data</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> IIC_Data)</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br></pre></td></tr></table></figure><p>oledfont.h、bmp.h为字符字模、图片字模</p><h2 id="delay-c"><a href="#delay-c" class="headerlink" title="delay.c"></a>delay.c</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;delay.h&quot;</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay5us</span><span class="params">()</span><span class="comment">//@11.0592MHz</span></span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="delay-h"><a href="#delay-h" class="headerlink" title="delay.h"></a>delay.h</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __DELAY_H__</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __DELAY_H__</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay5us</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;IIC理论&quot;&gt;&lt;a href=&quot;#IIC理论&quot; class=&quot;headerlink&quot; title=&quot;IIC理论&quot;&gt;&lt;/a&gt;&lt;center&gt;IIC理论&lt;/center&gt;&lt;/h1&gt;&lt;h2 id=&quot;实现方式&quot;&gt;&lt;a href=&quot;#实现方式&quot; class=&quot;headerl</summary>
      
    
    
    
    <category term="51单片机" scheme="http://example.com/categories/51%E5%8D%95%E7%89%87%E6%9C%BA/"/>
    
    
    <category term="51单片机" scheme="http://example.com/tags/51%E5%8D%95%E7%89%87%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>串口</title>
    <link href="http://example.com/post/f736596e.html"/>
    <id>http://example.com/post/f736596e.html</id>
    <published>2024-04-12T02:13:58.000Z</published>
    <updated>2024-08-03T09:16:37.024Z</updated>
    
    <content type="html"><![CDATA[<h1 id="串口的介绍"><a href="#串口的介绍" class="headerlink" title="串口的介绍"></a><center>串口的介绍</center></h1><p>UART（通用异步收发器）是一种双向、串行、异步的通信总线，仅用一根数据接收线（RX）和一根数据发送线（TX）就能实现全双工通信</p><p>R：Receiver(接收)，T：Transmit(发送)</p><img src="https://cdn.d3iiz.top/gh/xinzai-x/MyPic/img/202406111508432.png" alt="数据组成" style="zoom: 33%;"><p>UART 在发送或接收过程中的一帧数据由4部分组成，起始位、数据位、奇偶校验位和停止位</p><p>如图所示。其中，起始位标志着一帧数据的开始，停止位标志着一帧数据的结束，数据位是一帧数据中的有效数据，校验位分为奇校验和偶校验，用于检验数据在传输过程中是否出错。（奇校验时，发送方应使数据位中1的个数与校验位中1的个数之和为奇数；接收方在接收数据时， 对1的个数进行检查，若不为奇数，则说明数据在传输过程中出了差错。同样，偶校验则检查1的个数是否为偶数）</p><p> UART通信过程中的数据格式及传输速率是可设置的，为了正确的通信，收发双方应约定并遵循同样的设置。数据位可选择为5、6、7、8位，其中8位数据位是最常用的，在实际应用中一般都选择8位数据位；校验位可选择奇校验、偶校验或者无校验位；停止位可选择1位（默认）， 1.5或2位</p><p>串口通信的速率用波特率表示，它表示每秒传输二进制数据的位数，单位是bps（位 &#x2F;秒），常用的波特率有9600、19200、38400、57600以及115200等</p><p>如波特率9600则代表每秒传输9600bit数据，以串口发送1个字节10bit算（起始位1bit+数据8bit+停止位1bit+NO校验位），则传输1个字节需要的时间是1*10&#x2F;9600秒</p><p>USART：通用同步&#x2F;异步串行接收&#x2F;发送器</p><h2 id="TTL"><a href="#TTL" class="headerlink" title="TTL"></a><center>TTL</center></h2><p>一般单片机产生的都是TTL电平。无论是51、32、还是各种跑Linux的ARM芯片，TTL满足绝大多数调试需求</p><p>TTL串口采用的是单一的信号线 (TX线和RX线) 进行数据传输，其中TX线用于单片机发送数据，RX线用于单片机接收数据。数据传输速率通常可以达到几-kbps至上百kbps的速率，<font color="red">传输距离较短，一般不超过数十米</font></p><p>TTL转USB</p><img src="https://cdn.d3iiz.top/gh/xinzai-x/MyPic/img/202406111546131.png" alt="例图" style="zoom:50%;"><img src="https://cdn.d3iiz.top/gh/xinzai-x/MyPic/img/202406111545487.png" alt="传输方向" style="zoom:50%;"><p>TTL的逻辑电平通常是0V和5V，其中0V表示逻辑“0”，5V表示逻辑“1”</p><h2 id="RS-232"><a href="#RS-232" class="headerlink" title="RS-232"></a><center>RS-232</center></h2><p>RS-232转USB</p><p>规定逻辑“1”的电平为-5V~-15 V，逻辑“0”的电平为+5 V～+15 V</p><p>由于RS -232采用串行传送方式，并且将TTL电平(某芯片)转换为RS-232C电平，其传送距离一般可达30 m。若采用光电隔离20 mA的电流环进行传送，其传送距离可以达到1000 m</p><img src="https://cdn.d3iiz.top/gh/xinzai-x/MyPic/img/202406111708423.png" alt="公母头接法" style="zoom: 67%;"><h2 id="RS-485"><a href="#RS-485" class="headerlink" title="RS-485"></a><center>RS-485</center></h2><p>传输速度可以达到10Mb&#x2F;s以上，传输距离可以达到3000米左右</p><p>传输方式为：<code>差分方式</code></p><h1 id="分类方式"><a href="#分类方式" class="headerlink" title="分类方式"></a><center>分类方式</center></h1><h2 id="串口并口"><a href="#串口并口" class="headerlink" title="串口并口"></a><center>串口并口</center></h2><img src="https://cdn.d3iiz.top/gh/xinzai-x/MyPic/img/202406111729362.png" alt="图解" style="zoom:33%;"><h2 id="同步异步"><a href="#同步异步" class="headerlink" title="同步异步"></a><center>同步异步</center></h2><p>异步：通信双方各自约定通信速率</p><p>UART：TX、RX</p><p>1 Wire</p><p>同步：通信双方靠一根时钟线来约定通信速率</p><p>IIC：SDA、SCL</p><p>SPI：MOSI、MISO、SCK、CS</p><p>单工：指消息只能单方向传输的工作方式</p><p>半双工：指信息即可从A到B，也可以从B到A，任一时刻只能有一个方向上的传输存在</p><p>全双工：指在任意时刻线路上存在A到B和B到A的双向信号传输</p><h1 id="相关寄存器"><a href="#相关寄存器" class="headerlink" title="相关寄存器"></a><center>相关寄存器</center></h1><h2 id="SCON"><a href="#SCON" class="headerlink" title="SCON"></a><center>SCON</center></h2><p>工作模式：01（8位UART波特率可变）其他不用为0</p><img src="https://cdn.d3iiz.top/gh/xinzai-x/MyPic/img/202406131001458.png" alt="SCON详细1" style="zoom: 67%;"><p>REN &#x3D; 1，接收信息，一开始发送中断标志位、接收中断标志位置0</p><p>TB8：发送校验位，RB8：接收校验位，TI：发送中断，RI：接收中断</p><img src="https://cdn.d3iiz.top/gh/xinzai-x/MyPic/img/202406131001199.png" alt="SCON详细2" style="zoom: 67%;"><p>则SCON &#x3D; 0x50</p><img src="https://cdn.d3iiz.top/gh/xinzai-x/MyPic/img/202406131002775.png" alt="SCON详细3" style="zoom: 67%;"><h2 id="PCON"><a href="#PCON" class="headerlink" title="PCON"></a><center>PCON</center></h2><img src="https://cdn.d3iiz.top/gh/xinzai-x/MyPic/img/202406131029450.png" alt="PCON解释图" style="zoom:67%;"><h2 id="TMOD"><a href="#TMOD" class="headerlink" title="TMOD"></a><center>TMOD</center></h2><p>模式(M1、M0)：这里选10（8位自动重装载定时器），其他在定时器有讲解</p><p><img src="https://cdn.d3iiz.top/gh/xinzai-x/MyPic/img/202404131536016.png" alt="TMOD解释图"></p><h2 id="SBUF"><a href="#SBUF" class="headerlink" title="SBUF"></a><center>SBUF</center></h2><p>接收和发送的数据都存在SBUF</p><img src="https://cdn.d3iiz.top/gh/xinzai-x/MyPic/img/202406131633290.png" alt="SBUF图解" style="zoom: 67%;"><h2 id="IE"><a href="#IE" class="headerlink" title="IE"></a><center>IE</center></h2><p>中断允许寄存器</p><img src="https://cdn.d3iiz.top/gh/xinzai-x/MyPic/img/202404121351544.png" alt="允许寄存器分析" style="zoom:67%;"><h1 id="中断处理函数"><a href="#中断处理函数" class="headerlink" title="中断处理函数"></a><center>中断处理函数</center></h1><table><thead><tr><th>中断源</th><th>中断处理函数</th></tr></thead><tbody><tr><td>UART</td><td>UART_Routine(void)         interrupt 4</td></tr></tbody></table><h1 id="代码编写"><a href="#代码编写" class="headerlink" title="代码编写"></a><center>代码编写</center></h1><p>为何需要使用定时器观看链接讲解(9.34)：<a href="https://www.bilibili.com/video/BV1Bg4y1M7vi/?spm_id_from=333.788&vd_source=1c838941386ee32c4501615c317f75e0">波特率发生器</a></p><h2 id="main-c"><a href="#main-c" class="headerlink" title="main.c"></a>main.c</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;reg52.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;delay.h&quot;</span><span class="comment">//声明头文件，可在此文件使用头文件声明的函数、变量等</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;Uart.h&quot;</span></span></span><br><span class="line"></span><br><span class="line">uchar recv;<span class="comment">//全局变量用于接收数据</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">UART_Init();</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">Delay1000ms();</span><br><span class="line">UART_send_str(<span class="string">&quot;i am xingzai&quot;</span>);<span class="comment">//发送字符</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//串口中断处理函数</span></span><br><span class="line">UART_Routine(<span class="type">void</span>)         interrupt <span class="number">4</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="number">1</span> == RI)</span><br><span class="line">&#123;</span><br><span class="line">RI = <span class="number">0</span>;<span class="comment">//接收中断请求标志位软件复位</span></span><br><span class="line">recv = SBUF;<span class="comment">//接收数据赋值给变量</span></span><br><span class="line"><span class="keyword">switch</span>(recv)</span><br><span class="line">&#123;</span><br><span class="line">           <span class="keyword">case</span> <span class="number">0x1</span>: LED1 = <span class="number">0</span>;<span class="keyword">break</span>;   </span><br><span class="line">           <span class="keyword">case</span> <span class="number">0x2</span>: LED2 = <span class="number">0</span>;<span class="keyword">break</span>;</span><br><span class="line">           <span class="keyword">case</span> <span class="number">0x3</span>: LED3 = <span class="number">0</span>;<span class="keyword">break</span>;</span><br><span class="line">           <span class="keyword">case</span> <span class="number">0x4</span>: LED4 = <span class="number">0</span>;<span class="keyword">break</span>;</span><br><span class="line">           <span class="keyword">case</span> <span class="number">0x5</span>: P1  |= <span class="number">0x0F</span>;<span class="keyword">break</span>;<span class="comment">//这里采用或等于，目的不让P1.6蜂鸣器为0，保留高位原数据</span></span><br><span class="line">           <span class="keyword">case</span> <span class="number">0x6</span>: BEEP = <span class="number">0</span>;<span class="keyword">break</span>;</span><br><span class="line">           <span class="keyword">case</span> <span class="number">0x7</span>: BEEP = <span class="number">1</span>;<span class="keyword">break</span>;</span><br><span class="line">           <span class="keyword">case</span> <span class="number">0x8</span>: JDQ1 = <span class="number">0</span>;<span class="keyword">break</span>;</span><br><span class="line">           <span class="keyword">case</span> <span class="number">0x9</span>: JDQ1 = <span class="number">1</span>;<span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="delay-c"><a href="#delay-c" class="headerlink" title="delay.c"></a>delay.c</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;delay.h&quot;</span><span class="comment">//声明对应头文件，用于声明里面此文件函数、变量等</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;intrins.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;main.h&quot;</span></span></span><br><span class="line"><span class="comment">//延时函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay1000ms</span><span class="params">()</span><span class="comment">//@11.0592MHz</span></span><br><span class="line">&#123;</span><br><span class="line">uchar data i, j, k;</span><br><span class="line"></span><br><span class="line">_nop_();</span><br><span class="line">i = <span class="number">8</span>;</span><br><span class="line">j = <span class="number">1</span>;</span><br><span class="line">k = <span class="number">243</span>;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">while</span> (--k);</span><br><span class="line">&#125; <span class="keyword">while</span> (--j);</span><br><span class="line">&#125; <span class="keyword">while</span> (--i);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="delay-h"><a href="#delay-h" class="headerlink" title="delay.h"></a>delay.h</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//头文件固定格式，防止头文件重复包含</span></span><br><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __DELAY_H__</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __DELAY_H__</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay1000ms</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br></pre></td></tr></table></figure><h2 id="Uart-c"><a href="#Uart-c" class="headerlink" title="Uart.c"></a>Uart.c</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;reg52.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;Uart.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">UART_Init</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//配置相关寄存器</span></span><br><span class="line">SCON = <span class="number">0x50</span>;<span class="comment">//配置串口寄存器</span></span><br><span class="line">PCON=<span class="number">0x00</span>;</span><br><span class="line">TMOD |= <span class="number">0x20</span>;<span class="comment">//配置时间寄存器定时器1</span></span><br><span class="line"><span class="comment">//定时器初值</span></span><br><span class="line">TH1 = <span class="number">0xFD</span>;</span><br><span class="line">TL1 = <span class="number">0xFD</span>;</span><br><span class="line">EA = <span class="number">1</span>;<span class="comment">//打开中断总允许位</span></span><br><span class="line">ES = <span class="number">1</span>;<span class="comment">//打开串口中断允许位</span></span><br><span class="line">TR1 = <span class="number">1</span>;<span class="comment">//打开定时器1运行控制位</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//字符发送函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">UART_send_char</span><span class="params">(uchar send_char)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//将字符赋值给数据缓存寄存器</span></span><br><span class="line">SBUF = send_char;</span><br><span class="line"><span class="keyword">while</span>(!TI);<span class="comment">//发送时为0，发送完触发发送中断时为1，为1时则数据发送完</span></span><br><span class="line">TI = <span class="number">0</span>;<span class="comment">//发送中断请求标志位软件复位</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//接收传过来的字符串</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">UART_send_str</span><span class="params">(uchar *send_str)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//判断字符到最后&#x27;\0&#x27;则停止发送</span></span><br><span class="line"><span class="keyword">while</span>(*send_str != <span class="string">&#x27;\0&#x27;</span>)</span><br><span class="line">UART_send_char(*send_str++);<span class="comment">//将字符逐个传给这个函数发送</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Uart-h"><a href="#Uart-h" class="headerlink" title="Uart.h"></a>Uart.h</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __UART_H__</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __UART_H__</span></span><br><span class="line"><span class="comment">//因为main.c中已经声明了Uart.h，在Uart.h声明了main.h则main.c中也可以使用mian.h</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;main.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">UART_Init</span><span class="params">()</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">UART_send_char</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> send_char)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">UART_send_str</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> *send_str)</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br></pre></td></tr></table></figure><h2 id="main-h"><a href="#main-h" class="headerlink" title="main.h"></a>main.h</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __MAIN_H__</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __MAIN_H__</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;reg52.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">unsigned</span> <span class="type">char</span> uchar;<span class="comment">//给unsigned char取别名uchar</span></span><br><span class="line"><span class="comment">//定义对应元器件引脚</span></span><br><span class="line">sbit LED1 = P1^<span class="number">0</span>;</span><br><span class="line">sbit LED2 = P1^<span class="number">1</span>;</span><br><span class="line">sbit LED3 = P1^<span class="number">2</span>;</span><br><span class="line">sbit LED4 = P1^<span class="number">3</span>;</span><br><span class="line">sbit BEEP = P1^<span class="number">6</span>;</span><br><span class="line">sbit JDQ1 = P1^<span class="number">7</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br></pre></td></tr></table></figure><h2 id="回环"><a href="#回环" class="headerlink" title="回环"></a>回环</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;reg52.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;intrins.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> recv;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> send_buf[<span class="number">20</span>];</span><br><span class="line"></span><br><span class="line">sbit LED1 = P1^<span class="number">0</span>;</span><br><span class="line">sbit LED2 = P1^<span class="number">1</span>;</span><br><span class="line">sbit LED3 = P1^<span class="number">2</span>;</span><br><span class="line">sbit LED4 = P1^<span class="number">3</span>;</span><br><span class="line">sbit BEEP = P1^<span class="number">6</span>;</span><br><span class="line">sbit JDQ1 = P1^<span class="number">7</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay1000ms</span><span class="params">()</span>    <span class="comment">//@11.0592MHz</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">unsigned</span> <span class="type">char</span> data i, j, k;</span><br><span class="line"> </span><br><span class="line">  _nop_();</span><br><span class="line">  i = <span class="number">8</span>;</span><br><span class="line">  j = <span class="number">1</span>;</span><br><span class="line">  k = <span class="number">243</span>;</span><br><span class="line">  <span class="keyword">do</span></span><br><span class="line">  &#123;</span><br><span class="line">     <span class="keyword">do</span></span><br><span class="line">     &#123;</span><br><span class="line">       <span class="keyword">while</span> (--k);</span><br><span class="line">     &#125; <span class="keyword">while</span> (--j);</span><br><span class="line">  &#125; <span class="keyword">while</span> (--i);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">UART_send_byte</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> send_byte)</span></span><br><span class="line">&#123;</span><br><span class="line">SBUF = send_byte;</span><br><span class="line"><span class="keyword">while</span>(!TI);</span><br><span class="line">TI=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">UART_send_str</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> *send_str)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">while</span>(*send_str != <span class="string">&#x27;\0&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line">UART_send_byte(*send_str++);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">SCON = <span class="number">0x50</span>;</span><br><span class="line">PCON=<span class="number">0x00</span>;</span><br><span class="line">TMOD |= <span class="number">0x20</span>;</span><br><span class="line">TH1 = <span class="number">0xFD</span>;</span><br><span class="line">TL1 = <span class="number">0xFD</span>;</span><br><span class="line">EA = <span class="number">1</span>;</span><br><span class="line">ES = <span class="number">1</span>;</span><br><span class="line">TR1 = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">  &#123;</span><br><span class="line">Delay1000ms();</span><br><span class="line"><span class="comment">//UART_send_str(&quot;i am wfeng!\r\n&quot;);</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">UART_Routine(<span class="type">void</span>)    interrupt <span class="number">4</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="number">1</span> == RI) <span class="comment">//if(RI)</span></span><br><span class="line">&#123;</span><br><span class="line">RI=<span class="number">0</span>;</span><br><span class="line">recv = SBUF;</span><br><span class="line">SBUF = recv;</span><br><span class="line"><span class="keyword">while</span>(!TI);</span><br><span class="line">TI=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="继电器"><a href="#继电器" class="headerlink" title="继电器"></a><center>继电器</center></h1><p><img src="https://cdn.d3iiz.top/gh/xinzai-x/MyPic/img/202406191552254.gif" alt="继电器动态原理图"></p><p>继电器模块的基本工作原理：</p><p>电磁线圈： 继电器内部包含一个电磁线圈，通常由绕制在绝缘芯片上的细导线组成。当通过线圈通电时，产生电磁场。</p><p>磁性吸引： 电磁场会使继电器中的铁芯（或磁性材料）受到磁性吸引，导致铁芯在电磁力的作用下移动。</p><p>触点操作： 铁芯的移动会导致机械部分的运动，最终使触点（开关）发生动作。继电器通常有常开（Normally Open，NO）和常闭（Normally Closed，NC）两组触点。</p><p>常开触点： 在继电器未通电时处于闭合状态，当电磁线圈通电时，触点打开。</p><p>常闭触点： 在继电器未通电时处于打开状态，当电磁线圈通电时，触点闭合。</p><p>电气隔离： 继电器的主要作用之一是提供电气隔离。通过电磁原理，可以在控制信号与被控制电路之间提供隔离，从而使得不同电路之间的电流不会相互影响。继电器模块常用于控制高电流或高电压的电路。</p><h1 id="ESP8266"><a href="#ESP8266" class="headerlink" title="ESP8266"></a><center>ESP8266</center></h1><p>AP模式：无线接入点，它是一个无线网络的中心节点，可以看成是一个服务器。它作为一个网络的中心节点，提供无线接入服务，其他的无线设备允许接入该节点，所有接入该节点设备的无线信号数据都要通过它才能进行交换和互相访问。一般的无线路由器、网关、热点就是工作在AP模式下，AP节点和AP节点之间允许相互连接。</p><p>STA模式：无线网络中的一个终端站点设备，可以看成是一个客户端，一般来说，处在STA模式下的设备本身不接受无线的接入，该设备连接到AP节点进行网络访问，STA模式下的设备之间的通信可以通过AP进行转发实现</p><h2 id="AT指令"><a href="#AT指令" class="headerlink" title="AT指令"></a><center>AT指令</center></h2><p>可在官网寻找对应的指令集：<a href="https://docs.ai-thinker.com/esp8266/docs">安信可科技</a></p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">配置 WiFi 模式：AT+CWMODE=3//模式3：STA+AP</span><br><span class="line">连接路由器：AT+CWJAP=&quot;wfeng&quot;,&quot;wf05430543&quot;</span><br><span class="line">查询 ESP8266的IP 地址： AT+CIFSR</span><br><span class="line">//PC端使用网络调试工具，建⽴一个 TCP 服务器器</span><br><span class="line">ESP8266 作为Client 连接到服务器：AT+CIPSTART=&quot;TCP&quot;,&quot;192.168.31.118&quot;,8090</span><br><span class="line">发送数据：AT+CIPSEND=4</span><br></pre></td></tr></table></figure><h2 id="代码编写-1"><a href="#代码编写-1" class="headerlink" title="代码编写"></a><center>代码编写</center></h2><p>电脑当服务端，单片机当客户端，电脑发指令控制单片机(接收)，单片机发送字符给电脑</p><h3 id="main-c-1"><a href="#main-c-1" class="headerlink" title="main.c"></a>main.c</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;define.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;send.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;delay.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">define_bl();</span><br><span class="line"><span class="keyword">do</span>&#123;</span><br><span class="line">send_str(<span class="string">&quot;AT+CWMODE=3\r\n&quot;</span>);<span class="comment">//发送AT指令配置ESP8266模块，选择模式3</span></span><br><span class="line">Delay1000ms();</span><br><span class="line">&#125;<span class="keyword">while</span>(Esp_Ok_flag);</span><br><span class="line"></span><br><span class="line">Esp_Ok_flag = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">do</span>&#123;</span><br><span class="line">send_str(<span class="string">&quot;AT+CWJAP=\&quot;qiji\&quot;,\&quot;12345678\&quot;\r\n&quot;</span>);<span class="comment">//连接WiFi</span></span><br><span class="line">Delay1000ms();</span><br><span class="line">&#125;<span class="keyword">while</span>(Esp_Ok_flag);</span><br><span class="line"></span><br><span class="line">Esp_Ok_flag = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">do</span>&#123;</span><br><span class="line">send_str(<span class="string">&quot;AT+CIPSTART=\&quot;TCP\&quot;,\&quot;192.168.43.10\&quot;,8085\r\n&quot;</span>);<span class="comment">//连接服务器</span></span><br><span class="line">Delay1000ms();</span><br><span class="line">&#125;<span class="keyword">while</span>(Esp_Ok_flag);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">do</span>&#123;</span><br><span class="line">send_str(<span class="string">&quot;AT+CIPSEND=4\r\n&quot;</span>);<span class="comment">//发送4个字节数据</span></span><br><span class="line">Delay1000ms();</span><br><span class="line">&#125;<span class="keyword">while</span>(Esp_Ok_flag);</span><br><span class="line"></span><br><span class="line">send_str(<span class="string">&quot;xinz\r\n&quot;</span>);<span class="comment">//发送的数据</span></span><br><span class="line">Esp_Ok_flag = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">Delay1000ms();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="define-c"><a href="#define-c" class="headerlink" title="define.c"></a>define.c</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;define.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> Esp_Ok_flag = <span class="number">1</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">define_bl</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    </span><br><span class="line">SCON = <span class="number">0x50</span>;</span><br><span class="line">PCON = <span class="number">0x00</span>;</span><br><span class="line">TMOD = <span class="number">0x20</span>;</span><br><span class="line">TH1 = <span class="number">0xFD</span>;</span><br><span class="line">TL1 = <span class="number">0xFD</span>;</span><br><span class="line">TR1 = <span class="number">1</span>;</span><br><span class="line">ES = <span class="number">1</span>;</span><br><span class="line">EA = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="define-h"><a href="#define-h" class="headerlink" title="define.h"></a>define.h</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __DELAY_H__</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __DELAY_H__</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;reg52.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">define_bl</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">unsigned</span> <span class="type">char</span> uchar;<span class="comment">//取别名</span></span><br><span class="line"><span class="keyword">extern</span> <span class="type">int</span> Esp_Ok_flag;<span class="comment">//定义一个全局变量方便不同.c文件使用</span></span><br><span class="line"><span class="comment">//定义对应元器件引脚</span></span><br><span class="line">sbit LED1 = P1^<span class="number">0</span>;</span><br><span class="line">sbit LED2 = P1^<span class="number">1</span>;</span><br><span class="line">sbit LED3 = P1^<span class="number">2</span>;</span><br><span class="line">sbit LED4 = P1^<span class="number">3</span>;</span><br><span class="line">sbit BEEP = P1^<span class="number">6</span>;</span><br><span class="line">sbit JDQ1 = P1^<span class="number">7</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br></pre></td></tr></table></figure><h3 id="send-c"><a href="#send-c" class="headerlink" title="send.c"></a>send.c</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;send.h&gt;</span></span></span><br><span class="line"><span class="comment">//接收需要发送的字符</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">send_str</span><span class="params">(uchar *send_s)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">while</span>(*send_s != <span class="string">&#x27;\0&#x27;</span>)<span class="comment">//当字符串!=&#x27;\0&#x27;时把字符一个个传给send_char函数发送</span></span><br><span class="line">&#123;</span><br><span class="line">send_char(*send_s++);<span class="comment">//将每个字符逐一发送</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">send_char</span><span class="params">(uchar send_c)</span></span><br><span class="line">&#123;</span><br><span class="line">SBUF = send_c;<span class="comment">//将单个字符赋值给SBUF则发送</span></span><br><span class="line"><span class="keyword">while</span>(!TI);<span class="comment">//当TI为0，则发送未完成，当发送完成为1，取反为0跳出循环</span></span><br><span class="line">TI = <span class="number">0</span>;<span class="comment">//复位，发送请求中断标志位为0</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="send-h"><a href="#send-h" class="headerlink" title="send.h"></a>send.h</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __SEND_H__</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __SEND_H__</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;define.h&quot;</span></span></span><br><span class="line"><span class="comment">//声明两个发送函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">send_str</span><span class="params">(uchar *send_s)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">send_char</span><span class="params">(uchar send_c)</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br></pre></td></tr></table></figure><h3 id="receive-c"><a href="#receive-c" class="headerlink" title="receive.c"></a>receive.c</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;define.h&gt;</span></span></span><br><span class="line">uchar Recv_Buf[<span class="number">20</span>];</span><br><span class="line"><span class="type">char</span> recv;</span><br><span class="line"><span class="comment">//串口中断函数</span></span><br><span class="line">UART_Routine(<span class="type">void</span>) interrupt <span class="number">4</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">static</span> <span class="type">int</span> i = <span class="number">0</span>;  <span class="comment">//static：全局使用不重新</span></span><br><span class="line"><span class="type">char</span> Recv;</span><br><span class="line"><span class="keyword">if</span>(<span class="number">1</span> == RI) <span class="comment">//if(RI)</span></span><br><span class="line">&#123;</span><br><span class="line">RI=<span class="number">0</span>;</span><br><span class="line">Recv=SBUF;</span><br><span class="line"><span class="keyword">if</span>(Recv == <span class="string">&#x27;O&#x27;</span>|| Recv == <span class="string">&#x27;+&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line">i = <span class="number">0</span>;</span><br><span class="line">Recv_Buf[i] = Recv;</span><br><span class="line">Recv_Buf[i+<span class="number">1</span>] = Recv;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">i++;</span><br><span class="line">Recv_Buf[i] = Recv;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(Recv_Buf[<span class="number">0</span>] == <span class="string">&#x27;O&#x27;</span>&amp;&amp;Recv_Buf[<span class="number">1</span>] == <span class="string">&#x27;K&#x27;</span>)<span class="comment">//收到回复OK则说明指令执行成功</span></span><br><span class="line">&#123;</span><br><span class="line">Esp_Ok_flag = <span class="number">0</span>;<span class="comment">//让标志为0跳出循环，执行下一个指令</span></span><br><span class="line">i = <span class="number">0</span>;<span class="comment">//重置数组指向位数</span></span><br><span class="line">&#125;</span><br><span class="line">        <span class="comment">//接收到服务器，接收到的指令会以　+IPD　开头，以及第七个是接收的指令开始，判断接收到哪个指令执行下方的操作</span></span><br><span class="line"><span class="keyword">if</span>(Recv_Buf[<span class="number">0</span>] == <span class="string">&#x27;+&#x27;</span>&amp;&amp;Recv_Buf[<span class="number">1</span>] == <span class="string">&#x27;I&#x27;</span>&amp;&amp;Recv_Buf[<span class="number">2</span>] == <span class="string">&#x27;P&#x27;</span>&amp;&amp;Recv_Buf[<span class="number">3</span>] == <span class="string">&#x27;D&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line">            <span class="keyword">if</span>(Recv_Buf[<span class="number">7</span>] == <span class="string">&#x27;L&#x27;</span>&amp;&amp;Recv_Buf[<span class="number">8</span>] == <span class="string">&#x27;E&#x27;</span>&amp;&amp;Recv_Buf[<span class="number">9</span>] == <span class="string">&#x27;D&#x27;</span>&amp;&amp;Recv_Buf[<span class="number">10</span>] == <span class="string">&#x27;1&#x27;</span>&amp;&amp;Recv_Buf[<span class="number">11</span>] == <span class="string">&#x27;1&#x27;</span>)</span><br><span class="line">                LED1 = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(Recv_Buf[<span class="number">7</span>] == <span class="string">&#x27;L&#x27;</span>&amp;&amp;Recv_Buf[<span class="number">8</span>] == <span class="string">&#x27;E&#x27;</span>&amp;&amp;Recv_Buf[<span class="number">9</span>] == <span class="string">&#x27;D&#x27;</span>&amp;&amp;Recv_Buf[<span class="number">10</span>] == <span class="string">&#x27;1&#x27;</span>&amp;&amp;Recv_Buf[<span class="number">11</span>] == <span class="string">&#x27;0&#x27;</span>)</span><br><span class="line">                LED1 = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">if</span>(Recv_Buf[<span class="number">7</span>] == <span class="string">&#x27;L&#x27;</span>&amp;&amp;Recv_Buf[<span class="number">8</span>] == <span class="string">&#x27;E&#x27;</span>&amp;&amp;Recv_Buf[<span class="number">9</span>] == <span class="string">&#x27;D&#x27;</span>&amp;&amp;Recv_Buf[<span class="number">10</span>] == <span class="string">&#x27;2&#x27;</span>&amp;&amp;Recv_Buf[<span class="number">11</span>] == <span class="string">&#x27;1&#x27;</span>)</span><br><span class="line">                LED2 = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(Recv_Buf[<span class="number">7</span>] == <span class="string">&#x27;L&#x27;</span>&amp;&amp;Recv_Buf[<span class="number">8</span>] == <span class="string">&#x27;E&#x27;</span>&amp;&amp;Recv_Buf[<span class="number">9</span>] == <span class="string">&#x27;D&#x27;</span>&amp;&amp;Recv_Buf[<span class="number">10</span>] == <span class="string">&#x27;2&#x27;</span>&amp;&amp;Recv_Buf[<span class="number">11</span>] == <span class="string">&#x27;0&#x27;</span>)</span><br><span class="line">                LED2 = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">if</span>(Recv_Buf[<span class="number">7</span>] == <span class="string">&#x27;L&#x27;</span>&amp;&amp;Recv_Buf[<span class="number">8</span>] == <span class="string">&#x27;E&#x27;</span>&amp;&amp;Recv_Buf[<span class="number">9</span>] == <span class="string">&#x27;D&#x27;</span>&amp;&amp;Recv_Buf[<span class="number">10</span>] == <span class="string">&#x27;3&#x27;</span>&amp;&amp;Recv_Buf[<span class="number">11</span>] == <span class="string">&#x27;1&#x27;</span>)</span><br><span class="line">                LED3 = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(Recv_Buf[<span class="number">7</span>] == <span class="string">&#x27;L&#x27;</span>&amp;&amp;Recv_Buf[<span class="number">8</span>] == <span class="string">&#x27;E&#x27;</span>&amp;&amp;Recv_Buf[<span class="number">9</span>] == <span class="string">&#x27;D&#x27;</span>&amp;&amp;Recv_Buf[<span class="number">10</span>] == <span class="string">&#x27;3&#x27;</span>&amp;&amp;Recv_Buf[<span class="number">11</span>] == <span class="string">&#x27;0&#x27;</span>)</span><br><span class="line">                LED3 = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">if</span>(Recv_Buf[<span class="number">7</span>] == <span class="string">&#x27;L&#x27;</span>&amp;&amp;Recv_Buf[<span class="number">8</span>] == <span class="string">&#x27;E&#x27;</span>&amp;&amp;Recv_Buf[<span class="number">9</span>] == <span class="string">&#x27;D&#x27;</span>&amp;&amp;Recv_Buf[<span class="number">10</span>] == <span class="string">&#x27;4&#x27;</span>&amp;&amp;Recv_Buf[<span class="number">11</span>] == <span class="string">&#x27;1&#x27;</span>)</span><br><span class="line">                LED4 = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(Recv_Buf[<span class="number">7</span>] == <span class="string">&#x27;L&#x27;</span>&amp;&amp;Recv_Buf[<span class="number">8</span>] == <span class="string">&#x27;E&#x27;</span>&amp;&amp;Recv_Buf[<span class="number">9</span>] == <span class="string">&#x27;D&#x27;</span>&amp;&amp;Recv_Buf[<span class="number">10</span>] == <span class="string">&#x27;4&#x27;</span>&amp;&amp;Recv_Buf[<span class="number">11</span>] == <span class="string">&#x27;0&#x27;</span>)</span><br><span class="line">                LED4 = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">if</span>(Recv_Buf[<span class="number">7</span>] == <span class="string">&#x27;B&#x27;</span>&amp;&amp;Recv_Buf[<span class="number">8</span>] == <span class="string">&#x27;E&#x27;</span>&amp;&amp;Recv_Buf[<span class="number">9</span>] == <span class="string">&#x27;E&#x27;</span>&amp;&amp;Recv_Buf[<span class="number">10</span>] == <span class="string">&#x27;P&#x27;</span>&amp;&amp;Recv_Buf[<span class="number">11</span>] == <span class="string">&#x27;1&#x27;</span>)</span><br><span class="line">                BEEP = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(Recv_Buf[<span class="number">7</span>] == <span class="string">&#x27;B&#x27;</span>&amp;&amp;Recv_Buf[<span class="number">8</span>] == <span class="string">&#x27;E&#x27;</span>&amp;&amp;Recv_Buf[<span class="number">9</span>] == <span class="string">&#x27;E&#x27;</span>&amp;&amp;Recv_Buf[<span class="number">10</span>] == <span class="string">&#x27;P&#x27;</span>&amp;&amp;Recv_Buf[<span class="number">11</span>] == <span class="string">&#x27;0&#x27;</span>)</span><br><span class="line">                BEEP = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">if</span>(Recv_Buf[<span class="number">7</span>] == <span class="string">&#x27;J&#x27;</span>&amp;&amp;Recv_Buf[<span class="number">8</span>] == <span class="string">&#x27;D&#x27;</span>&amp;&amp;Recv_Buf[<span class="number">9</span>] == <span class="string">&#x27;Q&#x27;</span>&amp;&amp;Recv_Buf[<span class="number">10</span>] == <span class="string">&#x27;1&#x27;</span>&amp;&amp;Recv_Buf[<span class="number">11</span>] == <span class="string">&#x27;1&#x27;</span>)</span><br><span class="line">                JDQ1 = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(Recv_Buf[<span class="number">7</span>] == <span class="string">&#x27;J&#x27;</span>&amp;&amp;Recv_Buf[<span class="number">8</span>] == <span class="string">&#x27;D&#x27;</span>&amp;&amp;Recv_Buf[<span class="number">9</span>] == <span class="string">&#x27;Q&#x27;</span>&amp;&amp;Recv_Buf[<span class="number">10</span>] == <span class="string">&#x27;1&#x27;</span>&amp;&amp;Recv_Buf[<span class="number">11</span>] == <span class="string">&#x27;0&#x27;</span>)</span><br><span class="line">                JDQ1 = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(i&gt;<span class="number">18</span>)</span><br><span class="line">i=<span class="number">18</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="delay-c-1"><a href="#delay-c-1" class="headerlink" title="delay.c"></a>delay.c</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;delay.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;intrins.h&gt;</span></span></span><br><span class="line"><span class="comment">//延时函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay1000ms</span><span class="params">()</span>    <span class="comment">//@11.0592MHz</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">unsigned</span> <span class="type">char</span> data i, j, k;</span><br><span class="line"> </span><br><span class="line">  _nop_();</span><br><span class="line">  i = <span class="number">8</span>;</span><br><span class="line">  j = <span class="number">1</span>;</span><br><span class="line">  k = <span class="number">243</span>;</span><br><span class="line">  <span class="keyword">do</span></span><br><span class="line">  &#123;</span><br><span class="line">     <span class="keyword">do</span></span><br><span class="line">     &#123;</span><br><span class="line">       <span class="keyword">while</span> (--k);</span><br><span class="line">     &#125; <span class="keyword">while</span> (--j);</span><br><span class="line">  &#125; <span class="keyword">while</span> (--i);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="delay-h-1"><a href="#delay-h-1" class="headerlink" title="delay.h"></a>delay.h</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __DELAY_H__</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __DELAY_H__</span></span><br><span class="line"><span class="comment">//声明延时函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay1000ms</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;串口的介绍&quot;&gt;&lt;a href=&quot;#串口的介绍&quot; class=&quot;headerlink&quot; title=&quot;串口的介绍&quot;&gt;&lt;/a&gt;&lt;center&gt;串口的介绍&lt;/center&gt;&lt;/h1&gt;&lt;p&gt;UART（通用异步收发器）是一种双向、串行、异步的通信总线，仅用一根数据接收线（R</summary>
      
    
    
    
    <category term="51单片机" scheme="http://example.com/categories/51%E5%8D%95%E7%89%87%E6%9C%BA/"/>
    
    
    <category term="51单片机" scheme="http://example.com/tags/51%E5%8D%95%E7%89%87%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>定时器/计数器</title>
    <link href="http://example.com/post/2e5216dd.html"/>
    <id>http://example.com/post/2e5216dd.html</id>
    <published>2024-04-12T02:13:46.000Z</published>
    <updated>2024-08-03T08:00:49.068Z</updated>
    
    <content type="html"><![CDATA[<h1 id="原理"><a href="#原理" class="headerlink" title="原理"></a><center>原理</center></h1><ol><li>时钟源：定时器是内部时钟源（晶振），计数器是外部</li><li>计时长度：对应TH  TL计数器初值寄存器(高八位,低八位)</li><li>对应的中断触发函数</li></ol><table><thead><tr><th>中断源</th><th>中断处理函数</th></tr></thead><tbody><tr><td>Timer0</td><td>Timer0_Routine(void)      interrupt 1</td></tr><tr><td>Timer1</td><td>Timer1_Routine(void)       interrupt 3</td></tr><tr><td>Timer2</td><td>Timer2_Routine(void)      interrupt 5</td></tr></tbody></table><h1 id="相关寄存器"><a href="#相关寄存器" class="headerlink" title="相关寄存器"></a><center>相关寄存器</center></h1><h2 id="TCON：定时器控制寄存器"><a href="#TCON：定时器控制寄存器" class="headerlink" title="TCON：定时器控制寄存器"></a><center>TCON：定时器控制寄存器</center></h2><p>只需用到：TF0、TF1、TR0、TR1</p><img src="https://cdn.d3iiz.top/gh/xinzai-x/MyPic/img/202404131443931.png" alt="定时器/计数器" style="zoom: 50%;"><p>定时器&#x2F;计数器运行控制位(代码)：TR0、TR1</p><p>中断触发标志位(内部)：TF0、TF1</p><img src="https://cdn.d3iiz.top/gh/xinzai-x/MyPic/img/202404121532268.png" alt="定时器中断分析" style="zoom: 50%;"><h2 id="TMOD：定时器模式寄存器"><a href="#TMOD：定时器模式寄存器" class="headerlink" title="TMOD：定时器模式寄存器"></a><center>TMOD：定时器模式寄存器</center></h2><p>两个定时器&#x2F;计数器（任选一个即可）：<code>T0(TL0\TH0)</code>、<code>T1(TL1\TH1)</code></p><p>工作模式：</p><ul><li>模式0（13位定时器&#x2F;计数器）</li><li>模式1（16位定时器&#x2F;计数器）</li><li>模式2（8位自动重装初值）</li><li>模式3（两个8位定时器&#x2F;计数器）</li></ul><p>我们学的是定时器，计数器是外部计数，则0.7、0.3地址是计数器的置0，C&#x2F;T：置0为定时器，模式（M1、M0）这里我们选01（16位定时器，不自动重装初值）</p><p>如果不会自动重装载寄存器（不会自动赋初值）则要触发中断处理函数时重新手动赋初值</p><p><img src="https://cdn.d3iiz.top/gh/xinzai-x/MyPic/img/202404131536016.png" alt="工作模式"></p><h2 id="定时器计算初值"><a href="#定时器计算初值" class="headerlink" title="定时器计算初值"></a><center>定时器计算初值</center></h2><p>需要定时的时间带入公式，求出x</p><img src="https://cdn.d3iiz.top/gh/xinzai-x/MyPic/img/202406101704253.png" alt="初值计算方式" style="zoom: 50%;"><h2 id="中断允许寄存器"><a href="#中断允许寄存器" class="headerlink" title="中断允许寄存器"></a><center>中断允许寄存器</center></h2><p>&ensp;&ensp;&ensp;&ensp;总中断允许控制位：EA</p><p>&ensp;&ensp;&ensp;&ensp;ET0：定时&#x2F;计数器T0的溢出中断允许位，ET1：定时&#x2F;计数器T1的溢出中断允许位，ET2：定时&#x2F;计数器T2的溢出中断允许位</p><p>&ensp;&ensp;&ensp;&ensp;需要外部、定时器、串口那个则赋值那个为1</p><img src="https://cdn.d3iiz.top/gh/xinzai-x/MyPic/img/202404121351544.png" alt="允许寄存器分析" style="zoom:67%;"><h1 id="代码编写"><a href="#代码编写" class="headerlink" title="代码编写"></a><center>代码编写</center></h1><p>每1s翻转LED灯状态</p><ul><li>模式选择（定时器0；工作模式1）</li><li>定时器初值（10ms）</li><li>打开定时器T0运行控制位</li><li>打开定时器0中断允许位</li><li>打开总中断允许控制位</li><li>编写中断服务函数</li><li>当溢出时，触发中断，执行中断函数，执行完之后，回到主函数继续执行</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;reg52.h&gt;</span></span></span><br><span class="line">sbit LED1 = P1^<span class="number">0</span>;<span class="comment">//定义LED灯</span></span><br><span class="line"><span class="type">int</span> count;<span class="comment">//由于51单片机没办法定时1s，只能通过计数达到效果</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">TMOD = <span class="number">0x01</span>;<span class="comment">//配置定时器工作模式：使用定时器0，使用16位定时器模式(不自动重装初值)</span></span><br><span class="line"><span class="comment">//定时10ms，给寄存器赋初值</span></span><br><span class="line">TL0 = <span class="number">0x00</span>;</span><br><span class="line">TH0 = <span class="number">0xDC</span>;</span><br><span class="line">TR0 = <span class="number">1</span>;<span class="comment">//打开定时器T0运行控制位</span></span><br><span class="line">ET0 = <span class="number">1</span>;<span class="comment">//打开定时器0中断允许位</span></span><br><span class="line">EA = <span class="number">1</span>;<span class="comment">//打开总中断允许控制位</span></span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//大于99时则取反LED状态</span></span><br><span class="line"><span class="keyword">if</span>(count &gt; <span class="number">99</span>)</span><br><span class="line">&#123;</span><br><span class="line">count = <span class="number">0</span>;</span><br><span class="line">LED1 = ~LED1;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//定时中断处理函数</span></span><br><span class="line">Timer0_Routine(<span class="type">void</span>)      interrupt <span class="number">1</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//触发中断函数，需要重新给定时器赋初值</span></span><br><span class="line">TL0 = <span class="number">0x00</span>;</span><br><span class="line">TH0 = <span class="number">0xDC</span>;</span><br><span class="line">count++;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;原理&quot;&gt;&lt;a href=&quot;#原理&quot; class=&quot;headerlink&quot; title=&quot;原理&quot;&gt;&lt;/a&gt;&lt;center&gt;原理&lt;/center&gt;&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;时钟源：定时器是内部时钟源（晶振），计数器是外部&lt;/li&gt;
&lt;li&gt;计时长度：对应TH  TL</summary>
      
    
    
    
    <category term="51单片机" scheme="http://example.com/categories/51%E5%8D%95%E7%89%87%E6%9C%BA/"/>
    
    
    <category term="51单片机" scheme="http://example.com/tags/51%E5%8D%95%E7%89%87%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>外部中断</title>
    <link href="http://example.com/post/81b224e1.html"/>
    <id>http://example.com/post/81b224e1.html</id>
    <published>2024-04-12T02:13:12.000Z</published>
    <updated>2024-08-03T08:00:45.578Z</updated>
    
    <content type="html"><![CDATA[<h1 id="中断原理"><a href="#中断原理" class="headerlink" title="中断原理"></a><center>中断原理</center></h1><p>你在打游戏，水开了，水壶发出响声，你停止打游戏，去倒水，倒完水接着打游戏</p><p>打游戏：就相当于While(1){}里面执行的代码</p><p>水壶响：就是中断源</p><p>倒水：触发中断后要去做的事情，中断处理函数</p><h1 id="代码实现过程"><a href="#代码实现过程" class="headerlink" title="代码实现过程"></a><center>代码实现过程</center></h1><h2 id="中断源"><a href="#中断源" class="headerlink" title="中断源"></a><center>中断源</center></h2><p>INT0(外部中断源)、Timer0(定时器中断源)、INT1、Timer1、UART(串口中断源)、Timer2、INT2、INT3</p><p>中断触发方式：</p><p>&ensp;&ensp;&ensp;&ensp;外部中断：下降沿或者低电平</p><p>&ensp;&ensp;&ensp;&ensp;定时器中断：定时器计数溢出</p><p>&ensp;&ensp;&ensp;&ensp;串口中断：串口发送或者接收完成</p><h2 id="中断处理函数"><a href="#中断处理函数" class="headerlink" title="中断处理函数"></a><center>中断处理函数</center></h2><p>与中断源对应的中断处理函数，直接使用对应的函数</p><table><thead><tr><th align="center">中断源</th><th>中断处理函数</th></tr></thead><tbody><tr><td align="center">INT0</td><td>Int0_Routine(void)              interrupt 0</td></tr><tr><td align="center">INT1</td><td>Int1_Routine(void)              interrupt 2</td></tr><tr><td align="center">INT2</td><td>Int2_Routine(void)             interrupt 6</td></tr><tr><td align="center">INT3</td><td>Int3_Routine(void)              interrupt 7</td></tr></tbody></table><h2 id="中断寄存器"><a href="#中断寄存器" class="headerlink" title="中断寄存器"></a><center>中断寄存器</center></h2><p>保存中断源的中断请求信息的专用寄存器</p><h3 id="中断控制寄存器"><a href="#中断控制寄存器" class="headerlink" title="中断控制寄存器"></a>中断控制寄存器</h3><p>外部中断只需用到：IT0、IT1、IE0、IE1</p><img src="https://cdn.d3iiz.top/gh/xinzai-x/MyPic/img/202404121515869.png" alt="中断寄存器功能" style="zoom: 50%;"><p><code>外部中断触发方式控制位</code>(代码)：IT0、IT1，中断触发标志位(内部)：IE0、IE1</p><p><code>下降沿触发</code>：IT0 &#x3D; 1，<code>低电平触发</code>：IT0 &#x3D; 0（IT1同理）</p><img src="https://cdn.d3iiz.top/gh/xinzai-x/MyPic/img/202404121721299.png" alt="外部中断分析" style="zoom:60%;"><p>定时器、串口(后续讲)</p><h3 id="中断优先级寄存器（暂不学）"><a href="#中断优先级寄存器（暂不学）" class="headerlink" title="中断优先级寄存器（暂不学）"></a>中断优先级寄存器（暂不学）</h3><h3 id="中断允许寄存器"><a href="#中断允许寄存器" class="headerlink" title="中断允许寄存器"></a>中断允许寄存器</h3><p>在外部中断只需要（置1为打开）：</p><ol><li>总中断允许控制位：EA</li><li>EX0：外部中断0中断允许位、EX1：外部中断1中断允许位</li></ol><img src="https://cdn.d3iiz.top/gh/xinzai-x/MyPic/img/202404121351544.png" alt="允许寄存器分析" style="zoom:67%;"><h1 id="中断代码"><a href="#中断代码" class="headerlink" title="中断代码"></a><center>中断代码</center></h1><ol><li>配置外部中断0为下降沿触发（为1则低电平触发）</li><li>打开外部中断0中断允许位</li><li>打开总中断允许控制位</li><li>当有中断源发出，触发中断，执行中断函数，执行完之后，回到主函数继续执行</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;reg52.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;intrins.h&gt;</span></span></span><br><span class="line"></span><br><span class="line">sbit LED1 = P1^<span class="number">0</span>;<span class="comment">//引脚初始化：P1^0：对应引脚的LED灯，定义LED1代表P1^0这个引脚的LED灯</span></span><br><span class="line"><span class="comment">//延时函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay120ms</span><span class="params">()</span><span class="comment">//@11.0592MHz</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> data i, j;</span><br><span class="line">i = <span class="number">216</span>;</span><br><span class="line">j = <span class="number">37</span>;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">while</span> (--j);</span><br><span class="line">&#125; <span class="keyword">while</span> (--i);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//电路图知：中断源INT0、INT1引脚与按键P3^2、P3^3同一个，则按键为中断源，无需定义按键</span></span><br><span class="line">IT0 = <span class="number">1</span>;<span class="comment">//配置外部中断0为下降沿触发（为1则低电平触发）</span></span><br><span class="line">EX0 = <span class="number">1</span>;<span class="comment">//打开外部中断0中断允许位</span></span><br><span class="line">EA = <span class="number">1</span>;<span class="comment">//打开总中断允许控制位</span></span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        Delay120ms();</span><br><span class="line">Delay120ms();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Int0_Routine(<span class="type">void</span>)        interrupt <span class="number">0</span><span class="comment">//中断处理函数</span></span><br><span class="line">&#123;</span><br><span class="line">    Delay120ms();</span><br><span class="line">LED1 = ~LED1;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;中断原理&quot;&gt;&lt;a href=&quot;#中断原理&quot; class=&quot;headerlink&quot; title=&quot;中断原理&quot;&gt;&lt;/a&gt;&lt;center&gt;中断原理&lt;/center&gt;&lt;/h1&gt;&lt;p&gt;你在打游戏，水开了，水壶发出响声，你停止打游戏，去倒水，倒完水接着打游戏&lt;/p&gt;
&lt;p&gt;打</summary>
      
    
    
    
    <category term="51单片机" scheme="http://example.com/categories/51%E5%8D%95%E7%89%87%E6%9C%BA/"/>
    
    
    <category term="51单片机" scheme="http://example.com/tags/51%E5%8D%95%E7%89%87%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>I/O</title>
    <link href="http://example.com/post/74750b31.html"/>
    <id>http://example.com/post/74750b31.html</id>
    <published>2024-04-11T05:11:34.000Z</published>
    <updated>2024-08-03T08:00:42.206Z</updated>
    
    <content type="html"><![CDATA[<h1 id="I-O输出-点灯"><a href="#I-O输出-点灯" class="headerlink" title="I&#x2F;O输出(点灯)"></a><center>I&#x2F;O输出(点灯)</center></h1><h2 id="分析电路"><a href="#分析电路" class="headerlink" title="分析电路"></a><center>分析电路</center></h2><p>看电路图，元器件形成电压差，即可点亮LED灯</p><img src="https://cdn.d3iiz.top/gh/xinzai-x/MyPic/img/202406061928657.png" alt="LED电路图" style="zoom:50%;"><h2 id="代码编写"><a href="#代码编写" class="headerlink" title="代码编写"></a><center>代码编写</center></h2><p>使用不同操作进行LED控制</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;reg52.h&quot;</span><span class="comment">//51单片机头文件</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;intrins.h&gt;</span></span></span><br><span class="line">sbit LED1 = P1^<span class="number">0</span>;<span class="comment">//引脚初始化：P1^0：对应引脚的LED灯，定义LED1代表P1^0这个引脚的LED灯</span></span><br><span class="line">sbit LED2 = P1^<span class="number">1</span>;</span><br><span class="line">sbit LED3 = P1^<span class="number">2</span>;</span><br><span class="line">sbit LED4 = P1^<span class="number">3</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> i;</span><br><span class="line"><span class="comment">//延时1000ms的延时函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay1000ms</span><span class="params">()</span>    <span class="comment">//@11.0592MHz</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">unsigned</span> <span class="type">char</span> data i, j, k;</span><br><span class="line">  _nop_();</span><br><span class="line">  i = <span class="number">8</span>;</span><br><span class="line">  j = <span class="number">1</span>;</span><br><span class="line">  k = <span class="number">243</span>;</span><br><span class="line">  <span class="keyword">do</span></span><br><span class="line">  &#123;</span><br><span class="line">     <span class="keyword">do</span></span><br><span class="line">     &#123;</span><br><span class="line">       <span class="keyword">while</span> (--k);</span><br><span class="line">     &#125; <span class="keyword">while</span> (--j);</span><br><span class="line">  &#125; <span class="keyword">while</span> (--i);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//方法一：对位操作，P1^0为0，接通</span></span><br><span class="line">LED1 = <span class="number">0</span>;<span class="comment">//电路图得知，LED为0时，接通LED灯</span></span><br><span class="line">LED2 = <span class="number">1</span>;</span><br><span class="line">LED3 = <span class="number">1</span>;</span><br><span class="line">LED4 = <span class="number">1</span>;</span><br><span class="line"><span class="comment">//方法二：P1寄存器直接赋值，两种效果相同</span></span><br><span class="line"><span class="comment">//P1 = 0xfe;   //11111110，LED灯为P1^0~P1^3，则为最低位3位</span></span><br><span class="line">Delay1000ms();</span><br><span class="line">      </span><br><span class="line"><span class="comment">//方法一：对位操作，P1^1为0，接通</span></span><br><span class="line">LED1 = <span class="number">1</span>;</span><br><span class="line">LED2 = <span class="number">0</span>;</span><br><span class="line">LED3 = <span class="number">1</span>;</span><br><span class="line">LED4 = <span class="number">1</span>;</span><br><span class="line"><span class="comment">//P1 = 0xfd; //11111101</span></span><br><span class="line">Delay1000ms(); </span><br><span class="line">      </span><br><span class="line"><span class="comment">//方法一：对位操作，P1^2为0，接通</span></span><br><span class="line">LED1 = <span class="number">1</span>;</span><br><span class="line">LED2 = <span class="number">1</span>;</span><br><span class="line">LED3 = <span class="number">0</span>;</span><br><span class="line">LED4 = <span class="number">1</span>; </span><br><span class="line"><span class="comment">//P1 = 0xfb; //11111011</span></span><br><span class="line">Delay1000ms(); </span><br><span class="line"></span><br><span class="line"><span class="comment">//方法一：对位操作，P1^3为0，接通</span></span><br><span class="line">LED1 = <span class="number">1</span>;</span><br><span class="line">LED2 = <span class="number">1</span>;</span><br><span class="line">LED3 = <span class="number">1</span>;</span><br><span class="line">LED4 = <span class="number">0</span>;</span><br><span class="line"><span class="comment">//P1 = 0xf7; //11110111</span></span><br><span class="line">Delay1000ms();</span><br><span class="line"></span><br><span class="line"><span class="comment">//对方法三分析</span></span><br><span class="line"><span class="comment">//P1 = 0xff; //11111111</span></span><br><span class="line"><span class="comment">//Delay1000ms();</span></span><br><span class="line"><span class="comment">//P1 = P1&lt;&lt;1;  //11111110</span></span><br><span class="line"><span class="comment">//Delay1000ms();</span></span><br><span class="line"><span class="comment">//P1 = P1&lt;&lt;1; //11111100</span></span><br><span class="line"><span class="comment">//Delay1000ms();</span></span><br><span class="line">      </span><br><span class="line"><span class="comment">//方法三：位移实现对LED灯控制</span></span><br><span class="line">P1 = <span class="number">0xff</span>; <span class="comment">//11111111，将LED灯初始为灭</span></span><br><span class="line">Delay1000ms();</span><br><span class="line"><span class="comment">//通过4次循环左移，实现对LED灯的控制</span></span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">P1 = P1&lt;&lt;<span class="number">1</span>;</span><br><span class="line">Delay1000ms();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="I-O输入-电平检测"><a href="#I-O输入-电平检测" class="headerlink" title="I&#x2F;O输入(电平检测)"></a><center>I&#x2F;O输入(电平检测)</center></h1><p>输入是检测输入的电平的高低，与输出不同</p><p>电路图知，按键按下为低电平，则判断按键引脚为低电平则按键按下</p><img src="https://cdn.d3iiz.top/gh/xinzai-x/MyPic/img/202406071642838.png" alt="按键电路图" style="zoom:50%;"><p>注意：按键会有抖动。消除方法：按键并联一个电容 或 代码延时</p><h2 id="代码编写-1"><a href="#代码编写-1" class="headerlink" title="代码编写"></a><center>代码编写</center></h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;reg52.h&gt;</span><span class="comment">//51单片机头文件</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;intrins.h&gt;</span></span></span><br><span class="line">sbit LED1 = P1^<span class="number">0</span>;</span><br><span class="line">sbit KEY1 = P3^<span class="number">2</span>;<span class="comment">//第一个按键位引脚</span></span><br><span class="line">sbit KEY2 = P3^<span class="number">3</span>;<span class="comment">//第二个按键位引脚</span></span><br><span class="line">sbit BEEP = P1^<span class="number">6</span>;<span class="comment">//蜂鸣器位引脚</span></span><br><span class="line"><span class="comment">//延时函数，用来消除按键抖动</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay120ms</span><span class="params">()</span><span class="comment">//@11.0592MHz</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> data i, j;</span><br><span class="line"></span><br><span class="line">i = <span class="number">216</span>;</span><br><span class="line">j = <span class="number">37</span>;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">while</span> (--j);</span><br><span class="line">&#125; <span class="keyword">while</span> (--i);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(KEY1 == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">Delay120ms();</span><br><span class="line"><span class="comment">//双重判断且加延时函数，消除按键抖动</span></span><br><span class="line"><span class="keyword">if</span>(KEY1 == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">LED1 = ~LED1;<span class="comment">//对LED取反，则实现LED开关</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(KEY2 == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">Delay120ms();</span><br><span class="line"><span class="keyword">if</span>(KEY2 == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">BEEP = ~BEEP;<span class="comment">//对蜂鸣器取反，则实现蜂鸣器开关</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="I-O内部电路分析"><a href="#I-O内部电路分析" class="headerlink" title="I&#x2F;O内部电路分析"></a><center>I&#x2F;O内部电路分析</center></h1><h2 id="51单片机"><a href="#51单片机" class="headerlink" title="51单片机"></a><center>51单片机</center></h2><p>准双向口&#x2F;弱上拉：可用作输出和输入功能而不需要配置口线输出状态</p><p>开漏输出(P0)：当P0管脚做I&#x2F;O时，需要外加<code>上拉电阻</code>，若作为地址&#x2F;数据总线时，不需要加上拉电阻</p><h2 id="STM32单片机"><a href="#STM32单片机" class="headerlink" title="STM32单片机"></a><center>STM32单片机</center></h2><h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><p>浮空输入：从IO引脚入，VDD(上拉电阻)打开和Vss(下拉电阻)打开，经过输入数据寄存器，读出</p><p>上拉输入：从IO引脚入，VDD(上拉电阻)闭合和Vss(下拉电阻)打开，经过输入数据寄存器，读出</p><p>下拉输入：从IO引脚入，VDD(上拉电阻)打开和Vss(下拉电阻)闭合，经过输入数据寄存器，读出</p><p>模拟输入：从IO引脚入，VDD(上拉电阻)打开和Vss(下拉电阻)打开，经过模拟输入</p><img src="https://cdn.d3iiz.top/gh/xinzai-x/MyPic/img/202404121123673.png" alt="分析图" style="zoom: 67%;"><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><p>开漏输出：在开漏输出模式下，P-MOS(上拉)管不工作，只有N-MOS(下拉)管起作用。若输出数据寄存器的值为0，则N-MOS导通，IO口输出低电平；若输出数据寄存器的值为1，则N-MOS截止；由于P-MOS不工作，此时IO口既不是高电平，也不是低电平，这种状态被称为高阻态</p><p>推挽输出：在推挽输出模式下，若输出数据寄存器的值为0，则N-MOS(下拉)导通，P-MOS(上拉)截止，IO口输出低电平；若输出数据寄存器的值为1，则N-MOS截止，P-MOS导通，IO口输出高电平</p><p>复用：使别引脚也具备原本引脚功能</p><p>推挽复用输出、开漏复用输出</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;I-O输出-点灯&quot;&gt;&lt;a href=&quot;#I-O输出-点灯&quot; class=&quot;headerlink&quot; title=&quot;I&amp;#x2F;O输出(点灯)&quot;&gt;&lt;/a&gt;&lt;center&gt;I&amp;#x2F;O输出(点灯)&lt;/center&gt;&lt;/h1&gt;&lt;h2 id=&quot;分析电路&quot;&gt;&lt;a hre</summary>
      
    
    
    
    <category term="51单片机" scheme="http://example.com/categories/51%E5%8D%95%E7%89%87%E6%9C%BA/"/>
    
    
    <category term="51单片机" scheme="http://example.com/tags/51%E5%8D%95%E7%89%87%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>寄存器</title>
    <link href="http://example.com/post/f8f1fb54.html"/>
    <id>http://example.com/post/f8f1fb54.html</id>
    <published>2024-04-10T15:39:56.000Z</published>
    <updated>2024-08-03T08:00:39.043Z</updated>
    
    <content type="html"><![CDATA[<h1 id="什么是寄存器"><a href="#什么是寄存器" class="headerlink" title="什么是寄存器"></a><center>什么是寄存器</center></h1><p>单片机寄存器是一组特定的存储单元，每个存储单元可以存储一个特定的数据值，对寄存器赋不同特定值，起到配置和控制各种功能的作用</p><h1 id="寄存器分类"><a href="#寄存器分类" class="headerlink" title="寄存器分类"></a><center>寄存器分类</center></h1><h2 id="特殊功能寄存器"><a href="#特殊功能寄存器" class="headerlink" title="特殊功能寄存器"></a><center>特殊功能寄存器</center></h2><p>8位单片机则一个寄存器有8位：P1：P1_0 ~ P1_7，单片机可能还有P0、P1等等</p><p>TCON、TMOD、IE…….</p><h2 id="通用寄存器"><a href="#通用寄存器" class="headerlink" title="通用寄存器"></a><center>通用寄存器</center></h2><p>51单片机包括：R0、R1、R3、R4……（）</p><p>作用：存储临时数据、提高数据访问速度、传递函数参数、存储程序状态</p><img src="https://cdn.d3iiz.top/gh/xinzai-x/MyPic/img/202406061701959.png" alt="通用寄存器" style="zoom:50%;"><h1 id="寄存器操作方式"><a href="#寄存器操作方式" class="headerlink" title="寄存器操作方式"></a><center>寄存器操作方式</center></h1><p>位寻址：一个位对应单片机一个引脚，这个引脚连接对应的器件&ensp;&ensp;&ensp;&ensp;</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">如：P0_1连接LED灯</span><br><span class="line">sbit LED1 = P0^<span class="number">1</span>;</span><br><span class="line">LED1 = <span class="number">1</span>;<span class="comment">//则LED灯亮</span></span><br></pre></td></tr></table></figure><p>如果没有位寻址，则整个寄存器赋值(十六进制0x00 ~ 0xff)</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">P0=<span class="number">0XFF</span>;<span class="comment">//P0=0XA5;</span></span><br></pre></td></tr></table></figure><p><code>如何知道寄存器对应的位以及芯片对应引脚功能，查看数据手册</code></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;什么是寄存器&quot;&gt;&lt;a href=&quot;#什么是寄存器&quot; class=&quot;headerlink&quot; title=&quot;什么是寄存器&quot;&gt;&lt;/a&gt;&lt;center&gt;什么是寄存器&lt;/center&gt;&lt;/h1&gt;&lt;p&gt;单片机寄存器是一组特定的存储单元，每个存储单元可以存储一个特定的数据值，对</summary>
      
    
    
    
    <category term="51单片机" scheme="http://example.com/categories/51%E5%8D%95%E7%89%87%E6%9C%BA/"/>
    
    
    <category term="51单片机" scheme="http://example.com/tags/51%E5%8D%95%E7%89%87%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>单片机工作原理</title>
    <link href="http://example.com/post/c6b2a2fd.html"/>
    <id>http://example.com/post/c6b2a2fd.html</id>
    <published>2024-04-08T12:55:48.000Z</published>
    <updated>2024-08-03T08:00:35.527Z</updated>
    
    <content type="html"><![CDATA[<h1 id="最小系统"><a href="#最小系统" class="headerlink" title="最小系统"></a><center>最小系统</center></h1><h2 id="单片机芯片"><a href="#单片机芯片" class="headerlink" title="单片机芯片"></a><center>单片机芯片</center></h2><p>本次51单片机的芯片为：STC89C52</p><img src="https://cdn.d3iiz.top/gh/xinzai-x/MyPic/img/202404101723175.png" alt="芯片类型" style="zoom:50%;"><p>Flash(闪存)程序存储器：存储程序的空间</p><p>SRAM：数据存储器，可用于存放程序执行的中间结果和过程数据</p><p>DPTR：16位的寄存器（两个8位寄存器组成），用于间接寻址，DPH存储地址的高8位，而DPL存储地址的低8位</p><p>EEPROM：带电可擦可编程只读存储器。是一种掉电后数据不丢失的存储芯片</p><p>看门狗：用于监控单片机程序运行状态的机制。它通过一个定时器电路实现，能够在程序运行失控或遇到硬件错误时对单片机进行复位操作，以确保程序能够重新开始执行</p><p>A&#x2F;D：模拟信号到数字信号的转换（模拟&#x2F;数字）</p><p>I&#x2F;O：输入和输出，输入（Input）是指数据或信号从外部设备或用户传输到计算机系统内部的过程，而输出（Output）则是指数据或信号从计算机系统传输到外部设备或用户的过程</p><h2 id="时钟电路"><a href="#时钟电路" class="headerlink" title="时钟电路"></a><center>时钟电路</center></h2><p>产生固定频率的交流信号，晶振是产生信号的元器件（由晶振频率计算产生）</p><p>12Mhz：</p><p>时钟周期：1&#x2F;12Mhz，单位是秒，12Mhz要转为秒为12000000hz</p><p>1&#x2F;12000000 ≈ 0.00000008s</p><p>机器周期：12 × 时钟周期 &#x3D; 0.00000008s × 12 &#x3D; 0.000001s，转为us就是1us</p><h2 id="复位电路"><a href="#复位电路" class="headerlink" title="复位电路"></a><center>复位电路</center></h2><p>按键复位和上电复位</p><h2 id="电源"><a href="#电源" class="headerlink" title="电源"></a><center>电源</center></h2><p>供电，51单片机一般5v，smt32单片机一般3.3v</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;最小系统&quot;&gt;&lt;a href=&quot;#最小系统&quot; class=&quot;headerlink&quot; title=&quot;最小系统&quot;&gt;&lt;/a&gt;&lt;center&gt;最小系统&lt;/center&gt;&lt;/h1&gt;&lt;h2 id=&quot;单片机芯片&quot;&gt;&lt;a href=&quot;#单片机芯片&quot; class=&quot;headerlin</summary>
      
    
    
    
    <category term="51单片机" scheme="http://example.com/categories/51%E5%8D%95%E7%89%87%E6%9C%BA/"/>
    
    
    <category term="51单片机" scheme="http://example.com/tags/51%E5%8D%95%E7%89%87%E6%9C%BA/"/>
    
  </entry>
  
</feed>
