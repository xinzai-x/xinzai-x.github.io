<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>星仔人生录</title>
  
  <subtitle>珍惜当下 不负此生</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2024-08-18T08:24:35.274Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>星仔</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>11.SPI通信</title>
    <link href="http://example.com/post/bd740709.html"/>
    <id>http://example.com/post/bd740709.html</id>
    <published>2024-08-17T08:28:32.000Z</published>
    <updated>2024-08-18T08:24:35.274Z</updated>
    
    <content type="html"><![CDATA[<h1 id="SPI理论"><a href="#SPI理论" class="headerlink" title="SPI理论"></a><center>SPI理论</center></h1><p>常规四线：SCLK、CS、MOSI(主向从发)、MISO(从向主发)</p><p>同步、串行、全双工、速率(MHz)</p><p>一主一从、一主多从、不能多主</p><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic1/img/202408181624097.webp" alt="一主多从" style="zoom:50%;"><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic1/img/202408181623070.webp" alt="一主多从" style="zoom:50%;"><p>工作模式：</p><ul><li>CPOL<ul><li>0：总线空闲状态时钟为低电平，1：总线空闲状态时钟为高电平</li></ul></li><li>CPHA<ul><li>0：时钟第一个沿对数据采样，1：时钟第二个沿对数据采样</li></ul></li></ul><p>QSPI：相比SPI区别，四个数据线，一个时钟内传输4个bit</p><p>时序：</p><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic1/img/202408181623809.webp" alt="SPI时序" style="zoom:50%;"><h1 id="网络理论"><a href="#网络理论" class="headerlink" title="网络理论"></a><center>网络理论</center></h1><p>TCP三次握手，四次挥手。参考：<a href="https://blog.csdn.net/weixin_45393094/article/details/104965561?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522169864750516800182774327%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=169864750516800182774327&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-1-104965561-null-null.142%5Ev96%5Epc_search_result_base9&utm_term=%E4%B8%89%E6%AC%A1%E6%8F%A1%E6%89%8B%E5%9B%9B%E6%AC%A1%E6%8C%A5%E6%89%8B%E8%AF%A6%E8%A7%A3&spm=1018.2226.3001.4187">参考</a></p><p>TCP和UDP区别参考：<a href="https://blog.csdn.net/weixin_45272371/article/details/129378067">链接</a></p><p>网络模型：OSI七层网络模型（<a href="https://blog.csdn.net/troubleshooter/article/details/122376824">链接</a>）、五层网络模型（<a href="https://blog.csdn.net/weixin_44417441/article/details/113769242?spm=1001.2101.3001.6650.3&utm_medium=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~Rate-3-113769242-blog-123167871.235%5Ev38%5Epc_relevant_sort&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~Rate-3-113769242-blog-123167871.235%5Ev38%5Epc_relevant_sort&utm_relevant_index=6">链接</a>）</p><h2 id="SPI配置"><a href="#SPI配置" class="headerlink" title="SPI配置"></a><center>SPI配置</center></h2><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic1/img/202408181623899.webp" alt="SPI配置" style="zoom:50%;">]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;SPI理论&quot;&gt;&lt;a href=&quot;#SPI理论&quot; class=&quot;headerlink&quot; title=&quot;SPI理论&quot;&gt;&lt;/a&gt;&lt;center&gt;SPI理论&lt;/center&gt;&lt;/h1&gt;&lt;p&gt;常规四线：SCLK、CS、MOSI(主向从发)、MISO(从向主发)&lt;/p&gt;
&lt;p</summary>
      
    
    
    
    <category term="32单片机" scheme="http://example.com/categories/32%E5%8D%95%E7%89%87%E6%9C%BA/"/>
    
    
    <category term="32单片机" scheme="http://example.com/tags/32%E5%8D%95%E7%89%87%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>10.DMA</title>
    <link href="http://example.com/post/acb77072.html"/>
    <id>http://example.com/post/acb77072.html</id>
    <published>2024-08-16T07:49:08.000Z</published>
    <updated>2024-08-18T08:27:45.965Z</updated>
    
    <content type="html"><![CDATA[<h1 id="理论"><a href="#理论" class="headerlink" title="理论"></a><center>理论</center></h1><p>12个通道：DMA1（7）DMA2（5）</p><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic1/img/202408171625579.webp" alt="通道" style="zoom:50%;"><p>方向：存储器和存储器间(DMA_MEMORY_TO_MEMORY)、外设到存储器(DMA_PERIPH_TO_MEMORY)、存储器到外设(DMA_MEMORY_TO_PERIPH)</p><p>闪存、 SRAM、外设的SRAM、 APB1、 APB2和AHB外设均可作为访问的源和目标</p><p>数据宽度：字节(Byte 8)、半字(Half Word 16)、全字(Word 32)</p><p>可编程的数据传输数目： 0 ~ 65535</p><p>若可编程的数据传输数目为10，数据宽度为字节，半字，全字<br>传输总数据大小：10字节，20字节，40字节</p><p>若传输总数据大小与实际传输不符，会让传输标志(__HAL_DMA_GET_FLAG) ≠ 0</p><h1 id="代码编写"><a href="#代码编写" class="headerlink" title="代码编写"></a><center>代码编写</center></h1><p>存储器和存储器间实验</p><h2 id="DMA配置"><a href="#DMA配置" class="headerlink" title="DMA配置"></a><center>DMA配置</center></h2><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic1/img/202408171625497.webp" alt="DMA配置" style="zoom:50%;"><p>串口初始化参考：<a href="https://d3iiz.top/post/2c4c3bc3">链接</a></p><h2 id="Cube-IDE代码"><a href="#Cube-IDE代码" class="headerlink" title="Cube IDE代码"></a><center>Cube IDE代码</center></h2><p>main.c</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* USER CODE BEGIN PD */</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> BUFF_SIZE 100<span class="comment">//37行</span></span></span><br><span class="line"><span class="comment">/* USER CODE END PD */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* USER CODE BEGIN PV */</span></span><br><span class="line"><span class="type">uint8_t</span> SRC_Buff[BUFF_SIZE];<span class="comment">//48行</span></span><br><span class="line"><span class="type">uint8_t</span> DEST_Buff[BUFF_SIZE];</span><br><span class="line"><span class="comment">/* USER CODE END PV */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; BUFF_SIZE; i++)<span class="comment">//95行</span></span><br><span class="line">  SRC_Buff[i] = i+<span class="number">2</span>;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* 参数1：指向 DMA_HandleTypeDef 结构的指针，该结构包含指向 DMA 通道的配置信息</span></span><br><span class="line"><span class="comment">* 参数2：源内存缓冲区地址</span></span><br><span class="line"><span class="comment">* 参数3：目标内存缓冲区地址，参数4：从源传输到目标的数据长度</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">HAL_DMA_Start(&amp;hdma_memtomem_dma1_channel1, (<span class="type">uint32_t</span>)SRC_Buff, (<span class="type">uint32_t</span>)DEST_Buff, BUFF_SIZE);</span><br><span class="line"></span><br><span class="line"><span class="comment">//while里,111行</span></span><br><span class="line">hdma_memtomem_dma1_channel1.Instance-&gt;CNDTR = BUFF_SIZE;<span class="comment">//可编程的数据传输数目：CNDTR</span></span><br><span class="line">__HAL_DMA_ENABLE(&amp;hdma_memtomem_dma1_channel1);<span class="comment">//启用指定的 DMA 通道</span></span><br><span class="line"><span class="keyword">while</span>(__HAL_DMA_GET_FLAG(&amp;hdma_memtomem_dma1_channel1, DMA_FLAG_TC1) == <span class="number">0</span>);<span class="comment">//判断是否传输完成</span></span><br><span class="line">HAL_UART_Transmit(&amp;huart1, DEST_Buff, BUFF_SIZE, <span class="number">100</span>);<span class="comment">//串口发送据</span></span><br><span class="line">__HAL_DMA_CLEAR_FLAG(&amp;hdma_memtomem_dma1_channel1, DMA_FLAG_TC1);<span class="comment">//清楚标志</span></span><br><span class="line">__HAL_DMA_DISABLE(&amp;hdma_memtomem_dma1_channel1);<span class="comment">//禁用指定的 DMA 通道</span></span><br><span class="line">HAL_Delay(<span class="number">1000</span>);</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;理论&quot;&gt;&lt;a href=&quot;#理论&quot; class=&quot;headerlink&quot; title=&quot;理论&quot;&gt;&lt;/a&gt;&lt;center&gt;理论&lt;/center&gt;&lt;/h1&gt;&lt;p&gt;12个通道：DMA1（7）DMA2（5）&lt;/p&gt;
&lt;img src=&quot;https://cdn.jsdeli</summary>
      
    
    
    
    <category term="32单片机" scheme="http://example.com/categories/32%E5%8D%95%E7%89%87%E6%9C%BA/"/>
    
    
    <category term="32单片机" scheme="http://example.com/tags/32%E5%8D%95%E7%89%87%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>9.DAC(数字信号转模拟信号)</title>
    <link href="http://example.com/post/52772f76.html"/>
    <id>http://example.com/post/52772f76.html</id>
    <published>2024-08-15T14:22:06.000Z</published>
    <updated>2024-08-17T01:08:57.410Z</updated>
    
    <content type="html"><![CDATA[<h1 id="代码编写"><a href="#代码编写" class="headerlink" title="代码编写"></a><center>代码编写</center></h1><h2 id="DAC配置"><a href="#DAC配置" class="headerlink" title="DAC配置"></a><center>DAC配置</center></h2><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic1/img/202408161546558.WebP" alt="DAC配置" style="zoom: 50%;"><h2 id="Cube-IDE代码"><a href="#Cube-IDE代码" class="headerlink" title="Cube IDE代码"></a><center>Cube IDE代码</center></h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* USER CODE BEGIN PV */</span></span><br><span class="line"><span class="type">uint16_t</span> DAC_Value = <span class="number">0</span>;<span class="comment">//47行</span></span><br><span class="line"><span class="comment">/* USER CODE END PV */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//while里，99行</span></span><br><span class="line">DAC_Value++;</span><br><span class="line">DAC_Value = DAC_Value % <span class="number">4095</span>;</span><br><span class="line"><span class="comment">/* 参数1：指向包含 DAC_HandleTypeDef 结构的指针指定DAC的配置信息</span></span><br><span class="line"><span class="comment">* 参数2：选定的 DAC 通道</span></span><br><span class="line"><span class="comment">* 参数3：数据对齐方式，参数4：要加载到选定数据保持寄存器中的数据</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">HAL_DAC_SetValue(&amp;hdac, DAC_CHANNEL_1, DAC_ALIGN_12B_R, DAC_Value);</span><br><span class="line">HAL_DAC_Start(&amp;hdac,DAC_CHANNEL_1);<span class="comment">//开始DAC</span></span><br><span class="line">HAL_Delay(<span class="number">4</span>);</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;代码编写&quot;&gt;&lt;a href=&quot;#代码编写&quot; class=&quot;headerlink&quot; title=&quot;代码编写&quot;&gt;&lt;/a&gt;&lt;center&gt;代码编写&lt;/center&gt;&lt;/h1&gt;&lt;h2 id=&quot;DAC配置&quot;&gt;&lt;a href=&quot;#DAC配置&quot; class=&quot;headerlin</summary>
      
    
    
    
    <category term="32单片机" scheme="http://example.com/categories/32%E5%8D%95%E7%89%87%E6%9C%BA/"/>
    
    
    <category term="32单片机" scheme="http://example.com/tags/32%E5%8D%95%E7%89%87%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>8.看门狗(WDG)</title>
    <link href="http://example.com/post/f0812160.html"/>
    <id>http://example.com/post/f0812160.html</id>
    <published>2024-08-15T14:05:49.000Z</published>
    <updated>2024-08-16T09:32:21.859Z</updated>
    
    <content type="html"><![CDATA[<h1 id="理论"><a href="#理论" class="headerlink" title="理论"></a><center>理论</center></h1><p>防止系统跑飞</p><p>喂狗：让值为0</p><p>分类：独立看门狗(IWDG,0到100喂狗)、窗口看门狗(60到100喂狗)，值(60)，顶值(100)</p><h1 id="代码编写"><a href="#代码编写" class="headerlink" title="代码编写"></a><center>代码编写</center></h1><p>按键喂狗</p><h2 id="独立看门狗配置"><a href="#独立看门狗配置" class="headerlink" title="独立看门狗配置"></a><center>独立看门狗配置</center></h2><p>超过10s，复位</p><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic1/img/202408152206794.WebP" alt="看门狗配置" style="zoom:50%;"><hr><p>注意时钟：</p><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic1/img/202408152207964.WebP" alt="看门狗时钟" style="zoom:50%;"><p>按键、LED灯配置参考：<a href="https://d3iiz.top/post/adb202b7">链接</a></p><h2 id="Cube-IDE代码"><a href="#Cube-IDE代码" class="headerlink" title="Cube IDE代码"></a><center>Cube IDE代码</center></h2><p>mian.c</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* USER CODE BEGIN 2 */</span></span><br><span class="line"><span class="comment">//超过时间看门狗触发复位闪灯</span></span><br><span class="line">HAL_GPIO_WritePin(LED1_GPIO_Port, LED1_Pin, <span class="number">0</span>);<span class="comment">//93行</span></span><br><span class="line">HAL_Delay(<span class="number">500</span>);</span><br><span class="line">HAL_GPIO_WritePin(LED1_GPIO_Port, LED1_Pin, <span class="number">1</span>);</span><br><span class="line"><span class="comment">/* USER CODE END 2 */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(HAL_GPIO_ReadPin(Key1_GPIO_Port, Key1_Pin) == <span class="number">0</span>)<span class="comment">//102行,while里</span></span><br><span class="line">HAL_IWDG_Refresh(&amp;hiwdg);</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;理论&quot;&gt;&lt;a href=&quot;#理论&quot; class=&quot;headerlink&quot; title=&quot;理论&quot;&gt;&lt;/a&gt;&lt;center&gt;理论&lt;/center&gt;&lt;/h1&gt;&lt;p&gt;防止系统跑飞&lt;/p&gt;
&lt;p&gt;喂狗：让值为0&lt;/p&gt;
&lt;p&gt;分类：独立看门狗(IWDG,0到100喂狗)、窗</summary>
      
    
    
    
    <category term="32单片机" scheme="http://example.com/categories/32%E5%8D%95%E7%89%87%E6%9C%BA/"/>
    
    
    <category term="32单片机" scheme="http://example.com/tags/32%E5%8D%95%E7%89%87%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>7.实时时钟(RTC)</title>
    <link href="http://example.com/post/e8bc8f26.html"/>
    <id>http://example.com/post/e8bc8f26.html</id>
    <published>2024-08-14T13:12:02.000Z</published>
    <updated>2024-08-16T09:32:01.477Z</updated>
    
    <content type="html"><![CDATA[<h1 id="理论"><a href="#理论" class="headerlink" title="理论"></a><center>理论</center></h1><p>使用时钟晶振：32.768KHz(2^{15}^)</p><h1 id="代码编写"><a href="#代码编写" class="headerlink" title="代码编写"></a><center>代码编写</center></h1><p>OLED显示实时时间，串口打印</p><h2 id="晶体、RTC配置"><a href="#晶体、RTC配置" class="headerlink" title="晶体、RTC配置"></a><center>晶体、RTC配置</center></h2><h3 id="晶体配置"><a href="#晶体配置" class="headerlink" title="晶体配置"></a>晶体配置</h3><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic1/img/202408151041859.WebP" alt="晶体配置" style="zoom:50%;"><hr><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic1/img/202408151041494.WebP" alt="配置时钟" style="zoom:50%;"><h3 id="RTC配置"><a href="#RTC配置" class="headerlink" title="RTC配置"></a>RTC配置</h3><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic1/img/202408151041569.WebP" alt="RTC配置" style="zoom:50%;"><p>串口配置参考：<a href="https://d3iiz.top/post/2c4c3bc3">链接</a></p><h2 id="Cube-IDE代码"><a href="#Cube-IDE代码" class="headerlink" title="Cube IDE代码"></a><center>Cube IDE代码</center></h2><p>mian.c</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* USER CODE BEGIN Includes */</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;string.h&quot;</span><span class="comment">//27行</span></span></span><br><span class="line"><span class="comment">/* USER CODE END Includes */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* USER CODE BEGIN PV */</span></span><br><span class="line">RTC_TimeTypeDef RTC_Time;<span class="comment">//48行</span></span><br><span class="line">RTC_DateTypeDef RTC_Date;</span><br><span class="line"><span class="type">uint8_t</span> RTC_Buff[<span class="number">200</span>];</span><br><span class="line"><span class="type">uint8_t</span> RTC_Buff1[<span class="number">200</span>];</span><br><span class="line"><span class="comment">/* USER CODE END PV */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//while里，108行</span></span><br><span class="line"><span class="comment">/* 参数1：指向 RTC_HandleTypeDef 结构的指针，该结构包含RTC 的配置信息</span></span><br><span class="line"><span class="comment">* 参数2：指向时间结构的指针，参数3：RTC_FORMAT_BIN:二进制数据格式，RTC_FORMAT_BCD:十六进制数据格式</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">HAL_RTC_GetTime(&amp;hrtc, &amp;RTC_Time, RTC_FORMAT_BIN);<span class="comment">//获取时分秒</span></span><br><span class="line"><span class="built_in">sprintf</span>(RTC_Buff,<span class="string">&quot;Time:%d:%d:%d\r\n&quot;</span>, RTC_Time.Hours, RTC_Time.Minutes, RTC_Time.Seconds);</span><br><span class="line">HAL_UART_Transmit(&amp;huart1, RTC_Buff, <span class="built_in">strlen</span>(RTC_Buff), <span class="number">100</span>);</span><br><span class="line">HAL_Delay(<span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line">HAL_RTC_GetDate(&amp;hrtc, &amp;RTC_Date, RTC_FORMAT_BIN);<span class="comment">//获取年月日星期</span></span><br><span class="line"><span class="built_in">sprintf</span>(RTC_Buff1,<span class="string">&quot;Date:%d:%d:%d,WeekDay:%d\r\n&quot;</span>, RTC_Date.Year, RTC_Date.Month, RTC_Date.Date, RTC_Date.WeekDay);</span><br><span class="line">HAL_UART_Transmit(&amp;huart1, RTC_Buff1, <span class="built_in">strlen</span>(RTC_Buff1), <span class="number">100</span>);</span><br><span class="line">HAL_Delay(<span class="number">1000</span>);</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;理论&quot;&gt;&lt;a href=&quot;#理论&quot; class=&quot;headerlink&quot; title=&quot;理论&quot;&gt;&lt;/a&gt;&lt;center&gt;理论&lt;/center&gt;&lt;/h1&gt;&lt;p&gt;使用时钟晶振：32.768KHz(2^{15}^)&lt;/p&gt;
&lt;h1 id=&quot;代码编写&quot;&gt;&lt;a href=&quot;</summary>
      
    
    
    
    <category term="32单片机" scheme="http://example.com/categories/32%E5%8D%95%E7%89%87%E6%9C%BA/"/>
    
    
    <category term="32单片机" scheme="http://example.com/tags/32%E5%8D%95%E7%89%87%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>6.IIC通信</title>
    <link href="http://example.com/post/f5fba2c3.html"/>
    <id>http://example.com/post/f5fba2c3.html</id>
    <published>2024-08-13T09:53:28.000Z</published>
    <updated>2024-08-16T09:31:32.063Z</updated>
    
    <content type="html"><![CDATA[<h1 id="理论"><a href="#理论" class="headerlink" title="理论"></a><center>理论</center></h1><p>参考51单片机IIC理论：<a href="https://d3iiz.top/post/f5fba2c3.html">链接</a></p><p>在起始信号后必须发送一个7位从机地址 + 1位方向位，用“0”表示主机发送数据，“1”表示主机接收数据</p><h1 id="代码编写"><a href="#代码编写" class="headerlink" title="代码编写"></a><center>代码编写</center></h1><h2 id="IIC三个模式配置"><a href="#IIC三个模式配置" class="headerlink" title="IIC三个模式配置"></a><center>IIC三个模式配置</center></h2><h3 id="IIC-阻塞模式-配置"><a href="#IIC-阻塞模式-配置" class="headerlink" title="IIC(阻塞模式)配置"></a>IIC(阻塞模式)配置</h3><p>主要方式</p><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic1/img/202408142114842.WebP" alt="IIC(阻塞模式)配置" style="zoom:50%;"><h3 id="IIC-中断模式-配置"><a href="#IIC-中断模式-配置" class="headerlink" title="IIC(中断模式)配置"></a>IIC(中断模式)配置</h3><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic1/img/202408142114758.WebP" alt="IIC(中断模式)配置" style="zoom:50%;"><h3 id="IIC-DMA模式-配置"><a href="#IIC-DMA模式-配置" class="headerlink" title="IIC(DMA模式)配置"></a>IIC(DMA模式)配置</h3><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic1/img/202408142113463.WebP" alt="IIC(DMA模式)配置" style="zoom:50%;"><h2 id="阻塞模式"><a href="#阻塞模式" class="headerlink" title="阻塞模式"></a><center>阻塞模式</center></h2><p>mian.c</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* Reset of all peripherals, Initializes the Flash interface and the Systick. */</span></span><br><span class="line">HAL_Init();<span class="comment">//75行</span></span><br><span class="line">MX_I2C1_Init();</span><br><span class="line"><span class="comment">/* USER CODE BEGIN Init */</span></span><br><span class="line">OLED_Init();<span class="comment">//初始化OLED</span></span><br><span class="line">OLED_Clear();</span><br><span class="line">OLED_ShowCHinese(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>);<span class="comment">//�?</span></span><br><span class="line">OLED_ShowCHinese(<span class="number">18</span>,<span class="number">0</span>,<span class="number">1</span>);<span class="comment">//�?</span></span><br><span class="line">OLED_ShowCHinese(<span class="number">36</span>,<span class="number">0</span>,<span class="number">2</span>);<span class="comment">//�?</span></span><br><span class="line">OLED_ShowCHinese(<span class="number">54</span>,<span class="number">0</span>,<span class="number">3</span>);<span class="comment">//�?</span></span><br><span class="line">OLED_ShowCHinese(<span class="number">72</span>,<span class="number">0</span>,<span class="number">4</span>);<span class="comment">//�?</span></span><br><span class="line">OLED_ShowCHinese(<span class="number">90</span>,<span class="number">0</span>,<span class="number">5</span>);<span class="comment">//�?</span></span><br><span class="line">OLED_ShowCHinese(<span class="number">108</span>,<span class="number">0</span>,<span class="number">6</span>);<span class="comment">//�?</span></span><br><span class="line">OLED_ShowCHinese(<span class="number">0</span>,<span class="number">2</span>,<span class="number">6</span>);<span class="comment">//�?</span></span><br><span class="line"><span class="comment">/* USER CODE END Init */</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>olde.c</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**********************************************</span></span><br><span class="line"><span class="comment">// IIC Write Command命令</span></span><br><span class="line"><span class="comment">**********************************************/</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Write_IIC_Command</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> IIC_Command)</span><span class="comment">//10行</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//   IIC_Start();</span></span><br><span class="line"><span class="comment">//   IIC_Write_Byte(0x78);            //Slave address,SA0=0</span></span><br><span class="line"><span class="comment">//   IIC_Write_Byte(0x00);//write command</span></span><br><span class="line"><span class="comment">//   IIC_Write_Byte(IIC_Command);</span></span><br><span class="line"><span class="comment">//   IIC_Stop();</span></span><br><span class="line"> <span class="type">uint8_t</span> IIC_Send_Cmd[]=&#123;<span class="number">0x00</span>,IIC_Command&#125;;<span class="comment">//将两个数据放进数组</span></span><br><span class="line"> <span class="comment">/* 参数1：指向 I2C_HandleTypeDef 结构的指针，该结构包含指定 I2C 的配置信息</span></span><br><span class="line"><span class="comment">  * 参数2：设备地址，参数3：</span></span><br><span class="line"><span class="comment">  * 参数4：要发送的数据量，参数5：超时持续时间</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"> HAL_I2C_Master_Transmit(&amp;hi2c1, <span class="number">0x78</span>, IIC_Send_Cmd, <span class="number">2</span>, <span class="number">100</span>);<span class="comment">//调用库函数阻塞发送IIC</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**********************************************</span></span><br><span class="line"><span class="comment">// IIC Write Data数据</span></span><br><span class="line"><span class="comment">**********************************************/</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Write_IIC_Data</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> IIC_Data)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//   IIC_Start();</span></span><br><span class="line"><span class="comment">//   IIC_Write_Byte(0x78);//D/C#=0; R/W#=0</span></span><br><span class="line"><span class="comment">//   IIC_Write_Byte(0x40);//write data</span></span><br><span class="line"><span class="comment">//   IIC_Write_Byte(IIC_Data);</span></span><br><span class="line"><span class="comment">//   IIC_Stop();</span></span><br><span class="line">   <span class="type">uint8_t</span> IIC_Send_Data[]=&#123;<span class="number">0x40</span>,IIC_Data&#125;;<span class="comment">//将两个数据放进数组</span></span><br><span class="line">   <span class="comment">/* 参数1：指向 I2C_HandleTypeDef 结构的指针，该结构包含指定 I2C 的配置信息</span></span><br><span class="line"><span class="comment">* 参数2：设备地址，参数3：</span></span><br><span class="line"><span class="comment">* 参数4：要发送的数据量，参数5：超时持续时间</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">   HAL_I2C_Master_Transmit(&amp;hi2c1, <span class="number">0x78</span>, IIC_Send_Data, <span class="number">2</span>, <span class="number">100</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="中断模式"><a href="#中断模式" class="headerlink" title="中断模式"></a><center>中断模式</center></h2><p>mian.c与阻塞相同</p><p>oled.c</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**********************************************</span></span><br><span class="line"><span class="comment">// IIC Write Command命令</span></span><br><span class="line"><span class="comment">**********************************************/</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Write_IIC_Command</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> IIC_Command)</span><span class="comment">//10行</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//   IIC_Start();</span></span><br><span class="line"><span class="comment">//   IIC_Write_Byte(0x78);            //Slave address,SA0=0</span></span><br><span class="line"><span class="comment">//   IIC_Write_Byte(0x00);//write command</span></span><br><span class="line"><span class="comment">//   IIC_Write_Byte(IIC_Command);</span></span><br><span class="line"><span class="comment">//   IIC_Stop();</span></span><br><span class="line"> <span class="type">uint8_t</span> IIC_Send_Cmd[]=&#123;<span class="number">0x00</span>,IIC_Command&#125;;<span class="comment">//将两个数据放进数组</span></span><br><span class="line"> <span class="comment">/* 参数1：指向 I2C_HandleTypeDef 结构的指针，该结构包含指定 I2C 的配置信息</span></span><br><span class="line"><span class="comment">  * 参数2：设备地址，参数3：</span></span><br><span class="line"><span class="comment">  * 参数4：要发送的数据量</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"> HAL_I2C_Master_Transmit_IT(&amp;hi2c1, <span class="number">0x78</span>, IIC_Send_Cmd, <span class="number">2</span>);</span><br><span class="line"> HAL_Delay(<span class="number">1</span>);<span class="comment">//如果不延时发太快不显示,但OLED显示太慢</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**********************************************</span></span><br><span class="line"><span class="comment">// IIC Write Data数据</span></span><br><span class="line"><span class="comment">**********************************************/</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Write_IIC_Data</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> IIC_Data)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//   IIC_Start();</span></span><br><span class="line"><span class="comment">//   IIC_Write_Byte(0x78);//D/C#=0; R/W#=0</span></span><br><span class="line"><span class="comment">//   IIC_Write_Byte(0x40);//write data</span></span><br><span class="line"><span class="comment">//   IIC_Write_Byte(IIC_Data);</span></span><br><span class="line"><span class="comment">//   IIC_Stop();</span></span><br><span class="line">   <span class="type">uint8_t</span> IIC_Send_Data[]=&#123;<span class="number">0x40</span>,IIC_Data&#125;;<span class="comment">//将两个数据放进数组</span></span><br><span class="line">   <span class="comment">/* 参数1：指向 I2C_HandleTypeDef 结构的指针，该结构包含指定 I2C 的配置信息</span></span><br><span class="line"><span class="comment">* 参数2：设备地址，参数3：</span></span><br><span class="line"><span class="comment">* 参数4：要发送的数据量</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">   HAL_I2C_Master_Transmit_IT(&amp;hi2c1, <span class="number">0x78</span>, IIC_Send_Data, <span class="number">2</span>);</span><br><span class="line">   HAL_Delay(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;理论&quot;&gt;&lt;a href=&quot;#理论&quot; class=&quot;headerlink&quot; title=&quot;理论&quot;&gt;&lt;/a&gt;&lt;center&gt;理论&lt;/center&gt;&lt;/h1&gt;&lt;p&gt;参考51单片机IIC理论：&lt;a href=&quot;https://d3iiz.top/post/f5fba2c3</summary>
      
    
    
    
    <category term="32单片机" scheme="http://example.com/categories/32%E5%8D%95%E7%89%87%E6%9C%BA/"/>
    
    
    <category term="32单片机" scheme="http://example.com/tags/32%E5%8D%95%E7%89%87%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>office无法初始化VisualBasic</title>
    <link href="http://example.com/post/6928cd3f.html"/>
    <id>http://example.com/post/6928cd3f.html</id>
    <published>2024-08-12T15:37:39.000Z</published>
    <updated>2024-08-16T09:48:45.431Z</updated>
    
    <content type="html"><![CDATA[<p>1.打开word，将 无法初始化visual basic 的弹出框先关掉</p><p>2.点击左上角的 <code>文件</code></p><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic1/img/202408122338415.WebP" alt="点击文件" style="zoom:50%;"><p>3.点击帮助栏目下的 <code>选项</code>，然后点击 <code>加载项</code></p><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic1/img/202408122338308.WebP" alt="进入选项" style="zoom:50%;"><hr><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic1/img/202408122339744.WebP" alt="进入设置" style="zoom:50%;"><p>4.在弹出的com加载项中将所有带√的选项都去掉(此处不是删除，只是将<code>√去掉</code>)，最后点击<code>确定</code>，重新打开文件</p><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic1/img/202408122339947.WebP" alt="取消" style="zoom:50%;"><p>5.大功告成</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;1.打开word，将 无法初始化visual basic 的弹出框先关掉&lt;/p&gt;
&lt;p&gt;2.点击左上角的 &lt;code&gt;文件&lt;/code&gt;&lt;/p&gt;
&lt;img src=&quot;https://cdn.jsdelivr.net/gh/xinzai-x/MyPic1/img/202408</summary>
      
    
    
    
    <category term="Windows使用技巧" scheme="http://example.com/categories/Windows%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/"/>
    
    
    <category term="office无法初始化VisualBasic" scheme="http://example.com/tags/office%E6%97%A0%E6%B3%95%E5%88%9D%E5%A7%8B%E5%8C%96VisualBasic/"/>
    
  </entry>
  
  <entry>
    <title>5.ADC(模拟信号转数字信号)</title>
    <link href="http://example.com/post/bfd038f5.html"/>
    <id>http://example.com/post/bfd038f5.html</id>
    <published>2024-08-10T06:45:10.000Z</published>
    <updated>2024-08-16T09:41:30.383Z</updated>
    
    <content type="html"><![CDATA[<h1 id="理论"><a href="#理论" class="headerlink" title="理论"></a><center>理论</center></h1><p>3个ADC控制器</p><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic1/img/202408121609746.WebP" alt="3个ADC控制器" style="zoom: 67%;"><p>转换：单次转换模式、 连续转换模式</p><p>转换时间 &#x3D; 采样时间 + 12.5周期</p><p>&ensp;&ensp;&ensp;&ensp;当ADCCLK(时钟) &#x3D; 14MHz，采样时间为1.5周期，TcoNv(转换时间) &#x3D; 1.5 + 12.5 &#x3D; 14 周期 &#x3D; 1us</p><p>采样精度：12位&#x2F;16位(2^12^ &#x3D; 4096)</p><p>实际电压值 &#x3D; <code>(通道采集的ADC值 * 3.3) / 4096</code></p><p>数据对齐：左对齐、右对齐</p><h1 id="代码编写"><a href="#代码编写" class="headerlink" title="代码编写"></a><center>代码编写</center></h1><p>电压采集</p><h2 id="ADC、串口一配置"><a href="#ADC、串口一配置" class="headerlink" title="ADC、串口一配置"></a><center>ADC、串口一配置</center></h2><h3 id="ADC-阻塞模式-配置"><a href="#ADC-阻塞模式-配置" class="headerlink" title="ADC(阻塞模式)配置"></a>ADC(阻塞模式)配置</h3><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic1/img/202408121609883.WebP" alt="配置ADC" style="zoom: 33%;"><hr><p>多个通道时，自动扫描会自动打开使能</p><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic1/img/202408121609749.WebP" alt="配置ADC" style="zoom:50%;"><hr><p>修改时钟分频：</p><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic1/img/202408121609690.WebP" alt="修改时钟配置" style="zoom:33%;"><p>配置串口一打印采集到的电压值，配置方法参考：<a href="https://d3iiz.top/post/2c4c3bc3.html">链接</a></p><h3 id="ADC-DMA模式-配置"><a href="#ADC-DMA模式-配置" class="headerlink" title="ADC(DMA模式)配置"></a>ADC(DMA模式)配置</h3><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic1/img/202408121608683.WebP" alt="ADC配置" style="zoom:50%;"><p>配置串口一打印采集到的电压值，配置方法参考：<a href="https://d3iiz.top/post/2c4c3bc3.html">链接</a></p><p>修改时钟分频（和上面相同）</p><p>配置DMA：</p><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic1/img/202408121610011.WebP" alt="配置DMA" style="zoom:33%;"><h3 id="ADC-中断模式-配置"><a href="#ADC-中断模式-配置" class="headerlink" title="ADC(中断模式)配置"></a>ADC(中断模式)配置</h3><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic1/img/202408121611895.WebP" alt="配置ADC" style="zoom: 50%;"><p>配置串口一打印采集到的电压值，配置方法参考：<a href="https://d3iiz.top/post/2c4c3bc3.html">链接</a></p><p>修改时钟分频（和上面相同）</p><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic1/img/202408121611274.WebP" alt="配置ADC中断" style="zoom: 33%;"><h2 id="阻塞模式"><a href="#阻塞模式" class="headerlink" title="阻塞模式"></a><center>阻塞模式</center></h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">HAL_ADCEx_Calibration_Start(&amp;hadc1);<span class="comment">//校准，adc.c,94行</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//main.c</span></span><br><span class="line"><span class="comment">/* USER CODE BEGIN Includes */</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span><span class="comment">//27行</span></span></span><br><span class="line"><span class="comment">/* USER CODE END Includes */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* USER CODE BEGIN PV */</span></span><br><span class="line"><span class="type">uint16_t</span> AD_Buf[<span class="number">4</span>];<span class="comment">//48行</span></span><br><span class="line"><span class="type">uint8_t</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="type">uint8_t</span> Send_Buf[<span class="number">50</span>];</span><br><span class="line"><span class="comment">/* USER CODE END PV */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//while里,103行</span></span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++)<span class="comment">//4个通道一次采集采集一个通道for4</span></span><br><span class="line">&#123;</span><br><span class="line">HAL_ADC_Start(&amp;hadc1);<span class="comment">//手动使能开始转换</span></span><br><span class="line">HAL_ADC_PollForConversion(&amp;hadc1,<span class="number">10</span>);<span class="comment">//等待转换完成，等待时间10ms，超时结束</span></span><br><span class="line">AD_Buf[i] = HAL_ADC_GetValue(&amp;hadc1);<span class="comment">//获取转换后的值</span></span><br><span class="line"><span class="built_in">sprintf</span>(Send_Buf,<span class="string">&quot;Channel:%d:  V:%1.2f  Value:%d\n\r&quot;</span>, i+<span class="number">1</span>, (<span class="type">float</span>)(AD_Buf[i])*<span class="number">3.3f</span>/<span class="number">4096.0</span>, AD_Buf[i]);</span><br><span class="line">HAL_UART_Transmit(&amp;huart1,Send_Buf, <span class="built_in">strlen</span>(Send_Buf), <span class="number">100</span>);</span><br><span class="line">&#125;</span><br><span class="line">HAL_Delay(<span class="number">1000</span>);</span><br></pre></td></tr></table></figure><h2 id="DMA模式"><a href="#DMA模式" class="headerlink" title="DMA模式"></a><center>DMA模式</center></h2><p>DMA会触发中断</p><p>main.c</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* USER CODE BEGIN PV */</span></span><br><span class="line"><span class="type">uint16_t</span> AD_Buf[<span class="number">4</span>];<span class="comment">//49行</span></span><br><span class="line"><span class="comment">/* USER CODE END PV */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* USER CODE BEGIN 2 */</span></span><br><span class="line">HAL_ADCEx_Calibration_Start(&amp;hadc1);<span class="comment">//校准，96行</span></span><br><span class="line"><span class="comment">//参数1：ADC句柄,参数2：目标缓冲区地址,参数3：从 ADC 外设传输到存储器的数据长度(两个通道)</span></span><br><span class="line">HAL_ADC_Start_DMA(&amp;hadc1,(<span class="type">uint32_t</span> *)&amp;AD_Buf,<span class="number">2</span>);</span><br><span class="line"><span class="comment">/* USER CODE END 2 */</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;AD1= V:%1.2f  Value:%d\n\r&quot;</span>, AD_Buf[<span class="number">0</span>]*<span class="number">3.3</span>/<span class="number">4096.0</span>, AD_Buf[<span class="number">0</span>]);<span class="comment">//105行</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;AD2= V:%1.2f  Value:%d\n\r&quot;</span>, AD_Buf[<span class="number">1</span>]*<span class="number">3.3</span>/<span class="number">4096.0</span>, AD_Buf[<span class="number">1</span>]);<span class="comment">//106行</span></span><br><span class="line">HAL_Delay(<span class="number">1000</span>);</span><br></pre></td></tr></table></figure><h2 id="中断模式"><a href="#中断模式" class="headerlink" title="中断模式"></a><center>中断模式</center></h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* USER CODE BEGIN ADC1_Init 2 */</span></span><br><span class="line">HAL_ADCEx_Calibration_Start(&amp;hadc1);<span class="comment">//校准，adc.c,67行</span></span><br><span class="line">HAL_ADC_Start_IT(&amp;hadc1);<span class="comment">//开启中断模式，即开始采集</span></span><br><span class="line"><span class="comment">/* USER CODE END ADC1_Init 2 */</span></span><br><span class="line"></span><br><span class="line">main.c</span><br><span class="line"><span class="comment">/* USER CODE BEGIN PV */</span></span><br><span class="line"><span class="type">uint16_t</span> Send_Buf[<span class="number">20</span>];<span class="comment">//48行</span></span><br><span class="line"><span class="type">uint16_t</span> AD_Value;</span><br><span class="line"><span class="comment">/* USER CODE END PV */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//while,102行</span></span><br><span class="line"><span class="built_in">sprintf</span>(Send_Buf,<span class="string">&quot;V:%1.2f  Value:%d\n\r&quot;</span>,(<span class="type">float</span>)(AD_Value)*<span class="number">3.3f</span>/<span class="number">4096.0</span>,AD_Value);</span><br><span class="line">HAL_UART_Transmit(&amp;huart1,Send_Buf, <span class="built_in">strlen</span>(Send_Buf), <span class="number">10</span>);</span><br><span class="line">HAL_Delay(<span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">/* USER CODE BEGIN 4 */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">HAL_ADC_ConvCpltCallback</span><span class="params">(ADC_HandleTypeDef* hadc)</span><span class="comment">//159行</span></span><br><span class="line">&#123;</span><br><span class="line">AD_Value = HAL_ADC_GetValue(&amp;hadc1);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* USER CODE END 4 */</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;理论&quot;&gt;&lt;a href=&quot;#理论&quot; class=&quot;headerlink&quot; title=&quot;理论&quot;&gt;&lt;/a&gt;&lt;center&gt;理论&lt;/center&gt;&lt;/h1&gt;&lt;p&gt;3个ADC控制器&lt;/p&gt;
&lt;img src=&quot;https://cdn.jsdelivr.net/gh/xi</summary>
      
    
    
    
    <category term="32单片机" scheme="http://example.com/categories/32%E5%8D%95%E7%89%87%E6%9C%BA/"/>
    
    
    <category term="32单片机" scheme="http://example.com/tags/32%E5%8D%95%E7%89%87%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>4.定时器(TIMER)</title>
    <link href="http://example.com/post/f71d0ad2.html"/>
    <id>http://example.com/post/f71d0ad2.html</id>
    <published>2024-08-06T08:19:27.000Z</published>
    <updated>2024-08-16T09:30:00.068Z</updated>
    
    <content type="html"><![CDATA[<h1 id="理论"><a href="#理论" class="headerlink" title="理论"></a><center>理论</center></h1><p>预分频寄存器(TIMx_PSC)：由于时钟源为：72MHz，T &#x3D; 1&#x2F;f &#x3D; 1&#x2F;72MHz，由于不好计算周期时间，则需要分频，若分72则T &#x3D; 1&#x2F;1MHz &#x3D; 1us(1MHz &#x3D; 一百万秒)</p><p>计数方式：向上(递增到某个数触发中断)、向下(递减到某一个数触发中断)、中心计数(递增到某一个数触发中断，再递减到某一个数触发中断)</p><p>比较值(参考：<a href="https://blog.csdn.net/qq_36553707/article/details/109527645">链接</a>)：</p><p>&ensp;&ensp;&ensp;&ensp;PWM1模式：若计数值小于有效值则高电平，计数值大于有效值则低电平，可以控制比较值来调节占空比</p><p>&ensp;&ensp;&ensp;&ensp;PWM2模式：与PWM1模式相反，计数值小于有效值则低电平，大于有效值则高电平</p><p>复用：Pin脚本身除了支持普通GPIO功能之外，还支持别的功能(使用别的功能就叫复用)</p><p>重映射：Pin脚本身不支持这些功能，配置重映射寄存器，使其具备别的功能</p><h2 id="定时器分类"><a href="#定时器分类" class="headerlink" title="定时器分类"></a><center>定时器分类</center></h2><p>型号：STM32F103ZET6</p><p>基本定时器：TIM6、TIM7</p><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic1/img/202408092327771.WebP" alt="基本定时器功能" style="zoom: 50%;"><p>通用定时器：TIM2~TIM5</p><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic1/img/202408092327567.WebP" alt="通用定时器功能" style="zoom:50%;"><p>高级定时器：TIM1、TIM8</p><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic1/img/202408092327762.WebP" alt="高级定时器功能" style="zoom:50%;"><h1 id="代码编写"><a href="#代码编写" class="headerlink" title="代码编写"></a><center>代码编写</center></h1><p>定时器中断实验：LED灯一秒闪烁一次、LED灯两秒闪烁一次、计算单片机运行时间、串口5秒返回单片机运行时间</p><p>PWM信号输出：呼吸灯、电机(由慢到快)、舵机</p><p>输入捕获：检测信号脉冲宽度(舵机脉冲宽度)</p><h2 id="LED灯、UART、定时器、PWM配置"><a href="#LED灯、UART、定时器、PWM配置" class="headerlink" title="LED灯、UART、定时器、PWM配置"></a><center>LED灯、UART、定时器、PWM配置</center></h2><p>LED灯配置请看：<a href="https://d3iiz.top/post/adb202b7.html">链接</a></p><p>串口配置请看：<a href="https://d3iiz.top/post/2c4c3bc3.html">链接</a></p><h3 id="配置定时器："><a href="#配置定时器：" class="headerlink" title="配置定时器："></a>配置定时器：</h3><p>72&#x2F;7200 &#x3D; 0.01，T &#x3D; 1&#x2F;f &#x3D; 1&#x2F;0.01MHz &#x3D; 100us，计数10000，触发中断，100us * 10000 &#x3D; 1s，1s &#x3D; 1000000us，但单片机都是以0开始，所以分频值以及计数值都 -1</p><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic1/img/202408092327709.WebP" alt="定时器配置" style="zoom: 50%;"><h3 id="配置定时器向上计数溢出中断NVIC-嵌套向量中断控制器"><a href="#配置定时器向上计数溢出中断NVIC-嵌套向量中断控制器" class="headerlink" title="配置定时器向上计数溢出中断NVIC(嵌套向量中断控制器)"></a>配置定时器向上计数溢出中断NVIC(嵌套向量中断控制器)</h3><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic1/img/202408100951812.WebP" alt="配置定时器NVIC" style="zoom:50%;"><h3 id="定时器-PWM-控制LED灯配置"><a href="#定时器-PWM-控制LED灯配置" class="headerlink" title="定时器(PWM)控制LED灯配置"></a>定时器(PWM)控制LED灯配置</h3><p>LED(PB5)引脚说明：</p><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic1/img/202408092327266.WebP" alt="PWMLED灯配置" style="zoom:50%;"><p>所以配置定时器3，通道二，但配置完发现图中不符，需手动修改</p><p><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic1/img/202408092327594.WebP" alt="定时器配置LED灯"></p><h3 id="定时器-PWM-控制电机配置"><a href="#定时器-PWM-控制电机配置" class="headerlink" title="定时器(PWM)控制电机配置"></a>定时器(PWM)控制电机配置</h3><p>配置PB4引脚PWM控制电机速度</p><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic1/img/202408092330260.WebP" alt="配置PWM控制电机速度" style="zoom:33%;"><h3 id="定时器-PWM-控制舵机配置"><a href="#定时器-PWM-控制舵机配置" class="headerlink" title="定时器(PWM)控制舵机配置"></a>定时器(PWM)控制舵机配置</h3><p>舵机脉冲周期：20ms</p><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic1/img/202408092331367.WebP" alt="PWM控制舵机配置" style="zoom: 33%;"><h3 id="输入捕获定时器配置"><a href="#输入捕获定时器配置" class="headerlink" title="输入捕获定时器配置"></a>输入捕获定时器配置</h3><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic1/img/202408092328847.WebP" alt="输入捕获定时器配置" style="zoom: 33%;"><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic1/img/202408092332188.WebP" alt="输入捕获定时器配置" style="zoom:50%;"><h3 id="配置定时器全局中断NVIC"><a href="#配置定时器全局中断NVIC" class="headerlink" title="配置定时器全局中断NVIC"></a>配置定时器全局中断NVIC</h3><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic1/img/202408092332662.WebP" alt="开启中断" style="zoom:50%;"><h3 id="DHT11-温湿度传感器-配置"><a href="#DHT11-温湿度传感器-配置" class="headerlink" title="DHT11(温湿度传感器)配置"></a>DHT11(温湿度传感器)配置</h3><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic1/img/202408101440952.WebP" alt="DHT11(温湿度传感器)配置" style="zoom: 50%;"><h2 id="LED灯闪烁、串口输出运行时间"><a href="#LED灯闪烁、串口输出运行时间" class="headerlink" title="LED灯闪烁、串口输出运行时间"></a><center>LED灯闪烁、串口输出运行时间</center></h2><p>LED1每隔一秒电平翻转一次，LED2每隔两秒电平翻转一次，串口输出单片机运行时间</p><h3 id="Cube-IDE代码"><a href="#Cube-IDE代码" class="headerlink" title="Cube IDE代码"></a><center>Cube IDE代码</center></h3><p>main.c</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* USER CODE BEGIN Includes */</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span><span class="comment">//27行</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span><span class="comment">//28行</span></span></span><br><span class="line"><span class="comment">/* USER CODE END Includes */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* USER CODE BEGIN 0 */</span></span><br><span class="line"><span class="type">uint32_t</span> G_Timer_Count = <span class="number">0</span>;<span class="comment">//59行</span></span><br><span class="line"><span class="type">uint8_t</span> UART_Count[<span class="number">200</span>];</span><br><span class="line"><span class="type">uint8_t</span> UART_Flag = <span class="number">0</span>;</span><br><span class="line"><span class="comment">/* USER CODE END 0 */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* USER CODE BEGIN 2 */</span></span><br><span class="line">HAL_TIM_Base_Start_IT(&amp;htim1);<span class="comment">//开启定时器，97行</span></span><br><span class="line"><span class="comment">/* USER CODE END 2 */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(UART_Flag)<span class="comment">//104行</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">sprintf</span>(UART_Count,<span class="string">&quot;MCU run time is %lus&quot;</span>,G_Timer_Count);</span><br><span class="line">HAL_UART_Transmit(&amp;huart1, UART_Count, <span class="built_in">strlen</span>(UART_Count), <span class="number">1000</span>);</span><br><span class="line">UART_Flag = <span class="number">0</span>;<span class="comment">//打印一次后标志=0，等中断五次(5s)后</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* USER CODE BEGIN 4 */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">HAL_TIM_PeriodElapsedCallback</span><span class="params">(TIM_HandleTypeDef *htim)</span><span class="comment">//定时器触发函数,157行</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(htim == &amp;htim1)</span><br><span class="line">&#123;</span><br><span class="line">HAL_GPIO_TogglePin(LED1_GPIO_Port, LED1_Pin);</span><br><span class="line">G_Timer_Count++;</span><br><span class="line"><span class="keyword">if</span>((G_Timer_Count % <span class="number">5</span>) == <span class="number">0</span>)</span><br><span class="line">UART_Flag = <span class="number">1</span>;<span class="comment">//每隔五秒，让标志=1</span></span><br><span class="line"><span class="keyword">if</span>((G_Timer_Count % <span class="number">2</span>) == <span class="number">0</span>)<span class="comment">//LED2每隔两秒翻转电平</span></span><br><span class="line">HAL_GPIO_TogglePin(LED2_GPIO_Port, LED2_Pin);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* USER CODE END 4 */</span></span><br></pre></td></tr></table></figure><h2 id="PWM信号LED呼吸灯、电机、舵机"><a href="#PWM信号LED呼吸灯、电机、舵机" class="headerlink" title="PWM信号LED呼吸灯、电机、舵机"></a><center>PWM信号LED呼吸灯、电机、舵机</center></h2><p>理论参考：<a href="https://d3iiz.top/post/93c966f3.html">链接</a></p><p>PWM信号控制LED，产生一个呼吸灯效果，以及对电机控制，控制速度由慢到快</p><h3 id="Cube-IDE代码-1"><a href="#Cube-IDE代码-1" class="headerlink" title="Cube IDE代码"></a><center>Cube IDE代码</center></h3><p>main.c</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* USER CODE BEGIN PV */</span></span><br><span class="line"><span class="type">uint8_t</span> PWM_Value = <span class="number">0</span>,LED_PWM_Value = <span class="number">0</span>,SG_PWM = <span class="number">5</span>;<span class="comment">//47行</span></span><br><span class="line"><span class="comment">/* USER CODE END PV */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* USER CODE BEGIN 2 */</span></span><br><span class="line"><span class="comment">//参数1：定时器句柄(指向配置好的定时器结构体的指针)，参数2：定时器通道,93行</span></span><br><span class="line">HAL_TIM_PWM_Start(&amp;htim3, TIM_CHANNEL_2);<span class="comment">//开启定时器3，通道2 PWM</span></span><br><span class="line">HAL_TIM_PWM_Start(&amp;htim3, TIM_CHANNEL_1);<span class="comment">//开启定时器3，通道1 PWM</span></span><br><span class="line">HAL_TIM_PWM_Start(&amp;htim4, TIM_CHANNEL_1);<span class="comment">//开启定时器4，通道1 PWM</span></span><br><span class="line"><span class="comment">/* USER CODE END 2 */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//103行</span></span><br><span class="line">PWM_Value++;</span><br><span class="line">PWM_Value = PWM_Value % <span class="number">200</span>;</span><br><span class="line"><span class="keyword">if</span>(PWM_Value &gt; <span class="number">99</span>)</span><br><span class="line">LED_PWM_Value = <span class="number">200</span> - PWM_Value;<span class="comment">//大于99时，从大到小(100,99...)</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">LED_PWM_Value = PWM_Value;</span><br><span class="line">HAL_Delay(<span class="number">25</span>);</span><br><span class="line"><span class="comment">//参数1：定时器句柄，参数2：定时器通道,参数3：比较值</span></span><br><span class="line">__HAL_TIM_SET_COMPARE(&amp;htim3, TIM_CHANNEL_2, LED_PWM_Value);<span class="comment">//设置LED比较值</span></span><br><span class="line">__HAL_TIM_SET_COMPARE(&amp;htim3, TIM_CHANNEL_1, LED_PWM_Value);<span class="comment">//设置电机比较值</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(PWM_Value % <span class="number">30</span> == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//每0.1ms计数值+1则0.5ms，比较值模式1，则占空比(高电平)0.5ms</span></span><br><span class="line">SG_PWM += <span class="number">5</span>;</span><br><span class="line"><span class="keyword">if</span>(SG_PWM &gt; <span class="number">25</span>)</span><br><span class="line">SG_PWM = <span class="number">5</span>;</span><br><span class="line">__HAL_TIM_SET_COMPARE(&amp;htim4, TIM_CHANNEL_1, SG_PWM);<span class="comment">//设置舵机比较值</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="输入捕获-IC"><a href="#输入捕获-IC" class="headerlink" title="输入捕获(IC)"></a><center>输入捕获(IC)</center></h2><p>捕获高电平持续时间</p><h3 id="Cube-IDE代码-2"><a href="#Cube-IDE代码-2" class="headerlink" title="Cube IDE代码"></a><center>Cube IDE代码</center></h3><p>捕获PWM高电平的时间</p><p>main.c</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* USER CODE BEGIN PTD */</span></span><br><span class="line"><span class="type">uint32_t</span> ic_state=<span class="number">0</span>,period_count=<span class="number">0</span>,ic_count=<span class="number">0</span>,us_count;<span class="comment">//32行</span></span><br><span class="line"><span class="comment">/* USER CODE END PTD */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* USER CODE BEGIN 2 */</span></span><br><span class="line">HAL_TIM_Base_Start_IT(&amp;htim2);<span class="comment">//开启普通定时器中断</span></span><br><span class="line">  HAL_TIM_IC_Start_IT(&amp;htim2, TIM_CHANNEL_2);<span class="comment">//开启捕获定时器中断</span></span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;Please connect MCU51 P2.0,and let SG90 run to detect signal!\n&quot;</span>);<span class="comment">//串口输出捕获的时间(记得配置串口重定向)</span></span><br><span class="line"><span class="comment">/* USER CODE END 2 */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(ic_state== <span class="number">2</span> )<span class="comment">//103行(while里)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">/* 始终设置的是1us触发计数值加1</span></span><br><span class="line"><span class="comment">* 一个周期大概65ms，若大于65只有捕获中断函数不好使</span></span><br><span class="line"><span class="comment">* 若period_count为1，则代表过了一个中断周期，时间(1*65535)us</span></span><br><span class="line"><span class="comment">* 若没有到整个中断周期时间则剩下的为：ic_count</span></span><br><span class="line"><span class="comment">* 所以两个相加等于整个高电平时间*/</span></span><br><span class="line">us_count = ic_count + period_count * <span class="number">0xFFFF</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;High level duration:  %ldus \n&quot;</span>,us_count);<span class="comment">//(float)(us_count)/1000.000</span></span><br><span class="line">ic_state = <span class="number">0</span>;<span class="comment">//再将中间键恢复0，方便下次上升沿触发中断计时</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* USER CODE BEGIN 4 */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">HAL_TIM_IC_CaptureCallback</span><span class="params">(TIM_HandleTypeDef *htim)</span><span class="comment">//输入捕获触发函数,161行</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(TIM2 == htim-&gt;Instance)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> ( ic_state == <span class="number">0</span> )</span><br><span class="line">&#123;</span><br><span class="line">__HAL_TIM_SET_COUNTER(htim,<span class="number">0</span>);<span class="comment">//将定时器从零开始计时</span></span><br><span class="line">__HAL_TIM_SET_CAPTUREPOLARITY(&amp;htim2, TIM_CHANNEL_2, TIM_INPUTCHANNELPOLARITY_FALLING);<span class="comment">//设置成下降沿触发</span></span><br><span class="line">ic_state = <span class="number">1</span>;<span class="comment">//下次触发中断时(下降沿)则运行else</span></span><br><span class="line">period_count = <span class="number">0</span>;</span><br><span class="line">ic_count = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">ic_count = HAL_TIM_ReadCapturedValue(&amp;htim2,TIM_CHANNEL_2);<span class="comment">//读取定时器计数值</span></span><br><span class="line">__HAL_TIM_SET_CAPTUREPOLARITY(&amp;htim2, TIM_CHANNEL_2,   TIM_INPUTCHANNELPOLARITY_RISING);<span class="comment">//设置成上降沿触发</span></span><br><span class="line">ic_state = <span class="number">2</span>;<span class="comment">//进入while里面的判断</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">HAL_TIM_PeriodElapsedCallback</span><span class="params">(TIM_HandleTypeDef *htim)</span><span class="comment">//普通定时器中断触发函数</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>(TIM2 == htim-&gt;Instance)</span><br><span class="line">    &#123;</span><br><span class="line"><span class="keyword">if</span>(ic_state==<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(period_count==<span class="number">0XFFFF</span>)<span class="comment">//一次周期大约65ms，若进入这个需要(65*65535)ms</span></span><br><span class="line">&#123;</span><br><span class="line">ic_state=<span class="number">2</span>;</span><br><span class="line">ic_count=<span class="number">0XFFFF</span>;<span class="comment">//返回一个超大数显示错误</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">period_count++;</span><br><span class="line">&#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* USER CODE END 4 */</span></span><br></pre></td></tr></table></figure><h2 id="DHT11"><a href="#DHT11" class="headerlink" title="DHT11"></a><center>DHT11</center></h2><p>main.c</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* USER CODE BEGIN Includes */</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;dht11.h&quot;</span><span class="comment">//27行</span></span></span><br><span class="line"><span class="comment">/* USER CODE END Includes */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(DHT_Read())<span class="comment">//while里,101行</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot; H:%u  T:%u \r\n&quot;</span>,Data[<span class="number">0</span>],Data[<span class="number">2</span>]);</span><br><span class="line">HAL_Delay(<span class="number">1000</span>);</span><br></pre></td></tr></table></figure><p>dht11.c</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stm32f1xx.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;dht11.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">uint8_t</span> Data[<span class="number">5</span>]=&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay_us</span><span class="params">(<span class="type">uint16_t</span> us)</span><span class="comment">//微秒延迟</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">uint16_t</span> differ = <span class="number">0xffff</span>-us;</span><br><span class="line">__HAL_TIM_SET_COUNTER(&amp;htim1,differ);</span><br><span class="line">HAL_TIM_Base_Start(&amp;htim1);</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(differ &lt; <span class="number">0xffff</span>)&#123;</span><br><span class="line">differ = __HAL_TIM_GET_COUNTER(&amp;htim1);</span><br><span class="line">&#125;</span><br><span class="line">HAL_TIM_Base_Stop(&amp;htim1);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">DHT_GPIO_SET_OUTPUT</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">GPIO_InitTypeDef GPIO_InitStructure;</span><br><span class="line">GPIO_InitStructure.Pin=GPIO_PIN_5;</span><br><span class="line">GPIO_InitStructure.Mode=GPIO_MODE_OUTPUT_PP;<span class="comment">//PA5设置输出</span></span><br><span class="line"><span class="comment">//GPIO_InitStructure.Pull=;</span></span><br><span class="line">GPIO_InitStructure.Speed=GPIO_SPEED_FREQ_HIGH;</span><br><span class="line">HAL_GPIO_Init(GPIOA,&amp;GPIO_InitStructure);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">DHT_GPIO_SET_INPUT</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">GPIO_InitTypeDef GPIO_InitStructure;</span><br><span class="line">GPIO_InitStructure.Pin=GPIO_PIN_5;</span><br><span class="line">GPIO_InitStructure.Mode=GPIO_MODE_INPUT;<span class="comment">//PA5设置输入</span></span><br><span class="line">GPIO_InitStructure.Speed=GPIO_SPEED_FREQ_HIGH;</span><br><span class="line">HAL_GPIO_Init(GPIOA,&amp;GPIO_InitStructure);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">uint8_t</span> <span class="title function_">DHT_Read_Byte</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"> <span class="type">uint8_t</span> ReadData=<span class="number">0</span>;</span><br><span class="line"> <span class="type">uint8_t</span> temp;</span><br><span class="line"> <span class="type">uint8_t</span> retry=<span class="number">0</span>;</span><br><span class="line"> <span class="type">uint8_t</span> i;    </span><br><span class="line"> <span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;<span class="number">8</span>; i++)</span><br><span class="line"> &#123;</span><br><span class="line"><span class="keyword">while</span>(HAL_GPIO_ReadPin(GPIOA,GPIO_PIN_5)==<span class="number">0</span> &amp;&amp; retry&lt;<span class="number">100</span>)  </span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">Delay_us(<span class="number">1</span>);</span><br><span class="line">  retry++;</span><br><span class="line">&#125;</span><br><span class="line">retry=<span class="number">0</span>;</span><br><span class="line">Delay_us(<span class="number">40</span>);</span><br><span class="line"><span class="keyword">if</span>(HAL_GPIO_ReadPin(GPIOA,GPIO_PIN_5)==<span class="number">1</span>)   temp=<span class="number">1</span>;</span><br><span class="line"> <span class="keyword">else</span>   temp=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"> <span class="keyword">while</span>(HAL_GPIO_ReadPin(GPIOA,GPIO_PIN_5)==<span class="number">1</span> &amp;&amp; retry&lt;<span class="number">100</span>)</span><br><span class="line"> &#123;</span><br><span class="line"> Delay_us(<span class="number">1</span>);</span><br><span class="line"> retry++;</span><br><span class="line"> &#125;</span><br><span class="line"> retry=<span class="number">0</span>;</span><br><span class="line"> </span><br><span class="line"> ReadData&lt;&lt;=<span class="number">1</span>;</span><br><span class="line"> ReadData |= temp;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> ReadData;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">uint8_t</span> <span class="title function_">DHT_Read</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"> <span class="type">uint8_t</span> retry=<span class="number">0</span>;</span><br><span class="line"> <span class="type">uint8_t</span> i;</span><br><span class="line"></span><br><span class="line"> DHT_GPIO_SET_OUTPUT();</span><br><span class="line"> HAL_GPIO_WritePin(GPIOA,GPIO_PIN_5,GPIO_PIN_RESET);</span><br><span class="line"> HAL_Delay(<span class="number">18</span>);</span><br><span class="line"> HAL_GPIO_WritePin(GPIOA,GPIO_PIN_5,GPIO_PIN_SET);</span><br><span class="line"> Delay_us(<span class="number">20</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">DHT_GPIO_SET_INPUT();</span><br><span class="line">Delay_us(<span class="number">20</span>);</span><br><span class="line"><span class="keyword">if</span>(HAL_GPIO_ReadPin(GPIOA,GPIO_PIN_5)==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(HAL_GPIO_ReadPin(GPIOA,GPIO_PIN_5)==<span class="number">0</span> &amp;&amp; retry&lt;<span class="number">100</span>)  </span><br><span class="line">&#123;</span><br><span class="line">   Delay_us(<span class="number">1</span>);</span><br><span class="line"> retry++;</span><br><span class="line">&#125;</span><br><span class="line">retry=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(HAL_GPIO_ReadPin(GPIOA,GPIO_PIN_5)==<span class="number">1</span> &amp;&amp; retry&lt;<span class="number">100</span>) </span><br><span class="line">&#123;</span><br><span class="line">   Delay_us(<span class="number">1</span>);</span><br><span class="line"> retry++;</span><br><span class="line">&#125;</span><br><span class="line">retry=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;<span class="number">5</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"> Data[i] = DHT_Read_Byte();</span><br><span class="line">&#125;</span><br><span class="line">Delay_us(<span class="number">50</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"> <span class="type">uint32_t</span> sum=Data[<span class="number">0</span>]+Data[<span class="number">1</span>]+Data[<span class="number">2</span>]+Data[<span class="number">3</span>];</span><br><span class="line"> <span class="keyword">if</span>((sum)==Data[<span class="number">4</span>])    <span class="keyword">return</span> <span class="number">1</span>;  </span><br><span class="line">   <span class="keyword">else</span>   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>dht11.h</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __DHT11_H</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __DHT11_H</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stm32f1xx_hal.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stm32f1xx.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">extern</span> <span class="type">uint8_t</span> Data[<span class="number">5</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">extern</span> TIM_HandleTypeDef htim1;</span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay_us</span><span class="params">(<span class="type">uint16_t</span> us)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">DHT_GPIO_SET_OUTPUT</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">DHT_GPIO_SET_INPUT</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">uint8_t</span> <span class="title function_">DHT_Read_Byte</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">uint8_t</span> <span class="title function_">DHT_Read</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;理论&quot;&gt;&lt;a href=&quot;#理论&quot; class=&quot;headerlink&quot; title=&quot;理论&quot;&gt;&lt;/a&gt;&lt;center&gt;理论&lt;/center&gt;&lt;/h1&gt;&lt;p&gt;预分频寄存器(TIMx_PSC)：由于时钟源为：72MHz，T &amp;#x3D; 1&amp;#x2F;f &amp;#x3D</summary>
      
    
    
    
    <category term="32单片机" scheme="http://example.com/categories/32%E5%8D%95%E7%89%87%E6%9C%BA/"/>
    
    
    <category term="32单片机" scheme="http://example.com/tags/32%E5%8D%95%E7%89%87%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>3.串口(UART)</title>
    <link href="http://example.com/post/2c4c3bc3.html"/>
    <id>http://example.com/post/2c4c3bc3.html</id>
    <published>2024-08-05T10:02:46.000Z</published>
    <updated>2024-08-18T13:38:53.248Z</updated>
    
    <content type="html"><![CDATA[<p>串口理论部分可看51部分：<a href="https://blog.csdn.net/qq_65047384/article/details/140470283">链接</a></p><p>数据帧 &#x3D; 帧头(2字节，例如AA、BB) + 数据长度（2字节）+ 数据 + CRC16校验（2字节） + 帧尾（2字节）</p><p>回调函数在：stm32f1xx_it.c里找对应的函数转进入里面找</p><p>中断函数：stm32f1xx_hal_uart.c（别的只是uart不同）</p><h1 id="代码编写"><a href="#代码编写" class="headerlink" title="代码编写"></a><center>代码编写</center></h1><p>串口一发送命令控制LED灯(PB5、PE5)</p><h2 id="LED灯、串口、串口打印浮点数据、串口重定向配置"><a href="#LED灯、串口、串口打印浮点数据、串口重定向配置" class="headerlink" title="LED灯、串口、串口打印浮点数据、串口重定向配置"></a><center>LED灯、串口、串口打印浮点数据、串口重定向配置</center></h2><p>LED灯配置请看：<a href="https://d3iiz.top/post/adb202b7.html">链接</a></p><p>串口配置：</p><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic1/img/202408061554189.WebP" alt="串口配置" style="zoom:33%;"><p>配置串口中断NVIC(嵌套向量中断控制器)</p><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic1/img/202408061555432.WebP" alt="配置中断NVIC" style="zoom:33%;"><p>配置DMA：</p><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic1/img/202408061554276.WebP" alt="配置DMA" style="zoom: 33%;"><p>Cube IDE中串口打印浮点数据配置方法(<a href="https://blog.csdn.net/caihaitao2000/article/details/112469098">参考</a>)：进入“Project→Properties”；显示界面如下。按照图片中的设置完成即可！</p><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic1/img/202408061554668.WebP" alt="打印浮点数配置" style="zoom: 33%;"><p>串口重定向配置：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">uint8_t</span> u_buf[<span class="number">256</span>];<span class="comment">//usart.c,24行</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span><span class="comment">//usart.h,32行</span></span></span><br><span class="line"><span class="keyword">extern</span> <span class="type">uint8_t</span> u_buf[<span class="number">256</span>];<span class="comment">//usart.h，38行</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> printf(...)  HAL_UART_Transmit(&amp;huart1, (uint8_t *)u_buf, sprintf((char*)u_buf, __VA_ARGS__), 0xffff)<span class="comment">//usart.h，39行</span></span></span><br></pre></td></tr></table></figure><h2 id="轮询方式"><a href="#轮询方式" class="headerlink" title="轮询方式"></a><center>轮询方式</center></h2><p>缺点：</p><p>&ensp;&ensp;&ensp;&ensp;必须要等待数据发送完或者等待时间超时，代码才会往下走</p><p>&ensp;&ensp;&ensp;&ensp;必须要等待数据接收到固定的字节长度，超时，代码才往下走</p><h3 id="Cube-IDE代码"><a href="#Cube-IDE代码" class="headerlink" title="Cube IDE代码"></a><center>Cube IDE代码</center></h3><p>mian.c</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* USER CODE BEGIN Includes */</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span><span class="comment">//26行</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span><span class="comment">//27</span></span></span><br><span class="line"><span class="comment">/* USER CODE END Includes */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* USER CODE BEGIN PV */</span></span><br><span class="line"><span class="type">uint8_t</span> UART_Recv[<span class="number">5</span>];<span class="comment">//48行</span></span><br><span class="line"><span class="type">char</span> UART_Str[<span class="number">30</span>];<span class="comment">//49行</span></span><br><span class="line"><span class="comment">/* USER CODE END PV */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//参数1：UART 模块的配置信息的指针,参数2：数据缓冲区的指针，参数3：接收字节长度，参数4：接收超时时间(单位为毫秒)</span></span><br><span class="line">HAL_UART_Receive(&amp;huart1, UART_Recv, <span class="number">4</span>, <span class="number">1000</span>);<span class="comment">//接收数据函数</span></span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">strcmp</span>(<span class="string">&quot;LED1&quot;</span>, (<span class="type">char</span> *)UART_Recv) == <span class="number">0</span>)<span class="comment">//字符串比较函数</span></span><br><span class="line">&#123;</span><br><span class="line">HAL_GPIO_TogglePin(LED1_GPIO_Port, LED1_Pin);</span><br><span class="line"><span class="built_in">memset</span>(UART_Recv,<span class="string">&#x27;\0&#x27;</span>,<span class="number">5</span>);<span class="comment">//替换字符函数，常用于清除指定空间</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!<span class="built_in">strcmp</span>(<span class="string">&quot;LED2&quot;</span>, (<span class="type">char</span> *)UART_Recv))<span class="comment">//字符串比较函数</span></span><br><span class="line">&#123;</span><br><span class="line">HAL_GPIO_TogglePin(LED2_GPIO_Port, LED2_Pin);</span><br><span class="line"><span class="built_in">memset</span>(UART_Recv,<span class="string">&#x27;\0&#x27;</span>,<span class="number">5</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">sprintf</span>(UART_Str, <span class="string">&quot;%f\n&quot;</span>, <span class="number">666.6</span>);</span><br><span class="line"><span class="comment">//参数1：UART 模块的配置信息的指针,参数2：发送的字符串或字符数组，参数3：发送字节长度，参数4：接收超时时间(单位为毫秒)</span></span><br><span class="line">HAL_UART_Transmit(&amp;huart1, (<span class="type">char</span> *)UART_Str, <span class="built_in">strlen</span>(UART_Str), <span class="number">1000</span>);<span class="comment">//发送数据</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;xinzai\n&quot;</span>);<span class="comment">//配置串口重定向后才可使用</span></span><br></pre></td></tr></table></figure><h2 id="中断-IT-方式"><a href="#中断-IT-方式" class="headerlink" title="中断(IT)方式"></a><center>中断(IT)方式</center></h2><h3 id="Cube-IDE代码-1"><a href="#Cube-IDE代码-1" class="headerlink" title="Cube IDE代码"></a><center>Cube IDE代码</center></h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">HAL_UART_RxCpltCallback(huart);<span class="comment">//stm32f1xx_hal_uart.c,3660行</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//stm32f1xx_hal_uart.c,2619行</span></span><br><span class="line">__weak <span class="type">void</span> <span class="title function_">HAL_UART_RxCpltCallback</span><span class="params">(UART_HandleTypeDef *huart)</span><span class="comment">//中断回调函数</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>main.c</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* USER CODE BEGIN Includes */</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span><span class="comment">//26行</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span><span class="comment">//27行</span></span></span><br><span class="line"><span class="comment">/* USER CODE END Includes */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* USER CODE BEGIN PV */</span></span><br><span class="line"><span class="type">uint8_t</span> UART_Recv_IT[<span class="number">5</span>];<span class="comment">//48行</span></span><br><span class="line"><span class="type">char</span> UART_Str[<span class="number">30</span>];<span class="comment">//49行</span></span><br><span class="line"><span class="comment">/* USER CODE END PV */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* USER CODE BEGIN 2 */</span></span><br><span class="line"><span class="comment">//参数1：UART 模块的配置信息的指针,参数2：数据缓冲区的指针，参数3：接收字节长度</span></span><br><span class="line">HAL_UART_Receive_IT(&amp;huart1, UART_Recv_IT, <span class="number">4</span>);<span class="comment">//串口中断接收函数，95行</span></span><br><span class="line"><span class="comment">/* USER CODE END 2 */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//while函数里</span></span><br><span class="line"><span class="built_in">sprintf</span>(UART_Str, <span class="string">&quot;%d\n&quot;</span>, <span class="number">666</span>);<span class="comment">//102</span></span><br><span class="line">HAL_UART_Transmit_IT(&amp;huart1, UART_Str, <span class="built_in">strlen</span>(UART_Str));<span class="comment">//串口中断发送函数,103</span></span><br><span class="line">HAL_Delay(<span class="number">1000</span>);<span class="comment">//104</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//151行开始</span></span><br><span class="line"><span class="comment">/* USER CODE BEGIN 4 */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">HAL_UART_RxCpltCallback</span><span class="params">(UART_HandleTypeDef *huart)</span><span class="comment">//串口中断接收触发函数</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(huart == &amp;huart1)<span class="comment">//判断传进来的串口是哪个</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">strcmp</span>(<span class="string">&quot;LED1&quot;</span>, (<span class="type">char</span> *)UART_Recv_IT) == <span class="number">0</span>)<span class="comment">//字符串比较函数</span></span><br><span class="line">&#123;</span><br><span class="line">  HAL_GPIO_TogglePin(LED1_GPIO_Port, LED1_Pin);</span><br><span class="line">  <span class="built_in">memset</span>(UART_Recv_IT,<span class="string">&#x27;\0&#x27;</span>,<span class="number">5</span>);<span class="comment">//替换字符函数，常用于清除指定空间</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!<span class="built_in">strcmp</span>(<span class="string">&quot;LED2&quot;</span>, (<span class="type">char</span> *)UART_Recv_IT))<span class="comment">//字符串比较函数</span></span><br><span class="line">&#123;</span><br><span class="line">  HAL_GPIO_TogglePin(LED2_GPIO_Port, LED2_Pin);</span><br><span class="line">  <span class="built_in">memset</span>(UART_Recv_IT,<span class="string">&#x27;\0&#x27;</span>,<span class="number">5</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//因为只能接受一次串口中断，所以在串口中断触发函数需要重新调用</span></span><br><span class="line">HAL_UART_Receive_IT(&amp;huart1, UART_Recv_IT, <span class="number">4</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* USER CODE END 4 */</span></span><br></pre></td></tr></table></figure><h2 id="空闲中断-IDLE-DMA"><a href="#空闲中断-IDLE-DMA" class="headerlink" title="空闲中断(IDLE) + DMA"></a><center>空闲中断(IDLE) + DMA</center></h2><p>不受接收字符长度影响，可以随意接收字符长度并判断，DMA会触发中断</p><p>空闲状态：在多个字节传输结束后，通信线路将会维持高电平，这个状态称为空闲状态（没有数据传输时的空闲状态，数据传输刚结束的空闲状态）</p><p>空闲中断产生条件：在数据传输过程中，当CPU检测到通信线路处于空闲状态时，且空闲状态的持续时间大于一个字节传输时间时，空闲状态标志IDLE将由硬件置1，产生空闲中断</p><h3 id="Cube-IDE代码-2"><a href="#Cube-IDE代码-2" class="headerlink" title="Cube IDE代码"></a><center>Cube IDE代码</center></h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//stm32f1xx_hal_uart.h,2710行</span></span><br><span class="line">__weak <span class="type">void</span> <span class="title function_">HAL_UARTEx_RxEventCallback</span><span class="params">(UART_HandleTypeDef *huart, <span class="type">uint16_t</span> Size)</span><span class="comment">//空闲中断接收回调函数</span></span><br></pre></td></tr></table></figure><p>main.c</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* USER CODE BEGIN Includes */</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span><span class="comment">//27行</span></span></span><br><span class="line"><span class="comment">/* USER CODE END Includes */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* USER CODE BEGIN PD */</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> RECV_Size 100<span class="comment">//37行</span></span></span><br><span class="line"><span class="comment">/* USER CODE END PD */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* USER CODE BEGIN 2 */</span></span><br><span class="line">HAL_UARTEx_ReceiveToIdle_DMA(&amp;huart1, UART_Recv_IDLE, RECV_Size);<span class="comment">//空闲中断接收函数,94行</span></span><br><span class="line"><span class="comment">//数据接收RECV_Size一半时会重新触发中断，需要关闭DMA接收中断使能</span></span><br><span class="line">HAL_NVIC_DisableIRQ(DMA1_Channel5_IRQn);<span class="comment">//96行</span></span><br><span class="line"><span class="comment">/* USER CODE END 2 */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//150行</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">HAL_UARTEx_RxEventCallback</span><span class="params">(UART_HandleTypeDef *huart, <span class="type">uint16_t</span> Size)</span><span class="comment">//空闲中断接收触发函数</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(huart == &amp;huart1)<span class="comment">//判断传进来的串口是哪个</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">strcmp</span>(<span class="string">&quot;LED1&quot;</span>, (<span class="type">char</span> *)UART_Recv_IDLE) == <span class="number">0</span>)<span class="comment">//字符串比较函数</span></span><br><span class="line">&#123;</span><br><span class="line">  HAL_GPIO_TogglePin(LED1_GPIO_Port, LED1_Pin);</span><br><span class="line">  <span class="built_in">memset</span>(UART_Recv_IDLE,<span class="string">&#x27;\0&#x27;</span>,Size);<span class="comment">//替换字符函数，常用于清除指定空间</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!<span class="built_in">strcmp</span>(<span class="string">&quot;LED2ON&quot;</span>, (<span class="type">char</span> *)UART_Recv_IDLE))<span class="comment">//字符串比较函数</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="comment">//HAL_GPIO_TogglePin(LED2_GPIO_Port, LED2_Pin);</span></span><br><span class="line">  HAL_GPIO_WritePin(LED2_GPIO_Port, LED2_Pin, <span class="number">0</span>);</span><br><span class="line">  <span class="built_in">memset</span>(UART_Recv_IDLE,<span class="string">&#x27;\0&#x27;</span>,Size);</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(!<span class="built_in">strcmp</span>(<span class="string">&quot;LED2OFF&quot;</span>, (<span class="type">char</span> *)UART_Recv_IDLE))</span><br><span class="line">&#123;</span><br><span class="line">HAL_GPIO_WritePin(LED2_GPIO_Port, LED2_Pin, <span class="number">1</span>);</span><br><span class="line"><span class="built_in">memset</span>(UART_Recv_IDLE,<span class="string">&#x27;\0&#x27;</span>,Size);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//因为只能接受一次串口中断，所以在串口中断触发函数需要重新调用</span></span><br><span class="line">HAL_UARTEx_ReceiveToIdle_DMA(&amp;huart1, UART_Recv_IDLE, RECV_Size);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;串口理论部分可看51部分：&lt;a href=&quot;https://blog.csdn.net/qq_65047384/article/details/140470283&quot;&gt;链接&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;数据帧 &amp;#x3D; 帧头(2字节，例如AA、BB) + 数据长度（2字节）+ </summary>
      
    
    
    
    <category term="32单片机" scheme="http://example.com/categories/32%E5%8D%95%E7%89%87%E6%9C%BA/"/>
    
    
    <category term="32单片机" scheme="http://example.com/tags/32%E5%8D%95%E7%89%87%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>完美解决443端口被vmware占用的问题</title>
    <link href="http://example.com/post/b94c2cf2.html"/>
    <id>http://example.com/post/b94c2cf2.html</id>
    <published>2024-08-04T14:54:51.000Z</published>
    <updated>2024-08-16T09:48:30.797Z</updated>
    
    <content type="html"><![CDATA[<p> 第一步，打开虚拟机，找到首选项</p><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic1/img/202408042305038.WebP" alt="进入首选项" style="zoom:50%;"><p>第二步，选择共享虚拟机，修改端口号，保存</p><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic1/img/202408042304709.WebP" alt="修改端口" style="zoom:50%;">]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt; 第一步，打开虚拟机，找到首选项&lt;/p&gt;
&lt;img src=&quot;https://cdn.jsdelivr.net/gh/xinzai-x/MyPic1/img/202408042305038.WebP&quot; alt=&quot;进入首选项&quot; style=&quot;zoom:50%;&quot;&gt;

&lt;p&gt;第</summary>
      
    
    
    
    <category term="Windows使用技巧" scheme="http://example.com/categories/Windows%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/"/>
    
    
    <category term="解决443端口被vmware占用" scheme="http://example.com/tags/%E8%A7%A3%E5%86%B3443%E7%AB%AF%E5%8F%A3%E8%A2%ABvmware%E5%8D%A0%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title>win10桌面图标变白</title>
    <link href="http://example.com/post/a06b5fda.html"/>
    <id>http://example.com/post/a06b5fda.html</id>
    <published>2024-08-04T14:54:31.000Z</published>
    <updated>2024-08-16T09:48:57.287Z</updated>
    
    <content type="html"><![CDATA[<p> 1、双击打开此电脑，点击【查看】，勾选<strong>【隐藏的项目】</strong></p><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic1/img/202408042300201.WebP" alt="关闭隐藏" style="zoom:50%;"><p>2、同时按 【Win + R】键打开运行，输入<strong>【%localappdata%】</strong>回车确定</p><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic1/img/202408042257970.WebP" alt="打开命令" style="zoom:50%;"><p>3、右键选择删除<strong>lconCache.db</strong>文件</p><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic1/img/202408042257244.WebP" alt="删除文件" style="zoom: 67%;"><p>4、同时按【Shift + Ctrl + Esc】键打开任务管理器，找到<strong>Windows 资源管理器</strong>，右键选择重新启动</p><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic1/img/202408042258681.WebP" alt="资源管理器" style="zoom:50%;">]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt; 1、双击打开此电脑，点击【查看】，勾选&lt;strong&gt;【隐藏的项目】&lt;/strong&gt;&lt;/p&gt;
&lt;img src=&quot;https://cdn.jsdelivr.net/gh/xinzai-x/MyPic1/img/202408042300201.WebP&quot; alt=&quot;关闭隐</summary>
      
    
    
    
    <category term="Windows使用技巧" scheme="http://example.com/categories/Windows%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/"/>
    
    
    <category term="win10桌面图标变白" scheme="http://example.com/tags/win10%E6%A1%8C%E9%9D%A2%E5%9B%BE%E6%A0%87%E5%8F%98%E7%99%BD/"/>
    
  </entry>
  
  <entry>
    <title>通过 Cloudflare 和 JsDelivr 免费加速博客 GitHub 图床等静态资源</title>
    <link href="http://example.com/post/3e643b17.html"/>
    <id>http://example.com/post/3e643b17.html</id>
    <published>2024-08-03T09:25:05.000Z</published>
    <updated>2024-08-16T09:54:24.195Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="078b64e52b07dca765079b53ebef0af6f06bdafb94d031b98679f208c935c8b9">d0082e95ce53ece4a4c0f5b8a727fc3f962b5c64e8654922e002aaab68a80fee44659e4ed481944adba9187c18a549696eb845bfa6a1cd0190d87af65317bf0556e6003eaf2e57f4faffd9d5095487d749f4baae378a311e09dcce66eeab912ac4701baa5dd63ec753c525efac934109102b75663fa19d2d1b179fe6a5bb9adbb69749d9a983dad87682f2332eff7dff76347dfd37b7626947f2ae9e1a239a3b15f8504a5cbf1a27530c16e0e1ff89a2848b86074ea4d6d304f104026e796a57d932698fe0f67e0078e91f3e72e15c2b1dc34c0123be4fe4f7273e6355fb018dadde48c0f9e308629f0a8d1de2bd0f017d5f2283d25fcb967dcfacf686c1ec607a3f18edcfdec9a61386b9957d0b959c9cf373de4d46657725c081d28313b42f3127612a27b06fa4e81489d37f86e30df43266280b207184a2de27af22c257b28c68008d73f3020982c72f87bf8a11e627ade32279fada559e38954d534a7668c06c8f1a89c598d799d5690acc6d621bd4b6dcb7043c6852ead49d8f1a5097f563b168dedd5e34dd3324e16fa8f624adaef0047a3bc0422febc28e6470d318cbf21c0a2df3d7b76948e436c5723cbb5aafa639f810ae257c8c4a39de99abf541ae3b69316187d2b3cf65e5059d83b79056f76e95ac47a3514dc0ba02cc5de07a7d0c99199d3548da29b2c05498ee27164ea50af3d780fa538fab36da198892c77c0f4538a06340f5c2ecce98487810962657452c84b519a1f5a0750198bd0a5234778ae451d476dbc40388f0d655c21acf381e04b6c32df16831ee1ba04bb54df50f64c50581c30118fa2ea6b19fe7d7390d309017725d50e733f809b242adc5c521fa8022a9493bbab4beac16206f88e3074ec10b6a632311e2a3061ae0f6d6c5f1d2e41a765e65aa1540cb72f97c2af5b4319e6e198521173fe6536defe4b2538e241b40b38d92945843a3c792eaeb77fb452ecde97dbfde700512a40aff0ecef38f1eec3485f8815dee1aba4c6dcc9bf2a531c6e95a46a5c7fd12a5b905ab3dbb4d5729c43a9cf3eeb2a544e7435d8fd3a7866857433e0cb09e8da127c80681a082a2bbdaaefb2a6f566481baff8eedcd2f15052f82051e1714f98aa6e16c09d83f2b67a1100737604af999f1c8a306799e9aeab1767bc53b8234f63aecf55d79611c2900ec42524c69f83f93833327628ba76fa048de7f9222bfa5c60704097fc48ea6a78ff91d5ccd1e36b15ec98da4762e75181d045ddef12e1068970cd6c5c2f4257fa6d05a2f0f9bec3095e70114a0c5c69020e20cf7438d7746537addcdfaa73bd02a1ba06484d154a15e09d30bc0493ff309d7a63ad32fec3e68d7b5366f97e0929b485939b81cbc6c15a54a8d950883cccc4786c243a49bd6502957af66732a314ddcafe8ce81b284d4fad4c2510bdfb59bd94fc7c93d64909fcd2b64e10c1c233b8a14dc5a3fe9540e75891331ed55b53c2a309f33468a55f95a6d64b894da2b8aba16b9a550e366581deb6538f496119ca4bb966f6bd9b7d369630a4cd6bcc787584d50cd3bb0caae5902dc4c9a09f4df24d59f6544009d1dba5313901283461d692e681f853a8f737de1113c51fc8b1e2ce5a05ef6c9f8df9fd1b8bce5d3d6a466c6ba6b6b8e1349cc1eebfcf77fe096e98b406e0e05973ace3e9c2fe9192b0158dbb682dfcd0b89252fb811ef525ca83b57d1993a65e5d1c3c15f33aedb34643e688e2d3e047a9fea1702cc47a8756cf0e432ecc20a4bbe149587b823d3777fbdbe5f4655ca95e8eac90ad20c6fb84608c22582e85b025ba58c5b9bfc63603c08232c452d1f6c4e565917a3e1d77b396dd7506f9526fca0d552baeb1229fee64d2da9c560e1291c894fc5faa5b9ab5bf8d3aa2d282349aab4586b959f3fe4b6e028a7f55ab9224ef7209f18c64594cd75db9fa0136f184e9b363bc71b4e366d9493570ab0574c3e3ddb7bfb30c84557e8f28ebad97be4aab5d2ce4ddad915b9024f9033393a7c8608bac22f9127798786e62c9d2f2273cc47c76469ea218995dbd965d0995df26036bccfc2cccae9a18f076732abdeba0e3c53b00f57746f5993dbfe183d2b9ac4457d83c7d46ac89bd77b7f266667c9ca045c147b28f49c0ad4c1d86e0a4d9a87516d75794cb1f4101f8e8dc1df2a9e09e4607b064f7af48936a9411e35607244ef52cacabe02f80a780c98416cd618727145af226dc18e41c2846c79204807f88880d423c0e910e2ec94423fa6000da47bbb4016af0b624188f21229c5fe5dbc018f54b8ae119c4478c2963b7e9872bdf5ca676ad4999c4455c426ee4a1b832022c1ed28931c6a09977cfe817e93fa76e00cd4b2fb0ba488cef8312df8effc388b1d0c0a135e2e88f819cd745e4faf7665b773049de5837b61391acc32e56ff4633dc4f030d7cd2d8ed80e54d01903fa2694eb25eee00e2cd8b44b37c7f4ee5df4ea10da6997c434cca6369dd0a20af2402bfbac968e8736cfe9037bf36b1b0c6b28d8efc7f70e0be8b4538a0713dc99cf13e053d9b76853fd2c522cf5a68a839003f14abb7f8f94071637cb36bb63867fd21b11e4fd51cc306844e91130971d777c10d98a753838d143fd5a157bbb71624fb8be77f893df3811f731d36dbc1d143115e92aa0c6299d7f0305a6d46e2bba94403b6025a03b070704f3db0cf0e210cd7c5b0da844c2d5fe97bf267855573471a7986fd89b5d957d1911bf28dafc9240abe29c38f0bb950c18851a3e860b86c0ee6466cdc978bab9eaf9ab1dc3902544834e690612f9c028bebe97e2c615c5eaff309d4020377727abffceafa419e6d42c37cb9d701f89de6a9ee6690d17300a4f5bce464aa131b75d2aab5b0adf689dcc6dbb14264bcc8c76122e65229b9a0976c97b066d0e62f2e93ab67bad8d6f607f1152d898d10eae28cf6f21a2459a9ebae2fb872950d063a763de56dcc7c4353423b4fbbe27d49998eb4a95032c5dc41dd71a4090ee295878f45698781f2d08e8231984018afdf708f89a5b7a8980fb4c6e84101b42514a69ff3ad8751084db6499dd75d791125bd4d66df11608297589c727c0456dd581c3267e4065233d54531b88bc7968beb672d6befc2121bbb757d9750612f2a6086c2e97c1f1de1bf3908dd45b162301cef1d72baf477d838bed6ce7241b3c0ef7e976fe39f4363c43ae2b58ad5c9281955259e01c9b0397ec41d455003d8eef4a78444d81bc80745c74f94d6313e691caf4020649d8751d4451549181435312386c913963327d0c7dfec375d359a163b2dc21940fcb2e5c3ed0693d902873c542eb989d1406f3179d672c1525d1b2ef6ddcf6c7c739ee9b459d61f2961e65e74050d93f4fef69e0702874f143adf8b85cfae5242bc715dc52d434317a2a3410623b3ea176e5d3f2b182fd3811c56d0b1a0b1b0ce15510120f57f8ee99fd2db54ac166b37f28701dfae21e80b28b814281c0f94afad1f974774c2daaee6274091adfd4363e85d0cf34155cbcd54473592dd4bc54c0f747d58857e8d8c301bbde46c7c4f1adcbc6cb3406de14eaa6aa26696505f42336e6fa1f4a9aeb2565ba9e53cf940d84a4c2e9da20adc69ac991a9c8a265b9f87b2b6a7234ee3c161742d116979f14c9fb8ab8354e3083c52769cca654cab912eda356db390260b982f28a2d8b97a956a6502dfc2770e4fe19af768c57349bfdf41a1dfe9ea84a144ff18662a8eb54bbe977ea8ac9b7eddb390641e8bb8aeedcc8360043ccc5f1122a0de0745b59af258f6fc45b0dcfd50460738630f35bf9ca988cc7feeed746b4a592905947ce40a9bfc7f822c2404447dd49d009b9f90636336dc9693f3668b6fdc465bc3b2fbc14c3f36331a119f8c1cce5bdcb2d601155bb740313cb9a35cba719f1f58e997edb7250345fd877352618aed4d7c5b9bab1c5b39b33d5360a648dd6634e250223241558cc362ed261553457b801ddce74045d4d7c8a9f9c043c4c7bf0d9410c0072886c67e64dabeb0ce665f5fd265eb319cfaa0826f27ccbd75518090c3e2b7bdd43d09184cb41dfeb00316a125d1023ff4f29547a17b0dd47a34d30200f8cbd02cbf1be7f9affe27bd2ab9862269ea5dc9cd53bf1f861f684b62b6fbd4b2a6a7db50db1aba24f6b8e07810fa3e851857656f9906309ea57a818d85e09d277516b442d8f8cb70e34080660256b2244bff59ba2e3f559ad371122de9c97f9bea3dc33df8d6a69b965a542cf916478d137f2eb88f8e01c281cf8e9b6c8f4757679cf02b4badd0a37379381151d3f8de7f5921014925e3c94bdc956cbc8813fcf6bb398a7e3c5eee8c9073c68b7b52f89067f56279be5e97009900ce20d3f8ee96516451ec419e92bb893103171760eaff599958222d99575f9f12fd5e0c95b225fb3447708633bd8b4d61b972cf2ea7e1905e079c4260876df8ffe94b21c81a49490b8ddeb7da9f03001b5aa75e9aff54831820e0f3b95695bcd4b1015e886c8615c97eb3824c2e103dcabd1e7a61411fd6ec66cd2e24531823a876c2ded92e245250cba4522496c5c0cc1168c5fc5b54e9d7fd2b500a3a9e58ba1b16f63a6109b1bd85fc04b7882f062e456193fe4f041c35f0dd9713ef9a49d949ea221d7ae3a7ce8e908a438564e9d4aa3f79c49ba4b9eee3e004829de6da3d3ae7279a027e36ec173ba446c7602efb2608784011889fd0aaa0acdcbb39d2d974aa429a2d43caf767b1f3e49a24f9e783f92eaccaf2c681776749c67985b019066190b1c5ae0dee4a9df99da0de9a0e2493bbf1cbd7e86af0ea78ef4faf3f9ee22e5efa09e8650b5636cdc4bbf214334777dcd6aa33fc9fc8c2d5ea2e29263d6b4ec3813a331e93e0289a354162d3afb910bdbebdfcef6907f1b50c574a79a56e2c6131c7104cd3a9538699a11cd351778bcab3d1ecb7d8562c449ce8aa46c73e9c1c27e77cb568f5d8aa7d035183da1e204ebf8aa5b7ef93eb4c8168ee37ebe626903d9dcbb443071e00680bda94dc744f0c8606edc9b9a646c6c6e7c68aa9c3c069f9ee516740c1f6ae906fe0b192a78162522d5afd435b2948c91041374942d635e46d906dbb0d1f77d0340e218bd6ccdcf1432f33bab1abbca122f1ad14172336554097880f86402811cc0be823845321f27ffa27fcf150215f110c19f002b1ec1e56af0d391b7511de2798a1566ce3b7a4d050b09506046f2abd16d30a2cd3b934eab1ebd61d3b8058f09653ea9a54d204dcbc1287ac3867a4425af481b6fc51ad7448c06907798e5d287b7d2bd58d1884cdd7d870148cae69626a0a79908a0da46f9d014ac7fcb</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">输入密码，查看文章。</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">这是一篇加密文章，内容可能是个人情感宣泄或者收费技术。如果你非常好奇，请与我联系。</summary>
    
    
    
    <category term="技术积累记录" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF%E7%A7%AF%E7%B4%AF%E8%AE%B0%E5%BD%95/"/>
    
    
    <category term="博客加速图床" scheme="http://example.com/tags/%E5%8D%9A%E5%AE%A2%E5%8A%A0%E9%80%9F%E5%9B%BE%E5%BA%8A/"/>
    
  </entry>
  
  <entry>
    <title>利用cloudflare加速github博客访问</title>
    <link href="http://example.com/post/b7e3ace9.html"/>
    <id>http://example.com/post/b7e3ace9.html</id>
    <published>2024-08-03T09:24:43.000Z</published>
    <updated>2024-08-16T14:43:35.728Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="eea5390d2cea6617ab1449d26b7e88606d4ae4681b202d834b9663828e509382"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">输入密码，查看文章。</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">这是一篇加密文章，内容可能是个人情感宣泄或者收费技术。如果你非常好奇，请与我联系。</summary>
    
    
    
    <category term="技术积累记录" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF%E7%A7%AF%E7%B4%AF%E8%AE%B0%E5%BD%95/"/>
    
    
    <category term="加速github博客访问" scheme="http://example.com/tags/%E5%8A%A0%E9%80%9Fgithub%E5%8D%9A%E5%AE%A2%E8%AE%BF%E9%97%AE/"/>
    
  </entry>
  
  <entry>
    <title>2.外部中断(EXTI)</title>
    <link href="http://example.com/post/eb0bc4a3.html"/>
    <id>http://example.com/post/eb0bc4a3.html</id>
    <published>2024-08-03T09:21:42.000Z</published>
    <updated>2024-08-18T13:37:25.385Z</updated>
    
    <content type="html"><![CDATA[<h1 id="理论"><a href="#理论" class="headerlink" title="理论"></a><center>理论</center></h1><p>NVIC：嵌套向量中断控制器（<a href="https://blog.csdn.net/m0_74761015/article/details/136269042">解释教程</a>）</p><p>外部通用中断线(<code>EXTI0~EXTI15</code>)：每个GPIO设置成中断模式，与中断控制器连接的线</p><h2 id="外部中断触发方式"><a href="#外部中断触发方式" class="headerlink" title="外部中断触发方式"></a><center>外部中断触发方式</center></h2><p>上升沿触发、下降沿触发、双边沿触发</p><h2 id="外部中断触发函数"><a href="#外部中断触发函数" class="headerlink" title="外部中断触发函数"></a><center>外部中断触发函数</center></h2><p>在stm32f1xx_it.c文件里(大概204行)</p><table><thead><tr><th align="center">中断触发函数</th></tr></thead><tbody><tr><td align="center">EXTI0_IRQHandler</td></tr><tr><td align="center">EXTI1_IRQHandler</td></tr><tr><td align="center">EXTI2_IRQHandler</td></tr><tr><td align="center">EXTI3_IRQHandler</td></tr><tr><td align="center">EXTI4_IRQHandler</td></tr><tr><td align="center">EXTI9_5_IRQHandler</td></tr><tr><td align="center">EXTI15_10_IRQHandler</td></tr></tbody></table><h2 id="解析"><a href="#解析" class="headerlink" title="解析"></a><center>解析</center></h2><p>解析初始化中断过程</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">  <span class="comment">//gpio.c中58</span></span><br><span class="line">  <span class="comment">/*Configure GPIO pins : PEPin PEPin */</span></span><br><span class="line">  GPIO_InitStruct.Pin = EXTI_Key1_Pin|EXTI_Key2_Pin;</span><br><span class="line">  GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;</span><br><span class="line">  GPIO_InitStruct.Pull = GPIO_PULLUP;</span><br><span class="line">  HAL_GPIO_Init(GPIOE, &amp;GPIO_InitStruct);<span class="comment">//将上面三行代码的数据传入这个函数解析初始化</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//stm32f1xx_hal_gpio.c中286</span></span><br><span class="line"><span class="comment">/*--------------------- EXTI Mode Configuration ------------------------*/</span></span><br><span class="line"><span class="comment">/* Configure the External Interrupt or event for the current IO */</span></span><br><span class="line"><span class="keyword">if</span> ((GPIO_Init-&gt;Mode &amp; EXTI_MODE) == EXTI_MODE)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">/* Enable AFIO Clock */</span></span><br><span class="line">__HAL_RCC_AFIO_CLK_ENABLE();<span class="comment">//打开复用时钟</span></span><br><span class="line">temp = AFIO-&gt;EXTICR[position &gt;&gt; <span class="number">2u</span>];</span><br><span class="line">CLEAR_BIT(temp, (<span class="number">0x0F</span>u) &lt;&lt; (<span class="number">4u</span> * (position &amp; <span class="number">0x03</span>u)));</span><br><span class="line">SET_BIT(temp, (GPIO_GET_INDEX(GPIOx)) &lt;&lt; (<span class="number">4u</span> * (position &amp; <span class="number">0x03</span>u)));</span><br><span class="line">AFIO-&gt;EXTICR[position &gt;&gt; <span class="number">2u</span>] = temp;<span class="comment">//把固定引脚设置成复用模式(如复用成外部中断)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//配置上升沿还是下降沿</span></span><br><span class="line"><span class="comment">/* Enable or disable the rising trigger */</span></span><br><span class="line"><span class="keyword">if</span> ((GPIO_Init-&gt;Mode &amp; RISING_EDGE) == RISING_EDGE)</span><br><span class="line">&#123;</span><br><span class="line">  SET_BIT(EXTI-&gt;RTSR, iocurrent);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">  CLEAR_BIT(EXTI-&gt;RTSR, iocurrent);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Enable or disable the falling trigger */</span></span><br><span class="line"><span class="keyword">if</span> ((GPIO_Init-&gt;Mode &amp; FALLING_EDGE) == FALLING_EDGE)</span><br><span class="line">&#123;</span><br><span class="line">  SET_BIT(EXTI-&gt;FTSR, iocurrent);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">  CLEAR_BIT(EXTI-&gt;FTSR, iocurrent);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Configure the event mask */</span></span><br><span class="line"><span class="keyword">if</span> ((GPIO_Init-&gt;Mode &amp; GPIO_MODE_EVT) == GPIO_MODE_EVT)</span><br><span class="line">&#123;</span><br><span class="line">  SET_BIT(EXTI-&gt;EMR, iocurrent);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">  CLEAR_BIT(EXTI-&gt;EMR, iocurrent);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//打开或关闭中断</span></span><br><span class="line"><span class="comment">/* Configure the interrupt mask */</span></span><br><span class="line"><span class="keyword">if</span> ((GPIO_Init-&gt;Mode &amp; GPIO_MODE_IT) == GPIO_MODE_IT)</span><br><span class="line">&#123;</span><br><span class="line">  SET_BIT(EXTI-&gt;IMR, iocurrent);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">  CLEAR_BIT(EXTI-&gt;IMR, iocurrent);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>中断实现过程</strong></p><ol><li>确认中断</li><li>清除中断标志位</li><li>执行中断回调函数</li></ol><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic1/img/202408041510330.WebP" alt="图示" style="zoom:50%;"><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//stm32f1xx_it.：大概204行</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">EXTI3_IRQHandler</span><span class="params">(<span class="type">void</span>)</span><span class="comment">//中断入口函数</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="comment">/* USER CODE BEGIN EXTI3_IRQn 0 */</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/* USER CODE END EXTI3_IRQn 0 */</span></span><br><span class="line">  HAL_GPIO_EXTI_IRQHandler(EXTI_Key1_Pin);<span class="comment">//在库函数不能写</span></span><br><span class="line">  <span class="comment">/* USER CODE BEGIN EXTI3_IRQn 1 */</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/* USER CODE END EXTI3_IRQn 1 */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">HAL_GPIO_EXTI_IRQHandler</span><span class="params">(<span class="type">uint16_t</span> GPIO_Pin)</span><span class="comment">//stm32f1xx_hal_gpio.c：大概546行</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="comment">/* EXTI line interrupt detected */</span></span><br><span class="line">  <span class="keyword">if</span> (__HAL_GPIO_EXTI_GET_IT(GPIO_Pin) != <span class="number">0x00</span>u)<span class="comment">//判断有没有中断触发(有:1,没:0)</span></span><br><span class="line">  &#123;</span><br><span class="line">    __HAL_GPIO_EXTI_CLEAR_IT(GPIO_Pin);<span class="comment">//若进来则为1，为1则清除中断标志位</span></span><br><span class="line">    HAL_GPIO_EXTI_Callback(GPIO_Pin);<span class="comment">//回调函数(Callback)，执行函数</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//stm32f1xx_hal_gpio.h中190</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __HAL_GPIO_EXTI_GET_IT(__EXTI_LINE__) (EXTI-&gt;PR &amp; (__EXTI_LINE__))<span class="comment">//挂起寄存器(EXTI_PR)(参考手册140) 有没有中断触发</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//stm32f1xx_hal_gpio.h中198</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __HAL_GPIO_EXTI_CLEAR_IT(__EXTI_LINE__) (EXTI-&gt;PR = (__EXTI_LINE__))<span class="comment">//赋值，(参考手册140)</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//调用这个函数，__weak：弱声明，若别文件也有相同的函数，优先调用没有弱声明</span></span><br><span class="line">__weak <span class="type">void</span> <span class="title function_">HAL_GPIO_EXTI_Callback</span><span class="params">(<span class="type">uint16_t</span> GPIO_Pin)</span><span class="comment">//stm32f1xx_hal_gpio.c：大概561行</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="comment">/* Prevent unused argument(s) compilation warning */</span></span><br><span class="line">  UNUSED(GPIO_Pin);</span><br><span class="line">  <span class="comment">/* <span class="doctag">NOTE:</span> This function Should not be modified, when the callback is needed,</span></span><br><span class="line"><span class="comment">           the HAL_GPIO_EXTI_Callback could be implemented in the user file</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>若相同有一个PA0设置了中断，别的PB0等等都不能设置成中断</p><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic1/img/202408041510079.WebP" alt="解析图" style="zoom:50%;"><h1 id="代码编写"><a href="#代码编写" class="headerlink" title="代码编写"></a><center>代码编写</center></h1><p>实验：按键PE3控制蜂鸣器(PB8)、按键PE4控制LED灯(PB5)</p><h2 id="LED灯、蜂鸣器、按键配置"><a href="#LED灯、蜂鸣器、按键配置" class="headerlink" title="LED灯、蜂鸣器、按键配置"></a><center>LED灯、蜂鸣器、按键配置</center></h2><p>LED灯、蜂鸣器配置，上一篇已经说过，<a href="https://d3iiz.top/post/adb202b7.html">地址</a></p><p>按键设置<code>下降沿触发</code>(也可上升沿触发)，GPIO Pull-up&#x2F;Pull-down：设置上拉，空闲状态为高电平</p><p>按键没按下时高电平，按下时有下降沿和上升沿，所以两个触发都可，按键这里是中断触发功能，不是GPIO输入功能</p><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic1/img/202408041510669.WebP" alt="按键设置图" style="zoom: 33%;"><p>配置NVIC(嵌套向量中断控制器)</p><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic1/img/202408041512291.WebP" alt="配置NVIC" style="zoom: 50%;"><p>调节不同中断优先级(数字越小优先级越高)</p><p>若抢占优先级相同，比较子优先级</p><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic1/img/202408041510564.WebP" alt="中断优先级" style="zoom:33%;"><p>调节多少bit对应代码在：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">HAL_Init();<span class="comment">//main.c(74)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//HAL_StatusTypeDef HAL_Init(void)中的</span></span><br><span class="line">HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);<span class="comment">//stm32f1xx_hal.c(157)</span></span><br></pre></td></tr></table></figure><h2 id="Cube-IDE代码"><a href="#Cube-IDE代码" class="headerlink" title="Cube IDE代码"></a><center>Cube IDE代码</center></h2><p>main.c：144行（在mian函数外任意一个 &#x2F;* USER CODE BEGIN  <em>&#x2F;  &#x2F;</em> USER CODE END  *&#x2F;中）</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">HAL_GPIO_EXTI_Callback</span><span class="params">(<span class="type">uint16_t</span> GPIO_Pin)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//若需要延时需要将延时中断优先级比外部中断优先级高，优先级高才可以打断低优先级</span></span><br><span class="line">HAL_Delay(<span class="number">10</span>);</span><br><span class="line"><span class="keyword">if</span>(HAL_GPIO_ReadPin(EXTI_Key1_GPIO_Port, EXTI_Key1_Pin) == <span class="number">0</span>)<span class="comment">//读引脚，相同=0,不同=1</span></span><br><span class="line">&#123;</span><br><span class="line">HAL_GPIO_TogglePin(BEEP_GPIO_Port, BEEP_Pin);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(HAL_GPIO_ReadPin(EXTI_Key2_GPIO_Port, EXTI_Key2_Pin) == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">HAL_GPIO_TogglePin(LED1_GPIO_Port, LED1_Pin);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>中断处理程序要少用延时的原因<br>中断处理的要求是即时处理，尽快退出。如果在中断中使用延时函数或者使用IO阻塞函数，会影响到系统的实时性。如果下次中断来临，延时或者阻塞还没结束，那么就永远在中断里死循环了。<br>因此，对于中断处理程序的要求是：<br>&ensp;&ensp;&ensp;&ensp;短小精悍，不要处理过多任务<br>&ensp;&ensp;&ensp;&ensp;不使用延时函数或者IO阻塞的函数</p></blockquote><h2 id="Keil代码"><a href="#Keil代码" class="headerlink" title="Keil代码"></a><center>Keil代码</center></h2><p>需要修改的地方如下：</p><p>mian.c(144)</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">HAL_GPIO_EXTI_Callback</span><span class="params">(<span class="type">uint16_t</span> GPIO_Pin)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//若需要延时需要将延时中断优先级比外部中断优先级高，优先级高才可以打断低优先级</span></span><br><span class="line">HAL_Delay(<span class="number">10</span>);</span><br><span class="line"><span class="keyword">if</span>(HAL_GPIO_ReadPin(EXTI_Key1_GPIO_Port, EXTI_Key1_Pin) == <span class="number">0</span>)<span class="comment">//读引脚，相同=0,不同=1</span></span><br><span class="line">&#123;</span><br><span class="line">HAL_GPIO_TogglePin(BEEP_GPIO_Port, BEEP_Pin);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(HAL_GPIO_ReadPin(EXTI_Key2_GPIO_Port, EXTI_Key2_Pin) == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">HAL_GPIO_TogglePin(LED1_GPIO_Port, LED1_Pin);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>main.h(60)</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> EXTI_Key1_Pin GPIO_PIN_3</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> EXTI_Key1_GPIO_Port GPIOE</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> EXTI_Key1_EXTI_IRQn EXTI3_IRQn</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> EXTI_Key2_Pin GPIO_PIN_4</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> EXTI_Key2_GPIO_Port GPIOE</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> EXTI_Key2_EXTI_IRQn EXTI4_IRQn</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LED1_Pin GPIO_PIN_5</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LED1_GPIO_Port GPIOB</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> BEEP_Pin GPIO_PIN_8</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> BEEP_GPIO_Port GPIOB</span></span><br></pre></td></tr></table></figure><p>gpio.c(42)</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">MX_GPIO_Init</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">  GPIO_InitTypeDef GPIO_InitStruct = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* GPIO Ports Clock Enable */</span></span><br><span class="line">  __HAL_RCC_GPIOE_CLK_ENABLE();</span><br><span class="line">  __HAL_RCC_GPIOA_CLK_ENABLE();</span><br><span class="line">  __HAL_RCC_GPIOB_CLK_ENABLE();</span><br><span class="line"></span><br><span class="line">  <span class="comment">/*Configure GPIO pin Output Level */</span></span><br><span class="line">  HAL_GPIO_WritePin(LED1_GPIO_Port, LED1_Pin, GPIO_PIN_SET);</span><br><span class="line"></span><br><span class="line">  <span class="comment">/*Configure GPIO pin Output Level */</span></span><br><span class="line">  HAL_GPIO_WritePin(BEEP_GPIO_Port, BEEP_Pin, GPIO_PIN_RESET);</span><br><span class="line"></span><br><span class="line">  <span class="comment">/*Configure GPIO pins : PEPin PEPin */</span></span><br><span class="line">  GPIO_InitStruct.Pin = EXTI_Key1_Pin|EXTI_Key2_Pin;</span><br><span class="line">  GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;</span><br><span class="line">  GPIO_InitStruct.Pull = GPIO_PULLUP;</span><br><span class="line">  HAL_GPIO_Init(GPIOE, &amp;GPIO_InitStruct);</span><br><span class="line"></span><br><span class="line">  <span class="comment">/*Configure GPIO pins : PBPin PBPin */</span></span><br><span class="line">  GPIO_InitStruct.Pin = LED1_Pin|BEEP_Pin;</span><br><span class="line">  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;</span><br><span class="line">  GPIO_InitStruct.Pull = GPIO_NOPULL;</span><br><span class="line">  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;</span><br><span class="line">  HAL_GPIO_Init(GPIOB, &amp;GPIO_InitStruct);</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* EXTI interrupt init*/</span></span><br><span class="line">  HAL_NVIC_SetPriority(EXTI3_IRQn, <span class="number">5</span>, <span class="number">0</span>);</span><br><span class="line">  HAL_NVIC_EnableIRQ(EXTI3_IRQn);</span><br><span class="line"></span><br><span class="line">  HAL_NVIC_SetPriority(EXTI4_IRQn, <span class="number">5</span>, <span class="number">0</span>);</span><br><span class="line">  HAL_NVIC_EnableIRQ(EXTI4_IRQn);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>stm32f1xx_hal_it.c(204)</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">EXTI3_IRQHandler</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="comment">/* USER CODE BEGIN EXTI3_IRQn 0 */</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/* USER CODE END EXTI3_IRQn 0 */</span></span><br><span class="line">  HAL_GPIO_EXTI_IRQHandler(EXTI_Key1_Pin);</span><br><span class="line">  <span class="comment">/* USER CODE BEGIN EXTI3_IRQn 1 */</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/* USER CODE END EXTI3_IRQn 1 */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">EXTI4_IRQHandler</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="comment">/* USER CODE BEGIN EXTI4_IRQn 0 */</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/* USER CODE END EXTI4_IRQn 0 */</span></span><br><span class="line">  HAL_GPIO_EXTI_IRQHandler(EXTI_Key2_Pin);</span><br><span class="line">  <span class="comment">/* USER CODE BEGIN EXTI4_IRQn 1 */</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/* USER CODE END EXTI4_IRQn 1 */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改延时中断优先级</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">HAL_Init();<span class="comment">//main.c(74)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//HAL_StatusTypeDef HAL_Init(void)中的</span></span><br><span class="line">HAL_InitTick(TICK_INT_PRIORITY);<span class="comment">//stm32f1xx_hal.c(160)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//进入参数里修改</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>  TICK_INT_PRIORITY            1U<span class="comment">//stm32f1xx_hal_conf.h(132)</span></span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;理论&quot;&gt;&lt;a href=&quot;#理论&quot; class=&quot;headerlink&quot; title=&quot;理论&quot;&gt;&lt;/a&gt;&lt;center&gt;理论&lt;/center&gt;&lt;/h1&gt;&lt;p&gt;NVIC：嵌套向量中断控制器（&lt;a href=&quot;https://blog.csdn.net/m0_7476</summary>
      
    
    
    
    <category term="32单片机" scheme="http://example.com/categories/32%E5%8D%95%E7%89%87%E6%9C%BA/"/>
    
    
    <category term="32单片机" scheme="http://example.com/tags/32%E5%8D%95%E7%89%87%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>ST-LINK未能串口keil识别的一个可能解决方案（前提驱动安装无问题）</title>
    <link href="http://example.com/post/a3ad0b3a.html"/>
    <id>http://example.com/post/a3ad0b3a.html</id>
    <published>2024-08-03T08:56:06.000Z</published>
    <updated>2024-08-16T09:55:21.661Z</updated>
    
    <content type="html"><![CDATA[<p>打开这个软件，在点击清除之前，按住单片机复位按钮不放，点击清除按钮，等待3-5秒放开复位按钮，即可清除重置，若提示没识别到，多重复几次，即可重置，重置完成之后再回到烧写软件，即可烧写成功</p><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic1/img/202408031657478.WebP" alt="软件图" style="zoom:50%;"><p>在烧写时提示烧写成功后会显示如图所示</p><p><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic1/img/202408031658168.WebP" alt="错误提示图"></p><p>解决方法：可能某个地方设置错误，我这里是这个没有设置成 Serial Wire，可以把全部设置重新检查一遍</p><p><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic1/img/202408031657360.WebP" alt="方法图"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;打开这个软件，在点击清除之前，按住单片机复位按钮不放，点击清除按钮，等待3-5秒放开复位按钮，即可清除重置，若提示没识别到，多重复几次，即可重置，重置完成之后再回到烧写软件，即可烧写成功&lt;/p&gt;
&lt;img src=&quot;https://cdn.jsdelivr.net/gh/x</summary>
      
    
    
    
    <category term="技术积累记录" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF%E7%A7%AF%E7%B4%AF%E8%AE%B0%E5%BD%95/"/>
    
    
    <category term="ST-LINK未能串口keil识别解决方案" scheme="http://example.com/tags/ST-LINK%E6%9C%AA%E8%83%BD%E4%B8%B2%E5%8F%A3keil%E8%AF%86%E5%88%AB%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    
  </entry>
  
  <entry>
    <title>STM32CubeIDE代码字体大小</title>
    <link href="http://example.com/post/43a9b762.html"/>
    <id>http://example.com/post/43a9b762.html</id>
    <published>2024-08-03T08:52:40.000Z</published>
    <updated>2024-08-16T09:55:31.719Z</updated>
    
    <content type="html"><![CDATA[<p> 进入首选项设置</p><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic1/img/202408031654048.WebP" alt="img" style="zoom:50%;"><p>搜索editor，按照图中标号，进行设置</p><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic1/img/202408031654274.WebP" alt="img" style="zoom:50%;"><p>按图中标号进行设置，选择需要的字号</p><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic1/img/202408031654824.WebP" alt="img" style="zoom:50%;"><p>到此设置完成</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt; 进入首选项设置&lt;/p&gt;
&lt;img src=&quot;https://cdn.jsdelivr.net/gh/xinzai-x/MyPic1/img/202408031654048.WebP&quot; alt=&quot;img&quot; style=&quot;zoom:50%;&quot;&gt;

&lt;p&gt;搜索editor，按照</summary>
      
    
    
    
    <category term="技术积累记录" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF%E7%A7%AF%E7%B4%AF%E8%AE%B0%E5%BD%95/"/>
    
    
    <category term="STM32CubeIDE代码字体大小" scheme="http://example.com/tags/STM32CubeIDE%E4%BB%A3%E7%A0%81%E5%AD%97%E4%BD%93%E5%A4%A7%E5%B0%8F/"/>
    
  </entry>
  
  <entry>
    <title>DHT11dht11.c(18) error C174 return-expression on void-function</title>
    <link href="http://example.com/post/c4236caa.html"/>
    <id>http://example.com/post/c4236caa.html</id>
    <published>2024-08-03T08:46:17.000Z</published>
    <updated>2024-08-16T13:43:43.792Z</updated>
    
    <content type="html"><![CDATA[<p>表示在函数dht11.c的第18行，有一个返回表达式出现在了一个返回类型为void的函数中。在C语言中，如果一个函数的声明或定义中指定了返回类型为void，那么这个函数不能有任何返回值。</p><p>​    要解决这个问题，你需要检查dht11.c文件中第18行的代码，确保没有返回值。如果该行代码确实需要返回一个值，那么你需要将该函数的返回类型修改为非void类型</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;表示在函数dht11.c的第18行，有一个返回表达式出现在了一个返回类型为void的函数中。在C语言中，如果一个函数的声明或定义中指定了返回类型为void，那么这个函数不能有任何返回值。&lt;/p&gt;
&lt;p&gt;​    要解决这个问题，你需要检查dht11.c文件中第18行的代码，</summary>
      
    
    
    
    <category term="错误记录" scheme="http://example.com/categories/%E9%94%99%E8%AF%AF%E8%AE%B0%E5%BD%95/"/>
    
    
  </entry>
  
  <entry>
    <title>STM32烧录的时候报错：Error :Flash Download failed -“Cortex-M3“</title>
    <link href="http://example.com/post/63d3dd68.html"/>
    <id>http://example.com/post/63d3dd68.html</id>
    <published>2024-08-03T08:46:17.000Z</published>
    <updated>2024-08-16T09:52:10.972Z</updated>
    
    <content type="html"><![CDATA[<p> 点击图中标号1，按顺序点击进入设置</p><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic1/img/202408161347291.WebP" alt="进入设置" style="zoom:50%;"><p>按图中标序，进入添加页面</p><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic1/img/202408161348136.WebP" alt="添加页面" style="zoom:50%;"><p>添加图中所选，然后一直确定退出即可，若没有图中所示选项，可能软件没下载对</p><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic1/img/202408161348840.WebP" alt="确定" style="zoom:50%;"><p>添加后，即可烧录成功。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt; 点击图中标号1，按顺序点击进入设置&lt;/p&gt;
&lt;img src=&quot;https://cdn.jsdelivr.net/gh/xinzai-x/MyPic1/img/202408161347291.WebP&quot; alt=&quot;进入设置&quot; style=&quot;zoom:50%;&quot;&gt;

&lt;p&gt;</summary>
      
    
    
    
    <category term="错误记录" scheme="http://example.com/categories/%E9%94%99%E8%AF%AF%E8%AE%B0%E5%BD%95/"/>
    
    
  </entry>
  
  <entry>
    <title>stm32cubeIDE与stm32cubeMX库文件安装路径自定义设置</title>
    <link href="http://example.com/post/32e9e993.html"/>
    <id>http://example.com/post/32e9e993.html</id>
    <published>2024-08-03T08:44:26.000Z</published>
    <updated>2024-08-16T09:55:42.304Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1、-stm32cubeMX库文件安装路径自定义设置"><a href="#1、-stm32cubeMX库文件安装路径自定义设置" class="headerlink" title="1、 stm32cubeMX库文件安装路径自定义设置"></a>1、 stm32cubeMX库文件安装路径自定义设置</h1><p>打开stm32cubeMX软件，依次点击标题栏【Help】→【Updater Settings】 </p><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic1/img/202408031651690.WebP" alt="img" style="zoom:33%;"><hr><p>点击图中的【Browser】，选择自己想要存放库文件的文件夹，选择完成后点击【OK】即可设置成功。 </p><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic1/img/202408031649589.WebP" alt="img" style="zoom:33%;"><p> PS：这里的路径建议选择软件的安装目录</p><h1 id="2、-stm32cubeIDE库安装路径自定义设置"><a href="#2、-stm32cubeIDE库安装路径自定义设置" class="headerlink" title="2、 stm32cubeIDE库安装路径自定义设置"></a>2、 stm32cubeIDE库安装路径自定义设置</h1><p>首先打开 stm32cubeIDE软件，然后依次点击【Window】→【Preference】</p><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic1/img/202408031649667.WebP" alt="img" style="zoom: 50%;"><hr><p> 依次点击左侧【STM32Cube】→【Firmware Updater】，点击上图中的【Browser】，选择自己想要存放库文件的文件夹，选择完成后点击【Apply and Close】即可设置成功</p><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic1/img/202408031650943.WebP" alt="img" style="zoom: 33%;"><p>PS：stm32cubeIDE与stm32cubeMX的库文件是通用的，也可以直接选择了stm32cubeMX的库文件路径，这样stm32cubeIDE就可以自动识别文件夹中已有的库文件，避免库文件重复下载，节省了内存。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;1、-stm32cubeMX库文件安装路径自定义设置&quot;&gt;&lt;a href=&quot;#1、-stm32cubeMX库文件安装路径自定义设置&quot; class=&quot;headerlink&quot; title=&quot;1、 stm32cubeMX库文件安装路径自定义设置&quot;&gt;&lt;/a&gt;1、 stm32</summary>
      
    
    
    
    <category term="技术积累记录" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF%E7%A7%AF%E7%B4%AF%E8%AE%B0%E5%BD%95/"/>
    
    
    <category term="IDE与MX库文件安装路径自定义设置" scheme="http://example.com/tags/IDE%E4%B8%8EMX%E5%BA%93%E6%96%87%E4%BB%B6%E5%AE%89%E8%A3%85%E8%B7%AF%E5%BE%84%E8%87%AA%E5%AE%9A%E4%B9%89%E8%AE%BE%E7%BD%AE/"/>
    
  </entry>
  
</feed>
