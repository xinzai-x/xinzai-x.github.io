<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>星仔人生录</title>
  
  <subtitle>珍惜当下 不负此生</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2024-08-02T07:45:52.332Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>星仔</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>0.SMT32原理概述</title>
    <link href="http://example.com/post/99cd7d8.html"/>
    <id>http://example.com/post/99cd7d8.html</id>
    <published>2024-08-02T07:41:35.000Z</published>
    <updated>2024-08-02T07:45:52.332Z</updated>
    
    <content type="html"><![CDATA[<h1 id="51和32区别"><a href="#51和32区别" class="headerlink" title="51和32区别"></a><center>51和32区别</center></h1><p>位数：</p><p>&ensp;&ensp;&ensp;&ensp;51：8位（STC89C52）</p><p>&ensp;&ensp;&ensp;&ensp;32：32位（STM32F103ZET6）</p><p>时钟：</p><ul><li>51：11.0592Mhz晶振</li><li>32<ul><li>F103：8Mhz晶振(×9)，主频：72Mhz</li><li>F103：12Mhz晶振(×6)，主频：72Mhz</li><li>F407：168Mhz主频</li></ul></li></ul><h1 id="时钟"><a href="#时钟" class="headerlink" title="时钟"></a><center>时钟</center></h1><p>E：外部，I：内部</p><p>高速外部晶振：HSE</p><p>低速外部晶振：LSE</p><p>高速内部晶振：HSI</p><p>低速内部晶振：LSI</p><p>锁相环：让8MHz晶振变成72MHz主频</p><p>每个外设初始化的大致流程</p><ol><li>把图形化界面配置的参数赋值给对应的结构体的成员变量</li><li>把结构体地址当做参数传给初始化函数</li><li>初始化函数根据每个结构体成员变量操作对应的寄存器</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//时钟初始化</span></span><br><span class="line">SystemClock_Config();</span><br><span class="line"></span><br><span class="line">RCC_OscInitTypeDef RCC_OscInitStruct = &#123;<span class="number">0</span>&#125;;<span class="comment">//结构体类型变量</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//在void SystemClock_Config(void)中(main.c第133)</span></span><br><span class="line">RCC_OscInitStruct.HSEState = RCC_HSE_ON;<span class="comment">//(144行)</span></span><br><span class="line"></span><br><span class="line">HAL_RCC_OscConfig(&amp;RCC_OscInitStruct);<span class="comment">//(main.c第148)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)中</span></span><br><span class="line">__HAL_RCC_HSE_CONFIG(RCC_OscInitStruct-&gt;HSEState);<span class="comment">//377行</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __HAL_RCC_HSE_CONFIG(__STATE__)<span class="comment">//__STATE__ = RCC_OscInitStruct-&gt;HSEState(RCC_HSE_ON)           </span></span></span><br><span class="line">   <span class="keyword">do</span>&#123;                                                     </span><br><span class="line">     <span class="keyword">if</span> ((__STATE__) == RCC_HSE_ON)                        </span><br><span class="line">     &#123;                                                     </span><br><span class="line">       SET_BIT(RCC-&gt;CR, RCC_CR_HSEON);<span class="comment">//RCC-&gt;CR = 时钟控制寄存器(RCC_CR)</span></span><br><span class="line">     &#125; </span><br><span class="line"><span class="meta">#<span class="keyword">define</span> RCC_CR_HSEON_Pos           (16U)</span></span><br><span class="line"><span class="comment">//0x1左移16位（注意是二进制左移）               </span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> RCC_CR_HSEON_Msk           (0x1UL &lt;&lt; RCC_CR_HSEON_Pos)   <span class="comment">/*!&lt; 0x00010000 */</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> RCC_CR_HSEON               RCC_CR_HSEON_Msk</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//第17个数为1，则是第十六位，第16位：0：HSE振荡器关闭，1：HSE振荡器开启。</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SET_BIT(REG, BIT)     ((REG) |= (BIT))<span class="comment">//BIT = RCC_CR_HSEON(0x00010000)</span></span></span><br></pre></td></tr></table></figure><h1 id="STM32芯片参数"><a href="#STM32芯片参数" class="headerlink" title="STM32芯片参数"></a><center>STM32芯片参数</center></h1><p>Core: ARM 32-bit Cortex™-M3 CPU：ARM架构，32位单片机，内核型号</p><p>72 MHz maximum frequency：72MHz主频</p><p>芯片型号含义：</p><img src="https://i-blog.csdnimg.cn/direct/30a0fc794f734220b29d24a4b5cf5734.png#pic_center =450x500" alt="芯片型号含义" style="zoom:33%;"><p> Flash：磁盘，RAM：运行内存</p><p>一般软件、代码等运行在RAM，但32单片机代码运行在Flash</p><p>3 × 12-bit, 1 µs A&#x2F;D converters</p><ul><li>A&#x2F;D converter &#x3D; ADC：A：模拟信号，D：数字信号，模拟信号转数字信号</li><li>3：3路ADC</li><li>Conversion range: 0 to 3.6 V：采样值 0-3.6V</li><li>12bit：$2^{12} &#x3D; 4096$，将采样范围分成4096份，即为采样精度，这个越高精度越高</li><li>2 × 12-bit D&#x2F;A converters &#x3D; DAC：数字信号转模拟信号</li><li>Serial wire debug (SWD) ：STL烧写</li><li>Up to 112 fast I&#x2F;O ports：112个IO口功能引脚</li><li>Up to 11 timers：11个定时器</li></ul><h1 id="软件安装与使用"><a href="#软件安装与使用" class="headerlink" title="软件安装与使用"></a><center>软件安装与使用</center></h1><p>注意：<code>所有路径不能有中文</code>(包含用户名)</p><p>安装：keil、STM32CubeMX、STM32CubeIDE（需要的留言）</p><p><a href="https://blog.csdn.net/qq_65047384/article/details/140686974">STM32CubeIDE与STM32CubeMX库文件安装路径自定义设置</a></p><p>搜索自己芯片型号（我的型号：<code>STM32F103ZET6</code>）</p><img src="https://i-blog.csdnimg.cn/direct/a456ae04c9b34377a52cb3389859d96f.png#pic_center =700x400" alt="便捷技巧" style="zoom:33%;"><h2 id="新建工程必须设置"><a href="#新建工程必须设置" class="headerlink" title="新建工程必须设置"></a><center>新建工程必须设置</center></h2><h3 id="STM32CubeMX"><a href="#STM32CubeMX" class="headerlink" title="STM32CubeMX"></a>STM32CubeMX</h3><img src="https://i-blog.csdnimg.cn/direct/ab8bc1b13f1f4e6794729b215808d095.png#pic_center =800x400" alt="设置1" style="zoom:33%;"><hr><img src="https://i-blog.csdnimg.cn/direct/e09639d4ba844786a47e6d07bf5c8753.png#pic_center =800x400" alt="设置2" style="zoom:33%;"><hr><img src="https://i-blog.csdnimg.cn/direct/2e454f52e3284f258701769343cbaf2b.png#pic_center =800x400" alt="时钟配置" style="zoom:33%;"><hr><img src="https://i-blog.csdnimg.cn/direct/2fff77e7c9204dbe850010978677927d.png#pic_center =600x300" alt="工程" style="zoom: 33%;"><hr><img src="https://i-blog.csdnimg.cn/direct/779cdbb3d5a5435399e1963d698339a9.png#pic_center =600x200" alt="工程1" style="zoom:33%;"><hr><p>完成，建工程</p><img src="https://i-blog.csdnimg.cn/direct/016194fe9bdf4f74ba38014e8d6f618c.png#pic_center =600x150" alt="完成" style="zoom:33%;"><h3 id="STM32CubeIDE"><a href="#STM32CubeIDE" class="headerlink" title="STM32CubeIDE"></a>STM32CubeIDE</h3><p>新建工程</p><img src="https://i-blog.csdnimg.cn/direct/8c04c9d5145d4790b63f0da15c0b8d9b.png#pic_center =800x400" alt="新建工程" style="zoom:33%;"><hr><img src="https://i-blog.csdnimg.cn/direct/3d4dcc8ca62f4100976ac4cbbbad62d9.png#pic_center =700x400" alt="选型号" style="zoom:33%;"><hr><img src="https://i-blog.csdnimg.cn/direct/d6688af0c26e4cc99770eb90dc92a94f.png#pic_center =700x400" alt="工程名" style="zoom:33%;"><hr><p>版本号这里：1.8.5</p><img src="https://i-blog.csdnimg.cn/direct/e29e1e856ed749c28a255a5082932a49.png#pic_center =700x300" alt="完成" style="zoom: 33%;"><p>若别人工程为别的版本，需下载别的版本</p><img src="https://i-blog.csdnimg.cn/direct/0dc08344d2f349e9ac9f75b5d3179267.png#pic_center =600x300" alt="下载1" style="zoom:50%;">---------------------------------------------------------------------------------------------<p>下载工程对应版本即可</p><img src="https://i-blog.csdnimg.cn/direct/6f97521a94654da697f6fc0c59812463.png#pic_center =600x300" alt="下载对应版本" style="zoom:50%;"><hr><p>这里与STM32CubeMX相同，参考上面配置，最后：<code>ctrl + s</code> 保存</p><img src="https://i-blog.csdnimg.cn/direct/3bc14a00f15149cdbfa1829667908fb3.png" alt="在这里插入图片描述" style="zoom: 33%;"><p>Keil+CubeMX &#x3D; CubeIDE</p><h1 id="烧录"><a href="#烧录" class="headerlink" title="烧录"></a><center>烧录</center></h1><p>代码烧录方式</p><h2 id="ST-Link"><a href="#ST-Link" class="headerlink" title="ST-Link"></a><center>ST-Link</center></h2><p>将ST-Link烧写器与单片机连接</p><p><strong>CubeMX keil软件烧录</strong></p><p>编译无错误后，点击图中框选按钮烧录</p><img src="https://i-blog.csdnimg.cn/direct/868f136a06c044a8b9acefc993c7cec5.png#pic_center =600x150" alt="烧录按钮" style="zoom:50%;"><p>若烧录不成功，可看是否是这个错误：<a href="https://blog.csdn.net/qq_65047384/article/details/140702048?spm=1001.2014.3001.5501">链接</a></p><p><strong>CubeIDE软件烧录</strong></p><p>编译无错误后，点击图中框选按钮烧录</p><img src="https://i-blog.csdnimg.cn/direct/7eca43e114694899b54f06953739b445.png#pic_center =600x150" alt="烧录介绍" style="zoom:50%;"><h2 id="STM32-ST-LINK-Utility"><a href="#STM32-ST-LINK-Utility" class="headerlink" title="STM32 ST-LINK Utility"></a><center>STM32 ST-LINK Utility</center></h2><p>其实是一个烧写软件，看图可知，对应功能</p><img src="https://i-blog.csdnimg.cn/direct/f60f84aa7dcf498faca236bcac8411da.png#pic_center =500x400" alt="介绍" style="zoom:50%;"><p>选择好对应hex文件，直接烧写即可</p><img src="https://i-blog.csdnimg.cn/direct/bd90b68f5c5c4a8a92f09293a1f6ab6f.png#pic_center =600x400" alt="烧写界面" style="zoom:50%;"><h2 id="串口烧录"><a href="#串口烧录" class="headerlink" title="串口烧录"></a><center>串口烧录</center></h2><p>步骤：</p><ol><li><p>数据线连接电脑和单片机串口1</p></li><li><p>手动将板子的BOOT0置1，BOOT1置0，使用Bootloader方式</p></li><li><p>断电 重启</p></li><li><p>打开FlyMCU软件烧写（若没有反应可按复位按钮尝试）</p> <img src="https://i-blog.csdnimg.cn/direct/031011ecec054b62bbf79e966da76ea8.png#pic_center =500x300" alt="界面介绍" style="zoom: 50%;"></li><li><p>手动将板子的BOOT0置0，BOOT1置0</p></li><li><p>板子重新上电</p></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;51和32区别&quot;&gt;&lt;a href=&quot;#51和32区别&quot; class=&quot;headerlink&quot; title=&quot;51和32区别&quot;&gt;&lt;/a&gt;&lt;center&gt;51和32区别&lt;/center&gt;&lt;/h1&gt;&lt;p&gt;位数：&lt;/p&gt;
&lt;p&gt;&amp;ensp;&amp;ensp;&amp;ensp;&amp;ens</summary>
      
    
    
    
    <category term="32单片机" scheme="http://example.com/categories/32%E5%8D%95%E7%89%87%E6%9C%BA/"/>
    
    
    <category term="32单片机" scheme="http://example.com/tags/32%E5%8D%95%E7%89%87%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>电机控制</title>
    <link href="http://example.com/post/93c966f3.html"/>
    <id>http://example.com/post/93c966f3.html</id>
    <published>2024-08-02T03:01:57.000Z</published>
    <updated>2024-08-02T03:05:56.327Z</updated>
    
    <content type="html"><![CDATA[<h1 id="直流电机"><a href="#直流电机" class="headerlink" title="直流电机"></a><center>直流电机</center></h1><p>原理：<br>[video(video-Waxy6rsl-1721618153990)(type-bilibili)(url-<a href="https://player.bilibili.com/player.html?aid=935054445)(image-https://img-blog.csdnimg.cn/img_convert/feb5f96d5e5f266a1994a1a8a55979ff.jpeg)(title-)%5D">https://player.bilibili.com/player.html?aid=935054445)(image-https://img-blog.csdnimg.cn/img_convert/feb5f96d5e5f266a1994a1a8a55979ff.jpeg)(title-)]</a></p><p>转速：脉冲宽度调制（Pulse width modulation，PWM）</p><p>周期（频率）、占空比</p><img src="https://i-blog.csdnimg.cn/direct/5ef6e2f7c77c426282174bc892000eb6.png#pic_center =300x200" alt="电机变速解析图" style="zoom:50%;"><h2 id="电机驱动电路"><a href="#电机驱动电路" class="headerlink" title="电机驱动电路"></a><center>电机驱动电路</center></h2><img src="https://i-blog.csdnimg.cn/direct/ea9586fc50ab4f0cbba124fb5e87a801.png#pic_center =400x300" alt="电机驱动模块" style="zoom:50%;"><h2 id="代码编写"><a href="#代码编写" class="headerlink" title="代码编写"></a><center>代码编写</center></h2><p>按键控制直流电机速度</p><h3 id="main-c"><a href="#main-c" class="headerlink" title="main.c"></a>main.c</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;main.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;delay.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> count = <span class="number">0</span>,level = <span class="number">7</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">TR0 = <span class="number">1</span>;</span><br><span class="line">TH0 = <span class="number">0xDC</span>;</span><br><span class="line">TL0 = <span class="number">0x00</span>;</span><br><span class="line">TMOD = <span class="number">0x01</span>;</span><br><span class="line">ET0 = <span class="number">1</span>;</span><br><span class="line">EA =<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(KEY1 == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">Delay120ms();</span><br><span class="line"><span class="keyword">if</span>(KEY1 == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">level++;</span><br><span class="line">level = level % <span class="number">10</span>;<span class="comment">//到10才清理</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="mian-h"><a href="#mian-h" class="headerlink" title="mian.h"></a>mian.h</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __MAIN_H__</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __MAIN_H__</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;reg52.h&quot;</span></span></span><br><span class="line"><span class="comment">//定义LED、按键</span></span><br><span class="line">sbit LED1 = P1^<span class="number">0</span>;</span><br><span class="line">sbit KEY1 = P3^<span class="number">2</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">extern</span> <span class="type">char</span> count,level;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br></pre></td></tr></table></figure><h3 id="time-c"><a href="#time-c" class="headerlink" title="time.c"></a>time.c</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;main.h&quot;</span></span></span><br><span class="line"><span class="comment">//定时中断</span></span><br><span class="line">Timer0_Routine(<span class="type">void</span>) interrupt <span class="number">1</span></span><br><span class="line">&#123;</span><br><span class="line">TH0 = <span class="number">0xDC</span>;</span><br><span class="line">TL0 = <span class="number">0x00</span>;</span><br><span class="line">count++;<span class="comment">//每次定时中断加1</span></span><br><span class="line"><span class="keyword">if</span>(count &gt; level)<span class="comment">//level越大，占空比越小速度越慢</span></span><br><span class="line">LED1 = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">LED1 = <span class="number">0</span>;</span><br><span class="line">count = count % <span class="number">10</span>;<span class="comment">//到10清零</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="delay-c"><a href="#delay-c" class="headerlink" title="delay.c"></a>delay.c</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;delay.h&quot;</span></span></span><br><span class="line"><span class="comment">//延时函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay120ms</span><span class="params">()</span><span class="comment">//@11.0592MHz</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> data i, j;</span><br><span class="line"></span><br><span class="line">i = <span class="number">216</span>;</span><br><span class="line">j = <span class="number">37</span>;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">while</span> (--j);</span><br><span class="line">&#125; <span class="keyword">while</span> (--i);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="delay-h"><a href="#delay-h" class="headerlink" title="delay.h"></a>delay.h</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __DELAY_H__</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __DELAY_H__</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay120ms</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br></pre></td></tr></table></figure><p>演示：<br>[video(video-ZVQpYjND-1721646593529)(type-csdn)(url-<a href="https://live.csdn.net/v/embed/411567)(image-https://img-blog.csdnimg.cn/img_convert/68e43edcb90154e5522c684e7706c024.jpeg)(title-)]">https://live.csdn.net/v/embed/411567)(image-https://img-blog.csdnimg.cn/img_convert/68e43edcb90154e5522c684e7706c024.jpeg)(title-)]</a></p><p>练习：直流电机与iic通信连接oled屏，显示电机转速等级数字</p><p>演示：<br>[video(video-LCWNIUVS-1721647443715)(type-csdn)(url-<a href="https://live.csdn.net/v/embed/411578)(image-https://img-blog.csdnimg.cn/img_convert/550ddfd49c1aae3d611d2f4372e733eb.jpeg)(title-)]">https://live.csdn.net/v/embed/411578)(image-https://img-blog.csdnimg.cn/img_convert/550ddfd49c1aae3d611d2f4372e733eb.jpeg)(title-)]</a></p><h1 id="进步电机"><a href="#进步电机" class="headerlink" title="进步电机"></a><center>进步电机</center></h1><p>原理：<br>[video(video-K1gimxbA-1721618390369)(type-bilibili)(url-<a href="https://player.bilibili.com/player.html?aid=1102434030)(image-https://img-blog.csdnimg.cn/img_convert/a7390fa97350f84ae8166a749d61e413.jpeg)(title-)%5D">https://player.bilibili.com/player.html?aid=1102434030)(image-https://img-blog.csdnimg.cn/img_convert/a7390fa97350f84ae8166a749d61e413.jpeg)(title-)]</a></p><h2 id="代码编写-1"><a href="#代码编写-1" class="headerlink" title="代码编写"></a><center>代码编写</center></h2><h3 id="main-c-1"><a href="#main-c-1" class="headerlink" title="main.c"></a>main.c</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;main.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;delay.h&quot;</span></span></span><br><span class="line"><span class="type">int</span> x,y;</span><br><span class="line">uchar phasecw[<span class="number">4</span>] =&#123;<span class="number">0x08</span>,<span class="number">0x04</span>,<span class="number">0x02</span>,<span class="number">0x01</span>&#125;;<span class="comment">//正向，四相电机对应四相通电</span></span><br><span class="line">uchar phaseccw[<span class="number">4</span>]=&#123;<span class="number">0x01</span>,<span class="number">0x02</span>,<span class="number">0x04</span>,<span class="number">0x08</span>&#125;;<span class="comment">//方向</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(x = <span class="number">0</span>;x &lt; <span class="number">100</span>;x++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(y = <span class="number">0</span>;y &lt; <span class="number">4</span>;y++)<span class="comment">//四相通电转的角度</span></span><br><span class="line">&#123;</span><br><span class="line">P2 = phasecw[y];<span class="comment">//电机连接P2口(低四位)</span></span><br><span class="line">Delay5ms();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="main-h"><a href="#main-h" class="headerlink" title="main.h"></a>main.h</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __MAIN_H__</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __MAIN_H__</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;reg52.h&quot;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">unsigned</span> <span class="type">char</span> uchar;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br></pre></td></tr></table></figure><h3 id="delay-c-1"><a href="#delay-c-1" class="headerlink" title="delay.c"></a>delay.c</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;delay.h&quot;</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay5ms</span><span class="params">()</span><span class="comment">//@11.0592MHz</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> data i, j;</span><br><span class="line"></span><br><span class="line">i = <span class="number">9</span>;</span><br><span class="line">j = <span class="number">244</span>;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">while</span> (--j);</span><br><span class="line">&#125; <span class="keyword">while</span> (--i);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="delay-h-1"><a href="#delay-h-1" class="headerlink" title="delay.h"></a>delay.h</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __DELAY_H__</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __DELAY_H__</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay5ms</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br></pre></td></tr></table></figure><p>演示：<br>[video(video-LdLmIeEz-1721647822311)(type-csdn)(url-<a href="https://live.csdn.net/v/embed/411583)(image-https://img-blog.csdnimg.cn/img_convert/ee52d58f89c22d86f054ab9ae6453a23.jpeg)(title-)]">https://live.csdn.net/v/embed/411583)(image-https://img-blog.csdnimg.cn/img_convert/ee52d58f89c22d86f054ab9ae6453a23.jpeg)(title-)]</a></p><p>练习：OLED屏显示步进电机前进还是后退(前进1，后退0)，按键控制步进电机前进还是后退</p><h1 id="舵机控制"><a href="#舵机控制" class="headerlink" title="舵机控制"></a><center>舵机控制</center></h1><p>角度：180&#x2F;360度（这里舵机180度）</p><p>模型图：</p><img src="https://i-blog.csdnimg.cn/direct/2ef9fa51db3846f58cf470540cfc2254.png#pic_center =500x150" alt="展示接线图" style="zoom:50%;"><p>信号说明：</p><img src="https://i-blog.csdnimg.cn/direct/f49c6e1a5bdf4cb8aea4cde760c28912.png#pic_center =500x200" alt="信号使用说明" style="zoom:50%;"><h2 id="代码编写-2"><a href="#代码编写-2" class="headerlink" title="代码编写"></a><center>代码编写</center></h2><p>舵机180度控制旋转</p><h3 id="main-c-2"><a href="#main-c-2" class="headerlink" title="main.c"></a>main.c</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;main.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;delay.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> level = <span class="number">0</span>,count = <span class="number">0</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">TR0 = <span class="number">1</span>;</span><br><span class="line"><span class="comment">//定时器时间：0.5ms</span></span><br><span class="line">TMOD |= <span class="number">0x01</span>;</span><br><span class="line">TL0 = <span class="number">0x33</span>;</span><br><span class="line">TH0 = <span class="number">0xFE</span>;</span><br><span class="line">ET0 = <span class="number">1</span>;</span><br><span class="line">EA = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(KEY1 == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">Delay120ms();</span><br><span class="line"><span class="keyword">if</span>(KEY1 == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">level++;</span><br><span class="line">level = level % <span class="number">6</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Timer0_Routine(<span class="type">void</span>) interrupt <span class="number">1</span></span><br><span class="line">&#123;</span><br><span class="line">TL0 = <span class="number">0x33</span>;</span><br><span class="line">TH0 = <span class="number">0xFE</span>;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">level为1时，脉冲为1，持续时间0.5ms，转动角度为0，但按键延迟120ms，早过一个周期，</span></span><br><span class="line"><span class="comment">则下次按键时count为0，则持续时间为1ms，转动角度为45，以此类推，下次转动90，</span></span><br><span class="line"><span class="comment">但上一次已经转了45，所以实际再转45就到90度，当到达180度时，level为1时，转动0度，</span></span><br><span class="line"><span class="comment">相当于回到原点</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">if</span>(count &lt; level)</span><br><span class="line">SG90_PWM = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">SG90_PWM = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">count++;</span><br><span class="line"><span class="comment">//周期20ms，0.5ms一次定时中断触发，40次则20ms</span></span><br><span class="line"><span class="keyword">if</span>(count &gt; <span class="number">40</span>)</span><br><span class="line">count = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="main-h-1"><a href="#main-h-1" class="headerlink" title="main.h"></a>main.h</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __MAIN_H__</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __MAIN_H__</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;reg52.h&gt;</span></span></span><br><span class="line"></span><br><span class="line">sbit SG90_PWM = P2^<span class="number">0</span>;</span><br><span class="line">sbit KEY1 = P3^<span class="number">2</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br></pre></td></tr></table></figure><h3 id="delay-c-2"><a href="#delay-c-2" class="headerlink" title="delay.c"></a>delay.c</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;delay.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay120ms</span><span class="params">()</span><span class="comment">//@11.0592MHz</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> data i, j;</span><br><span class="line"></span><br><span class="line">i = <span class="number">216</span>;</span><br><span class="line">j = <span class="number">37</span>;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">while</span> (--j);</span><br><span class="line">&#125; <span class="keyword">while</span> (--i);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="delay-h-2"><a href="#delay-h-2" class="headerlink" title="delay.h"></a>delay.h</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __DELAY_H__</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __DELAY_H__</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay120ms</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br></pre></td></tr></table></figure><p>练习：OLED屏显示数字代表舵机旋转角度，按键控制舵机角度</p><p>演示：<br>[video(video-30TEeTuO-1721713873420)(type-csdn)(url-<a href="https://live.csdn.net/v/embed/411748)(image-https://img-blog.csdnimg.cn/img_convert/92bfd96b21f8f177f68ab8e8d682477d.jpeg)(title-)]">https://live.csdn.net/v/embed/411748)(image-https://img-blog.csdnimg.cn/img_convert/92bfd96b21f8f177f68ab8e8d682477d.jpeg)(title-)]</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;直流电机&quot;&gt;&lt;a href=&quot;#直流电机&quot; class=&quot;headerlink&quot; title=&quot;直流电机&quot;&gt;&lt;/a&gt;&lt;center&gt;直流电机&lt;/center&gt;&lt;/h1&gt;&lt;p&gt;原理：&lt;br&gt;[video(video-Waxy6rsl-1721618153990)(t</summary>
      
    
    
    
    <category term="51单片机" scheme="http://example.com/categories/51%E5%8D%95%E7%89%87%E6%9C%BA/"/>
    
    
    <category term="51单片机" scheme="http://example.com/tags/51%E5%8D%95%E7%89%87%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>单总线通信</title>
    <link href="http://example.com/post/8212ff63.html"/>
    <id>http://example.com/post/8212ff63.html</id>
    <published>2024-07-14T07:49:18.000Z</published>
    <updated>2024-08-02T03:01:18.412Z</updated>
    
    <content type="html"><![CDATA[<h1 id="DHT11介绍分析"><a href="#DHT11介绍分析" class="headerlink" title="DHT11介绍分析"></a><center>DHT11介绍分析</center></h1><p>HT11数字温湿度传感器</p><p>数据格式(在HDT11没有小数)：</p><p>&ensp;&ensp;&ensp;&ensp;8bit湿度整数数据 + 8bit湿度小数数据 + 8bit温度整数数据 + 8bit温度小数数据 + 8bit校验和</p><p>校验方式将温湿度4个字节数据加起来 &#x3D; 校验和，传送完成后重新加起来与校验和数据比较是否相同</p><h2 id="开始信号时序"><a href="#开始信号时序" class="headerlink" title="开始信号时序"></a><center>开始信号时序</center></h2><p>线空闲状态为高电平，单片机把总线拉低必须<code>大于18毫秒</code>，保证DHT11能检测到起始信号，单片机发送<code>开始信号</code>结束后，延时等待20-40us，DHT11接收到单片机开始信号后，等待单片机开始信号结束，然后发送80us低电平<code>响应信号</code></p><img src="https://i-blog.csdnimg.cn/direct/2b11bff1af40457ea41baa281b31e720.png#pic_center =600x200" alt="开始信号时序" style="zoom:50%;"><p>HT11发送响应信号后,再把总线拉高80us，准备发送数据</p><h2 id="MCU接收数据时序"><a href="#MCU接收数据时序" class="headerlink" title="MCU接收数据时序"></a><center>MCU接收数据时序</center></h2><p>每一bit数据都以50us低电平时隙开始，<code>高电平长短</code>决定数据位是 0 还是 1</p><p><strong>数字0信号时序</strong></p><img src="https://i-blog.csdnimg.cn/direct/410bba37278747a3963f605834c2d318.png#pic_center =500x200" alt="数字0信号时序图" style="zoom:50%;"><p><strong>数字1信号时序</strong></p><img src="https://i-blog.csdnimg.cn/direct/1c24522b79f445bd92fdf378d8138c1d.png#pic_center =500x200" alt="数字1信号时序图" style="zoom:50%;"><h1 id="代码编写"><a href="#代码编写" class="headerlink" title="代码编写"></a><center>代码编写</center></h1><p>利用上一个IIC协议和OLED模块，使用单总线通信和温湿度模块，在OLED屏上显示温湿度</p><h2 id="dht11-c"><a href="#dht11-c" class="headerlink" title="dht11.c"></a>dht11.c</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;dht11.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;delay.h&quot;</span></span></span><br><span class="line"><span class="type">char</span> <span class="title function_">DHT11_Start</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">uchar delay_count = <span class="number">0</span>;<span class="comment">//用于计数</span></span><br><span class="line">DHT11_IO = <span class="number">1</span>;<span class="comment">//一开始单片机时序高电平</span></span><br><span class="line">Delay30us();</span><br><span class="line">DHT11_IO = <span class="number">0</span>;<span class="comment">//拉低电平至少18us</span></span><br><span class="line">Delay25ms();</span><br><span class="line">DHT11_IO = <span class="number">1</span>;<span class="comment">//再拉高20-40us</span></span><br><span class="line">Delay30us();</span><br><span class="line"><span class="comment">//当DHT11响应信号开始时为低电平(80us)，等到结束时高电平，取反结束或大于80us时结束</span></span><br><span class="line"><span class="keyword">while</span>(!DHT11_IO &amp;&amp; delay_count &lt; <span class="number">80</span>)</span><br><span class="line">&#123;</span><br><span class="line">delay_count++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(delay_count &gt;= <span class="number">80</span>)<span class="comment">//大于80us结束</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">delay_count = <span class="number">0</span>;<span class="comment">//重置计数值</span></span><br><span class="line"><span class="comment">//响应信号结束拉高80us后拉低，代表数据开始传输，等拉低电平时或大于80us结束</span></span><br><span class="line"><span class="keyword">while</span>(DHT11_IO &amp;&amp; delay_count &lt; <span class="number">80</span>)</span><br><span class="line">&#123;</span><br><span class="line">delay_count++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(delay_count &gt;= <span class="number">80</span>)<span class="comment">//大于80us结束</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">char</span> <span class="title function_">DHT11_Write</span><span class="params">(<span class="type">int</span> *humi,<span class="type">int</span> *temp)</span></span><br><span class="line">&#123;</span><br><span class="line">uchar delay_count = <span class="number">0</span>,data_byte,tmp,x,y;</span><br><span class="line">uchar DHT11_Data[<span class="number">5</span>];<span class="comment">//定义数组保存数据</span></span><br><span class="line">DHT11_Start();<span class="comment">//调用开始函数</span></span><br><span class="line"><span class="comment">//发送40bit数据</span></span><br><span class="line"><span class="keyword">for</span>(x = <span class="number">0</span>;x &lt; <span class="number">5</span>;x++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(y = <span class="number">0</span>;y &lt; <span class="number">8</span>;y++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//数据发送前低电平，判断为高电平时则开始若有问题跳出(&gt;50)</span></span><br><span class="line"><span class="keyword">while</span>(!DHT11_IO &amp;&amp; delay_count &lt; <span class="number">50</span>)</span><br><span class="line">delay_count++;</span><br><span class="line"><span class="keyword">if</span>(delay_count &gt;= <span class="number">50</span>)<span class="comment">//大于80us结束</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">delay_count = <span class="number">0</span>;</span><br><span class="line">tmp = <span class="number">0</span>;</span><br><span class="line">Delay30us();</span><br><span class="line"><span class="keyword">if</span>(DHT11_IO == <span class="number">1</span>)<span class="comment">//若条件不成立发送数据0</span></span><br><span class="line">&#123;</span><br><span class="line">tmp = <span class="number">1</span>;<span class="comment">//发送数据1</span></span><br><span class="line"><span class="keyword">while</span>(DHT11_IO &amp;&amp; delay_count &lt; <span class="number">50</span>)</span><br><span class="line">delay_count++;</span><br><span class="line"><span class="keyword">if</span>(delay_count &gt;= <span class="number">50</span>)<span class="comment">//大于80us结束</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line">delay_count = <span class="number">0</span>;</span><br><span class="line">data_byte &lt;&lt;= <span class="number">1</span>;<span class="comment">//左移一位</span></span><br><span class="line">data_byte |= tmp;<span class="comment">//将每一位数据传给data_byte</span></span><br><span class="line">&#125;</span><br><span class="line">DHT11_Data[x]=data_byte;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//若前四个数值加起来不等于校验位的数，则全部清零</span></span><br><span class="line"><span class="keyword">if</span>(DHT11_Data[<span class="number">0</span>]+DHT11_Data[<span class="number">1</span>]+DHT11_Data[<span class="number">2</span>]+DHT11_Data[<span class="number">3</span>] != DHT11_Data[<span class="number">4</span>])</span><br><span class="line">&#123;</span><br><span class="line">DHT11_Data[<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line">DHT11_Data[<span class="number">1</span>]=<span class="number">0</span>;</span><br><span class="line">DHT11_Data[<span class="number">2</span>]=<span class="number">0</span>;</span><br><span class="line">DHT11_Data[<span class="number">3</span>]=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//因为DHT11只有整数，所以是0，2</span></span><br><span class="line">*humi = (<span class="type">int</span>)DHT11_Data[<span class="number">0</span>];<span class="comment">//相同地址，值改变则另一个相同地址的变量也改变</span></span><br><span class="line">*temp = (<span class="type">int</span>)DHT11_Data[<span class="number">2</span>];</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="dat11-h"><a href="#dat11-h" class="headerlink" title="dat11.h"></a>dat11.h</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __DHT11_H__</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __DHT11_H__</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;main.h&quot;</span></span></span><br><span class="line"></span><br><span class="line">sbit DHT11_IO = P1^<span class="number">2</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">char</span> <span class="title function_">DHT11_Start</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">char</span> <span class="title function_">DHT11_Write</span><span class="params">(<span class="type">int</span> *humi,<span class="type">int</span> *temp)</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br></pre></td></tr></table></figure><h2 id="main-c"><a href="#main-c" class="headerlink" title="main.c"></a>main.c</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;iic.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;oled.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;bmp.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;main.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;dht11.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> H,T;</span><br><span class="line"><span class="type">char</span> DHT11_Buf[<span class="number">20</span>];</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">OLED_Init();<span class="comment">//初始化OLED</span></span><br><span class="line">OLED_Clear();</span><br><span class="line">OLED_ShowCHinese(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>);<span class="comment">//星（x坐标,y坐标,字模第几个）</span></span><br><span class="line">OLED_ShowCHinese(<span class="number">18</span>,<span class="number">0</span>,<span class="number">1</span>);<span class="comment">//仔</span></span><br><span class="line">OLED_ShowCHinese(<span class="number">36</span>,<span class="number">0</span>,<span class="number">2</span>);<span class="comment">//爱</span></span><br><span class="line">OLED_ShowCHinese(<span class="number">54</span>,<span class="number">0</span>,<span class="number">3</span>);<span class="comment">//分</span></span><br><span class="line">OLED_ShowCHinese(<span class="number">72</span>,<span class="number">0</span>,<span class="number">4</span>);<span class="comment">//享</span></span><br><span class="line">OLED_ShowCHinese(<span class="number">90</span>,<span class="number">0</span>,<span class="number">5</span>);<span class="comment">//抖</span></span><br><span class="line">OLED_ShowCHinese(<span class="number">108</span>,<span class="number">0</span>,<span class="number">6</span>);<span class="comment">//音</span></span><br><span class="line">OLED_ShowCHinese(<span class="number">0</span>,<span class="number">2</span>,<span class="number">5</span>);<span class="comment">//抖</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">OLED_Clear();</span><br><span class="line">OLED_ShowString(<span class="number">6</span>,<span class="number">3</span>,<span class="string">&quot;0.96&#x27; OLED TEST&quot;</span>,<span class="number">16</span>);<span class="comment">//显示字符串（x,y,字符串,字号）</span></span><br><span class="line">OLED_Clear();</span><br><span class="line">OLED_ShowNum(<span class="number">103</span>,<span class="number">6</span>,<span class="number">224</span>,<span class="number">3</span>,<span class="number">16</span>);<span class="comment">//显示数字（x,y,数字,数字个数,字号）</span></span><br><span class="line">OLED_Clear();</span><br><span class="line">OLED_DrawBMP(<span class="number">0</span>,<span class="number">0</span>,<span class="number">128</span>,<span class="number">8</span>,BMP1);<span class="comment">//（1,2：左上角坐标，3,4：右下角坐标，图片字模）</span></span><br><span class="line">OLED_Clear();</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">DHT11_Write(&amp;H, &amp;T);</span><br><span class="line"><span class="built_in">sprintf</span>(DHT11_Buf,<span class="string">&quot;H2:%d T2:%d&quot;</span>,H,T);<span class="comment">//将形式字符赋值给DHT11_Buf</span></span><br><span class="line">OLED_ShowString(<span class="number">0</span>,<span class="number">4</span>,DHT11_Buf,<span class="number">16</span>);<span class="comment">//发送字符串</span></span><br><span class="line">Delay1000ms();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="main-h"><a href="#main-h" class="headerlink" title="main.h"></a>main.h</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __MAIN_H__</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __MAIN_H__</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;reg52.h&quot;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">unsigned</span> <span class="type">char</span> uchar;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br></pre></td></tr></table></figure><h2 id="iic-c"><a href="#iic-c" class="headerlink" title="iic.c"></a>iic.c</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;iic.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;delay.h&quot;</span></span></span><br><span class="line">uchar i = <span class="number">0</span>;</span><br><span class="line"><span class="comment">//开始标志时序</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">IIC_start</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//一开始SCL和SDA都为高电平</span></span><br><span class="line">IIC_SCL = <span class="number">1</span>;</span><br><span class="line">IIC_SDA = <span class="number">1</span>;</span><br><span class="line">Delay5us();<span class="comment">//10us一个周期</span></span><br><span class="line">IIC_SDA = <span class="number">0</span>;<span class="comment">//大概一半周期SDA变低电平</span></span><br><span class="line">Delay5us();<span class="comment">//再过半个周期</span></span><br><span class="line">IIC_SCL = <span class="number">0</span>;<span class="comment">//SCL变低电平</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//结束标志时序</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">IIC_stop</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//一开始SCL、SDA都为低电平</span></span><br><span class="line">IIC_SCL = <span class="number">0</span>;</span><br><span class="line">IIC_SDA = <span class="number">0</span>;</span><br><span class="line">Delay5us();</span><br><span class="line">IIC_SCL = <span class="number">1</span>;<span class="comment">//过半个周期SCL变高电平</span></span><br><span class="line">Delay5us();</span><br><span class="line">IIC_SDA = <span class="number">1</span>;<span class="comment">//过半个周期SDA变高电平</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//写数据</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">IIC_write</span><span class="params">(uchar a1)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(i = <span class="number">0</span>;i &lt; <span class="number">8</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">a1 &lt;&lt;= <span class="number">1</span>;</span><br><span class="line">IIC_SDA = CY;<span class="comment">//进位标志位，左移溢出的保存在CY里</span></span><br><span class="line">IIC_SCL = <span class="number">0</span>;</span><br><span class="line">Delay5us();</span><br><span class="line">IIC_SCL = <span class="number">1</span>;</span><br><span class="line">Delay5us();</span><br><span class="line">IIC_SCL = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//应答</span></span><br><span class="line">IIC_SDA = <span class="number">0</span>;</span><br><span class="line">IIC_SCL = <span class="number">0</span>;</span><br><span class="line">Delay5us();</span><br><span class="line">IIC_SCL = <span class="number">1</span>;</span><br><span class="line">Delay5us();</span><br><span class="line">IIC_SCL = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="iic-h"><a href="#iic-h" class="headerlink" title="iic.h"></a>iic.h</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __IIC_H__</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __IIC_H__</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;main.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">IIC_start</span><span class="params">()</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">IIC_stop</span><span class="params">()</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">IIC_write</span><span class="params">(uchar a1)</span>;</span><br><span class="line"><span class="comment">//定义时间线和数据线</span></span><br><span class="line">sbit IIC_SCL = P1^<span class="number">5</span>;</span><br><span class="line">sbit IIC_SDA = P1^<span class="number">4</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br></pre></td></tr></table></figure><h2 id="oled-c"><a href="#oled-c" class="headerlink" title="oled.c"></a>oled.c</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;oled.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;oledfont.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;iic.h&quot;</span></span></span><br><span class="line"><span class="comment">/**********************************************</span></span><br><span class="line"><span class="comment">// IIC Write Command</span></span><br><span class="line"><span class="comment">**********************************************/</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Write_IIC_Command</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> IIC_Command)</span></span><br><span class="line">&#123;</span><br><span class="line">   IIC_start();</span><br><span class="line">   IIC_write(<span class="number">0x78</span>);            <span class="comment">//Slave address,SA0=0</span></span><br><span class="line">   IIC_write(<span class="number">0x00</span>);<span class="comment">//write command</span></span><br><span class="line">   IIC_write(IIC_Command); </span><br><span class="line">   IIC_stop();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**********************************************</span></span><br><span class="line"><span class="comment">// IIC Write Data</span></span><br><span class="line"><span class="comment">**********************************************/</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Write_IIC_Data</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> IIC_Data)</span></span><br><span class="line">&#123;</span><br><span class="line">   IIC_start();</span><br><span class="line">   IIC_write(<span class="number">0x78</span>);<span class="comment">//D/C#=0; R/W#=0</span></span><br><span class="line">   IIC_write(<span class="number">0x40</span>);<span class="comment">//write data</span></span><br><span class="line">   IIC_write(IIC_Data);</span><br><span class="line">   IIC_stop();</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_WR_Byte</span><span class="params">(<span class="type">unsigned</span> dat,<span class="type">unsigned</span> cmd)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(cmd)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">   Write_IIC_Data(dat);</span><br><span class="line">   </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">   Write_IIC_Command(dat);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/********************************************</span></span><br><span class="line"><span class="comment">// fill_Picture</span></span><br><span class="line"><span class="comment">********************************************/</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">fill_picture</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> fill_Data)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> m,n;</span><br><span class="line"><span class="keyword">for</span>(m=<span class="number">0</span>;m&lt;<span class="number">8</span>;m++)</span><br><span class="line">&#123;</span><br><span class="line">OLED_WR_Byte(<span class="number">0xb0</span>+m,<span class="number">0</span>);<span class="comment">//page0-page1</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0x00</span>,<span class="number">0</span>);<span class="comment">//low column start address</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0x10</span>,<span class="number">0</span>);<span class="comment">//high column start address</span></span><br><span class="line"><span class="keyword">for</span>(n=<span class="number">0</span>;n&lt;<span class="number">128</span>;n++)</span><br><span class="line">&#123;</span><br><span class="line">OLED_WR_Byte(fill_Data,<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/***********************Delay****************************************/</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay_50ms</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> Del_50ms)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> m;</span><br><span class="line"><span class="keyword">for</span>(;Del_50ms&gt;<span class="number">0</span>;Del_50ms--)</span><br><span class="line"><span class="keyword">for</span>(m=<span class="number">6245</span>;m&gt;<span class="number">0</span>;m--);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay_1ms</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> Del_1ms)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> j;</span><br><span class="line"><span class="keyword">while</span>(Del_1ms--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;<span class="number">123</span>;j++);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//坐标设置</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_Set_Pos</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> x, <span class="type">unsigned</span> <span class="type">char</span> y)</span> </span><br><span class="line">&#123; OLED_WR_Byte(<span class="number">0xb0</span>+y,OLED_CMD);</span><br><span class="line">OLED_WR_Byte(((x&amp;<span class="number">0xf0</span>)&gt;&gt;<span class="number">4</span>)|<span class="number">0x10</span>,OLED_CMD);</span><br><span class="line">OLED_WR_Byte((x&amp;<span class="number">0x0f</span>),OLED_CMD); </span><br><span class="line">&#125;     </span><br><span class="line"><span class="comment">//开启OLED显示    </span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_Display_On</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">OLED_WR_Byte(<span class="number">0X8D</span>,OLED_CMD);  <span class="comment">//SET DCDC命令</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0X14</span>,OLED_CMD);  <span class="comment">//DCDC ON</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0XAF</span>,OLED_CMD);  <span class="comment">//DISPLAY ON</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//关闭OLED显示     </span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_Display_Off</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">OLED_WR_Byte(<span class="number">0X8D</span>,OLED_CMD);  <span class="comment">//SET DCDC命令</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0X10</span>,OLED_CMD);  <span class="comment">//DCDC OFF</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0XAE</span>,OLED_CMD);  <span class="comment">//DISPLAY OFF</span></span><br><span class="line">&#125;    </span><br><span class="line"><span class="comment">//清屏函数,清完屏,整个屏幕是黑色的!和没点亮一样!!!  </span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_Clear</span><span class="params">(<span class="type">void</span>)</span>  </span><br><span class="line">&#123;  </span><br><span class="line">u8 i,n;    </span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">8</span>;i++)  </span><br><span class="line">&#123;  </span><br><span class="line">OLED_WR_Byte (<span class="number">0xb0</span>+i,OLED_CMD);    <span class="comment">//设置页地址（0~7）</span></span><br><span class="line">OLED_WR_Byte (<span class="number">0x00</span>,OLED_CMD);      <span class="comment">//设置显示位置—列低地址</span></span><br><span class="line">OLED_WR_Byte (<span class="number">0x10</span>,OLED_CMD);      <span class="comment">//设置显示位置—列高地址   </span></span><br><span class="line"><span class="keyword">for</span>(n=<span class="number">0</span>;n&lt;<span class="number">128</span>;n++)OLED_WR_Byte(<span class="number">0</span>,OLED_DATA); </span><br><span class="line">&#125; <span class="comment">//更新显示</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_On</span><span class="params">(<span class="type">void</span>)</span>  </span><br><span class="line">&#123;  </span><br><span class="line">u8 i,n;    </span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">8</span>;i++)  </span><br><span class="line">&#123;  </span><br><span class="line">OLED_WR_Byte (<span class="number">0xb0</span>+i,OLED_CMD);    <span class="comment">//设置页地址（0~7）</span></span><br><span class="line">OLED_WR_Byte (<span class="number">0x00</span>,OLED_CMD);      <span class="comment">//设置显示位置—列低地址</span></span><br><span class="line">OLED_WR_Byte (<span class="number">0x10</span>,OLED_CMD);      <span class="comment">//设置显示位置—列高地址   </span></span><br><span class="line"><span class="keyword">for</span>(n=<span class="number">0</span>;n&lt;<span class="number">128</span>;n++)OLED_WR_Byte(<span class="number">1</span>,OLED_DATA); </span><br><span class="line">&#125; <span class="comment">//更新显示</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//在指定位置显示一个字符,包括部分字符</span></span><br><span class="line"><span class="comment">//x:0~127</span></span><br><span class="line"><span class="comment">//y:0~63</span></span><br><span class="line"><span class="comment">//mode:0,反白显示;1,正常显示 </span></span><br><span class="line"><span class="comment">//size:选择字体 16/12 </span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_ShowChar</span><span class="params">(u8 x,u8 y,u8 chr,u8 Char_Size)</span></span><br><span class="line">&#123;      </span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> c=<span class="number">0</span>,i=<span class="number">0</span>;</span><br><span class="line">c=chr-<span class="string">&#x27; &#x27;</span>;<span class="comment">//得到偏移后的值</span></span><br><span class="line"><span class="keyword">if</span>(x&gt;Max_Column<span class="number">-1</span>)&#123;x=<span class="number">0</span>;y=y+<span class="number">2</span>;&#125;</span><br><span class="line"><span class="keyword">if</span>(Char_Size ==<span class="number">16</span>)</span><br><span class="line">&#123;</span><br><span class="line">OLED_Set_Pos(x,y);</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">8</span>;i++)</span><br><span class="line">OLED_WR_Byte(F8X16[c*<span class="number">16</span>+i],OLED_DATA);</span><br><span class="line">OLED_Set_Pos(x,y+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">8</span>;i++)</span><br><span class="line">OLED_WR_Byte(F8X16[c*<span class="number">16</span>+i+<span class="number">8</span>],OLED_DATA);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">OLED_Set_Pos(x,y);</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">6</span>;i++)</span><br><span class="line">OLED_WR_Byte(F6x8[c][i],OLED_DATA);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//m^n函数</span></span><br><span class="line">u32 <span class="title function_">oled_pow</span><span class="params">(u8 m,u8 n)</span></span><br><span class="line">&#123;</span><br><span class="line">u32 result=<span class="number">1</span>; </span><br><span class="line"><span class="keyword">while</span>(n--)result*=m;    </span><br><span class="line"><span class="keyword">return</span> result;</span><br><span class="line">&#125;  </span><br><span class="line"><span class="comment">//显示2个数字</span></span><br><span class="line"><span class="comment">//x,y :起点坐标 </span></span><br><span class="line"><span class="comment">//len :数字的位数</span></span><br><span class="line"><span class="comment">//size:字体大小</span></span><br><span class="line"><span class="comment">//mode:模式0,填充模式;1,叠加模式</span></span><br><span class="line"><span class="comment">//num:数值(0~4294967295);   </span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_ShowNum</span><span class="params">(u8 x,u8 y,u32 num,u8 len,u8 size2)</span></span><br><span class="line">&#123;         </span><br><span class="line">u8 t,temp;</span><br><span class="line">u8 enshow=<span class="number">0</span>;   </span><br><span class="line"><span class="keyword">for</span>(t=<span class="number">0</span>;t&lt;len;t++)</span><br><span class="line">&#123;</span><br><span class="line">temp=(num/oled_pow(<span class="number">10</span>,len-t<span class="number">-1</span>))%<span class="number">10</span>;</span><br><span class="line"><span class="keyword">if</span>(enshow==<span class="number">0</span>&amp;&amp;t&lt;(len<span class="number">-1</span>))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(temp==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">OLED_ShowChar(x+(size2/<span class="number">2</span>)*t,y,<span class="string">&#x27; &#x27;</span>,size2);</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;<span class="keyword">else</span> enshow=<span class="number">1</span>; </span><br><span class="line">  </span><br><span class="line">&#125;</span><br><span class="line"> OLED_ShowChar(x+(size2/<span class="number">2</span>)*t,y,temp+<span class="string">&#x27;0&#x27;</span>,size2); </span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br><span class="line"><span class="comment">//显示一个字符号串</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_ShowString</span><span class="params">(u8 x,u8 y,u8 *chr,u8 Char_Size)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> j=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (chr[j]!=<span class="string">&#x27;\0&#x27;</span>)</span><br><span class="line">&#123;OLED_ShowChar(x,y,chr[j],Char_Size);</span><br><span class="line">x+=<span class="number">8</span>;</span><br><span class="line"><span class="keyword">if</span>(x&gt;<span class="number">120</span>)&#123;x=<span class="number">0</span>;y+=<span class="number">2</span>;&#125;</span><br><span class="line">j++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//显示汉字</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_ShowCHinese</span><span class="params">(u8 x,u8 y,u8 no)</span></span><br><span class="line">&#123;          </span><br><span class="line">u8 t,adder=<span class="number">0</span>;</span><br><span class="line">OLED_Set_Pos(x,y);</span><br><span class="line">    <span class="keyword">for</span>(t=<span class="number">0</span>;t&lt;<span class="number">16</span>;t++)</span><br><span class="line">&#123;</span><br><span class="line">OLED_WR_Byte(Hzk[<span class="number">2</span>*no][t],OLED_DATA);</span><br><span class="line">adder+=<span class="number">1</span>;</span><br><span class="line">     &#125;</span><br><span class="line">OLED_Set_Pos(x,y+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span>(t=<span class="number">0</span>;t&lt;<span class="number">16</span>;t++)</span><br><span class="line">&#123;</span><br><span class="line">OLED_WR_Byte(Hzk[<span class="number">2</span>*no+<span class="number">1</span>][t],OLED_DATA);</span><br><span class="line">adder+=<span class="number">1</span>;</span><br><span class="line">      &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/***********功能描述：显示显示BMP图片128×64起始点坐标(x,y),x的范围0～127，y为页的范围0～7*****************/</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_DrawBMP</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> x0, <span class="type">unsigned</span> <span class="type">char</span> y0,<span class="type">unsigned</span> <span class="type">char</span> x1, <span class="type">unsigned</span> <span class="type">char</span> y1,<span class="type">unsigned</span> <span class="type">char</span> BMP[])</span></span><br><span class="line">&#123; </span><br><span class="line"> <span class="type">unsigned</span> <span class="type">int</span> j=<span class="number">0</span>;</span><br><span class="line"> <span class="type">unsigned</span> <span class="type">char</span> x,y;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">if</span>(y1%<span class="number">8</span>==<span class="number">0</span>) y=y1/<span class="number">8</span>;      </span><br><span class="line">  <span class="keyword">else</span> y=y1/<span class="number">8</span>+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(y=y0;y&lt;y1;y++)</span><br><span class="line">&#123;</span><br><span class="line">OLED_Set_Pos(x0,y);</span><br><span class="line">    <span class="keyword">for</span>(x=x0;x&lt;x1;x++)</span><br><span class="line">    &#123;      </span><br><span class="line">    OLED_WR_Byte(BMP[j++],OLED_DATA);    </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="comment">//初始化SSD1306    </span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_Init</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123; </span><br><span class="line"> </span><br><span class="line">OLED_WR_Byte(<span class="number">0xAE</span>,OLED_CMD);<span class="comment">//--display off</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0x00</span>,OLED_CMD);<span class="comment">//---set low column address</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0x10</span>,OLED_CMD);<span class="comment">//---set high column address</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0x40</span>,OLED_CMD);<span class="comment">//--set start line address  </span></span><br><span class="line">OLED_WR_Byte(<span class="number">0xB0</span>,OLED_CMD);<span class="comment">//--set page address</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0x81</span>,OLED_CMD); <span class="comment">// contract control</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0xFF</span>,OLED_CMD);<span class="comment">//--128   </span></span><br><span class="line">OLED_WR_Byte(<span class="number">0xA1</span>,OLED_CMD);<span class="comment">//set segment remap </span></span><br><span class="line">OLED_WR_Byte(<span class="number">0xA6</span>,OLED_CMD);<span class="comment">//--normal / reverse</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0xA8</span>,OLED_CMD);<span class="comment">//--set multiplex ratio(1 to 64)</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0x3F</span>,OLED_CMD);<span class="comment">//--1/32 duty</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0xC8</span>,OLED_CMD);<span class="comment">//Com scan direction</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0xD3</span>,OLED_CMD);<span class="comment">//-set display offset</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0x00</span>,OLED_CMD);<span class="comment">//</span></span><br><span class="line"></span><br><span class="line">OLED_WR_Byte(<span class="number">0xD5</span>,OLED_CMD);<span class="comment">//set osc division</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0x80</span>,OLED_CMD);<span class="comment">//</span></span><br><span class="line"></span><br><span class="line">OLED_WR_Byte(<span class="number">0xD8</span>,OLED_CMD);<span class="comment">//set area color mode off</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0x05</span>,OLED_CMD);<span class="comment">//</span></span><br><span class="line"></span><br><span class="line">OLED_WR_Byte(<span class="number">0xD9</span>,OLED_CMD);<span class="comment">//Set Pre-Charge Period</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0xF1</span>,OLED_CMD);<span class="comment">//</span></span><br><span class="line"></span><br><span class="line">OLED_WR_Byte(<span class="number">0xDA</span>,OLED_CMD);<span class="comment">//set com pin configuartion</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0x12</span>,OLED_CMD);<span class="comment">//</span></span><br><span class="line"></span><br><span class="line">OLED_WR_Byte(<span class="number">0xDB</span>,OLED_CMD);<span class="comment">//set Vcomh</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0x30</span>,OLED_CMD);<span class="comment">//</span></span><br><span class="line"></span><br><span class="line">OLED_WR_Byte(<span class="number">0x8D</span>,OLED_CMD);<span class="comment">//set charge pump enable</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0x14</span>,OLED_CMD);<span class="comment">//</span></span><br><span class="line"></span><br><span class="line">OLED_WR_Byte(<span class="number">0xAF</span>,OLED_CMD);<span class="comment">//--turn on oled panel</span></span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure><h2 id="oled-h"><a href="#oled-h" class="headerlink" title="oled.h"></a>oled.h</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __OLED_H__</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __OLED_H__</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>  u8 unsigned char </span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>  u32 unsigned int </span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> OLED_CMD  0<span class="comment">//写命令</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> OLED_DATA 1<span class="comment">//写数据</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> OLED_MODE 0</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//OLED模式设置</span></span><br><span class="line"><span class="comment">//0:4线串行模式</span></span><br><span class="line"><span class="comment">//1:并行8080模式</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SIZE 16</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> XLevelL0x02</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> XLevelH0x10</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> Max_Column128</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> Max_Row64</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>Brightness0xFF </span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> X_WIDTH 128</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> Y_WIDTH 64      </span></span><br><span class="line"><span class="comment">//-----------------OLED端口定义----------------     </span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">delay_ms</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> ms)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//OLED控制用函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_WR_Byte</span><span class="params">(<span class="type">unsigned</span> dat,<span class="type">unsigned</span> cmd)</span>;  </span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_Display_On</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_Display_Off</span><span class="params">(<span class="type">void</span>)</span>;          </span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_Init</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_Clear</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_DrawPoint</span><span class="params">(u8 x,u8 y,u8 t)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_Fill</span><span class="params">(u8 x1,u8 y1,u8 x2,u8 y2,u8 dot)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_ShowChar</span><span class="params">(u8 x,u8 y,u8 chr,u8 Char_Size)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_ShowNum</span><span class="params">(u8 x,u8 y,u32 num,u8 len,u8 size)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_ShowString</span><span class="params">(u8 x,u8 y, u8 *p,u8 Char_Size)</span>; </span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_Set_Pos</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> x, <span class="type">unsigned</span> <span class="type">char</span> y)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_ShowCHinese</span><span class="params">(u8 x,u8 y,u8 no)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_DrawBMP</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> x0, <span class="type">unsigned</span> <span class="type">char</span> y0,<span class="type">unsigned</span> <span class="type">char</span> x1, <span class="type">unsigned</span> <span class="type">char</span> y1,<span class="type">unsigned</span> <span class="type">char</span> BMP[])</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay_50ms</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> Del_50ms)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay_1ms</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> Del_1ms)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">fill_picture</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> fill_Data)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">Picture</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Write_IIC_Command</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> IIC_Command)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">Write_IIC_Data</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> IIC_Data)</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="delay-c"><a href="#delay-c" class="headerlink" title="delay.c"></a>delay.c</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;delay.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;intrins.h&gt;</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay5us</span><span class="params">()</span><span class="comment">//@11.0592MHz</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay30us</span><span class="params">()</span><span class="comment">//@11.0592MHz</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> data i;</span><br><span class="line"></span><br><span class="line">i = <span class="number">11</span>;</span><br><span class="line"><span class="keyword">while</span> (--i);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay25ms</span><span class="params">()</span><span class="comment">//@11.0592MHz</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> data i, j;</span><br><span class="line"></span><br><span class="line">i = <span class="number">45</span>;</span><br><span class="line">j = <span class="number">208</span>;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">while</span> (--j);</span><br><span class="line">&#125; <span class="keyword">while</span> (--i);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay1000ms</span><span class="params">()</span>    <span class="comment">//@11.0592MHz</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">unsigned</span> <span class="type">char</span> data i, j, k;</span><br><span class="line">  _nop_();</span><br><span class="line">  i = <span class="number">8</span>;</span><br><span class="line">  j = <span class="number">1</span>;</span><br><span class="line">  k = <span class="number">243</span>;</span><br><span class="line">  <span class="keyword">do</span></span><br><span class="line">  &#123;</span><br><span class="line">     <span class="keyword">do</span></span><br><span class="line">     &#123;</span><br><span class="line">       <span class="keyword">while</span> (--k);</span><br><span class="line">     &#125; <span class="keyword">while</span> (--j);</span><br><span class="line">  &#125; <span class="keyword">while</span> (--i);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="delay-h"><a href="#delay-h" class="headerlink" title="delay.h"></a>delay.h</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __DELAY_H__</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __DELAY_H__</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay5us</span><span class="params">()</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay30us</span><span class="params">()</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay25ms</span><span class="params">()</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay1000ms</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;DHT11介绍分析&quot;&gt;&lt;a href=&quot;#DHT11介绍分析&quot; class=&quot;headerlink&quot; title=&quot;DHT11介绍分析&quot;&gt;&lt;/a&gt;&lt;center&gt;DHT11介绍分析&lt;/center&gt;&lt;/h1&gt;&lt;p&gt;HT11数字温湿度传感器&lt;/p&gt;
&lt;p&gt;数据格式(</summary>
      
    
    
    
    <category term="51单片机" scheme="http://example.com/categories/51%E5%8D%95%E7%89%87%E6%9C%BA/"/>
    
    
    <category term="51单片机" scheme="http://example.com/tags/51%E5%8D%95%E7%89%87%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>6.IIC通信</title>
    <link href="http://example.com/post/f5fba2c3.html"/>
    <id>http://example.com/post/f5fba2c3.html</id>
    <published>2024-06-19T08:41:34.000Z</published>
    <updated>2024-07-13T02:10:41.820Z</updated>
    
    <content type="html"><![CDATA[<h1 id="IIC理论"><a href="#IIC理论" class="headerlink" title="IIC理论"></a><center>IIC理论</center></h1><h2 id="实现方式"><a href="#实现方式" class="headerlink" title="实现方式"></a><center>实现方式</center></h2><p>软件IIC：流程清楚、占用时间、速度慢</p><p>硬件IIC ：用法复杂、速度快、可以用DMA</p><h2 id="电路"><a href="#电路" class="headerlink" title="电路"></a><center>电路</center></h2><p>SCL：时钟线，SDA：数据线</p><p>上拉电阻：4.7k-10k</p><h2 id="速率"><a href="#速率" class="headerlink" title="速率"></a><center>速率</center></h2><p>标准模式：100Kb&#x2F;s、快速模式：400Kb&#x2F;s、高速模式：3.4Mb&#x2F;s</p><p>100kbit&#x2F;s 是指1秒钟传输100kbit。1个时钟脉冲只能传输1bit数据。1秒中内要传输100kbit数据，则需要100k个时钟脉冲。每个时钟脉冲的周期 T&#x3D;1&#x2F;100 000 &#x3D; 10us</p><p>HZ和bit&#x2F;s是一个相同的概念。时钟周期为1HZ，则传输数据的速率为1bit&#x2F;s；时钟周期为100KHZ，则传输数据的速率为100kbit&#x2F;s</p><h2 id="时序"><a href="#时序" class="headerlink" title="时序"></a><center>时序</center></h2><p><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic/img/202407091551334.png" alt="时钟信号图"></p><h3 id="空闲状态"><a href="#空闲状态" class="headerlink" title="空闲状态"></a>空闲状态</h3><p>SDA和SCL全为高电平</p><h3 id="开始信号"><a href="#开始信号" class="headerlink" title="开始信号"></a>开始信号</h3><p>当SCL为高电平时，SDA<code>由高到低</code>的跳变：表示数据传输的开始</p><h3 id="停止信号"><a href="#停止信号" class="headerlink" title="停止信号"></a>停止信号</h3><p>当SCL为高电平时，SDA<code>由低到高</code>的跳变：表示数据的结束</p><h3 id="读写操作"><a href="#读写操作" class="headerlink" title="读写操作"></a>读写操作</h3><ul><li>发送从机地址<ul><li>每个 I2C 器件都有一个设备地址<ul><li>先发送设备地址来决定访问哪个 I2C 器件</li></ul></li><li>发送8位数据<ul><li>高 7 位是设备地址,后 1 位是读写位<ul><li>1 表示读操作</li><li>0表示写操作</li></ul></li></ul></li><li>应答信号  <ul><li>发端在SDA上每发送一个字节的数据，在SCL第9个时钟期间释放该数据线SDA</li><li>接收端反馈一个应答信号<ul><li>应答信号为低电平时：规定为有效应答（ACK），表示已地接收了</li><li>该字节应答信号为高电平时，规定为非应答（NACK），表示没有成功接收该字节</li><li>有时候简单的软件IIC不校验ACK</li></ul></li></ul></li><li>读写数据<ul><li>根据前一个字节的读写位，确定读写</li></ul></li></ul></li></ul><h2 id="总线设备相关"><a href="#总线设备相关" class="headerlink" title="总线设备相关"></a><center>总线设备相关</center></h2><p>总线最多挂载2^7-1&#x3D;127个设备（0地址不算）</p><p>设备枚举（for）</p><h1 id="代码编写"><a href="#代码编写" class="headerlink" title="代码编写"></a><center>代码编写</center></h1><p>OLED屏的使用</p><h2 id="iic-c（主要）"><a href="#iic-c（主要）" class="headerlink" title="iic.c（主要）"></a>iic.c（主要）</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;iic.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;delay.h&quot;</span></span></span><br><span class="line"><span class="comment">//参考上面时序图理解（按时间先为主判断）</span></span><br><span class="line"><span class="comment">//开始</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">IIC_Start</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">IIC_SCL = <span class="number">1</span>;</span><br><span class="line">IIC_SDA = <span class="number">1</span>;</span><br><span class="line">Delay5us();</span><br><span class="line">IIC_SDA = <span class="number">0</span>;</span><br><span class="line">Delay5us();</span><br><span class="line">IIC_SCL = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//结束</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">IIC_Stop</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">IIC_SCL = <span class="number">1</span>;</span><br><span class="line">IIC_SDA = <span class="number">0</span>;</span><br><span class="line">Delay5us();</span><br><span class="line">IIC_SDA = <span class="number">1</span>;</span><br><span class="line">Delay5us();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//发送数据</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">IIC_Write_Byte</span><span class="params">(uchar wbyte)</span></span><br><span class="line">&#123;</span><br><span class="line">uchar i;</span><br><span class="line"><span class="keyword">for</span>(i = <span class="number">0</span>;i &lt; <span class="number">8</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">wbyte &lt;&lt;= <span class="number">1</span>;</span><br><span class="line">IIC_SDA = CY;<span class="comment">//进位标志位，左移溢出的保存在CY里</span></span><br><span class="line">IIC_SCL = <span class="number">1</span>;</span><br><span class="line">Delay5us();</span><br><span class="line">IIC_SCL = <span class="number">0</span>;</span><br><span class="line">Delay5us();</span><br><span class="line">&#125;</span><br><span class="line">IIC_SCL = <span class="number">1</span>;</span><br><span class="line">Delay5us();</span><br><span class="line">IIC_SCL = <span class="number">0</span>;</span><br><span class="line">Delay5us();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="iic-h"><a href="#iic-h" class="headerlink" title="iic.h"></a>iic.h</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __IIC_H__</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __IIC_H__</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;main.h&gt;</span></span></span><br><span class="line"><span class="comment">//声明三个函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">IIC_Start</span><span class="params">()</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">IIC_Stop</span><span class="params">()</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">IIC_Write_Byte</span><span class="params">(uchar wbyte)</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br></pre></td></tr></table></figure><h2 id="main-c"><a href="#main-c" class="headerlink" title="main.c"></a>main.c</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">#include &quot;iic.h&quot;</span><br><span class="line">#include &quot;oled.h&quot;</span><br><span class="line">#include &quot;bmp.h&quot;</span><br><span class="line">#include &quot;main.h&quot;</span><br><span class="line">void main()</span><br><span class="line">&#123;</span><br><span class="line">u8 t;</span><br><span class="line">OLED_Init();//初始化OLED</span><br><span class="line">OLED_Clear();</span><br><span class="line">OLED_ShowCHinese(0,0,0);//星</span><br><span class="line">OLED_ShowCHinese(18,0,1);//仔</span><br><span class="line">OLED_ShowCHinese(36,0,2);//爱</span><br><span class="line">OLED_ShowCHinese(54,0,3);//分</span><br><span class="line">OLED_ShowCHinese(72,0,4);//享</span><br><span class="line">OLED_ShowCHinese(90,0,5);//抖</span><br><span class="line">OLED_ShowCHinese(108,0,6);//音</span><br><span class="line">OLED_ShowCHinese(0,2,6);//音</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">OLED_Clear();</span><br><span class="line">OLED_ShowString(6,3,&quot;0.96&#x27; OLED TEST&quot;,16);//显示字符串（x,y,字符串,字号）</span><br><span class="line">OLED_Clear();</span><br><span class="line">OLED_ShowNum(103,6,224,3,16);//显示数字（x,y,数字,数字个数,字号）</span><br><span class="line">OLED_Clear();</span><br><span class="line">OLED_DrawBMP(0,0,128,8,BMP1);//（1,2：左上角坐标，3,4：右下角坐标，图片字模）</span><br><span class="line">while(1);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="main-h"><a href="#main-h" class="headerlink" title="main.h"></a>main.h</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __MAIN_H__</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __MAIN_H__</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;reg52.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">unsigned</span> <span class="type">char</span> uchar;</span><br><span class="line"></span><br><span class="line"><span class="comment">//定义时间线和数据线</span></span><br><span class="line">sbit IIC_SCL = P1^<span class="number">5</span>;</span><br><span class="line">sbit IIC_SDA = P1^<span class="number">4</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br></pre></td></tr></table></figure><h2 id="oled-c"><a href="#oled-c" class="headerlink" title="oled.c"></a>oled.c</h2><img src="https://i-blog.csdnimg.cn/direct/5efc024f4fa34e8b9913c4898019aa78.png#pic_center" alt="代码解析1" style="zoom:50%;"><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;oled.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;oledfont.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;iic.h&quot;</span></span></span><br><span class="line"><span class="comment">/**********************************************</span></span><br><span class="line"><span class="comment">// IIC Write Command(命令)</span></span><br><span class="line"><span class="comment">**********************************************/</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Write_IIC_Command</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> IIC_Command)</span></span><br><span class="line">&#123;</span><br><span class="line">   IIC_Start();</span><br><span class="line">   IIC_Write_Byte(<span class="number">0x78</span>);<span class="comment">//从机地址,SA0=0</span></span><br><span class="line">   IIC_Write_Byte(<span class="number">0x00</span>);<span class="comment">//write command</span></span><br><span class="line">   IIC_Write_Byte(IIC_Command); </span><br><span class="line">   IIC_Stop();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**********************************************</span></span><br><span class="line"><span class="comment">// IIC Write Data(数据)</span></span><br><span class="line"><span class="comment">**********************************************/</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Write_IIC_Data</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> IIC_Data)</span></span><br><span class="line">&#123;</span><br><span class="line">   IIC_Start();</span><br><span class="line">   IIC_Write_Byte(<span class="number">0x78</span>);<span class="comment">//D/C#=0; R/W#=0</span></span><br><span class="line">   IIC_Write_Byte(<span class="number">0x40</span>);<span class="comment">//write data</span></span><br><span class="line">   IIC_Write_Byte(IIC_Data);</span><br><span class="line">   IIC_Stop();</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_WR_Byte</span><span class="params">(<span class="type">unsigned</span> dat,<span class="type">unsigned</span> cmd)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(cmd)</span><br><span class="line">&#123;</span><br><span class="line">        Write_IIC_Data(dat);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        Write_IIC_Command(dat);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/********************************************</span></span><br><span class="line"><span class="comment">// fill_Picture</span></span><br><span class="line"><span class="comment">********************************************/</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">fill_picture</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> fill_Data)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> m,n;</span><br><span class="line"><span class="keyword">for</span>(m=<span class="number">0</span>;m&lt;<span class="number">8</span>;m++)</span><br><span class="line">&#123;</span><br><span class="line">OLED_WR_Byte(<span class="number">0xb0</span>+m,<span class="number">0</span>);<span class="comment">//page0-page1</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0x00</span>,<span class="number">0</span>);<span class="comment">//low column start address</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0x10</span>,<span class="number">0</span>);<span class="comment">//high column start address</span></span><br><span class="line"><span class="keyword">for</span>(n=<span class="number">0</span>;n&lt;<span class="number">128</span>;n++)</span><br><span class="line">&#123;</span><br><span class="line">OLED_WR_Byte(fill_Data,<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/***********************Delay****************************************/</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay_50ms</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> Del_50ms)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> m;</span><br><span class="line"><span class="keyword">for</span>(;Del_50ms&gt;<span class="number">0</span>;Del_50ms--)</span><br><span class="line"><span class="keyword">for</span>(m=<span class="number">6245</span>;m&gt;<span class="number">0</span>;m--);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay_1ms</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> Del_1ms)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> j;</span><br><span class="line"><span class="keyword">while</span>(Del_1ms--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;<span class="number">123</span>;j++);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//坐标设置</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_Set_Pos</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> x, <span class="type">unsigned</span> <span class="type">char</span> y)</span> </span><br><span class="line">&#123;</span><br><span class="line">    OLED_WR_Byte(<span class="number">0xb0</span>+y,OLED_CMD);</span><br><span class="line">OLED_WR_Byte(((x&amp;<span class="number">0xf0</span>)&gt;&gt;<span class="number">4</span>)|<span class="number">0x10</span>,OLED_CMD);</span><br><span class="line">OLED_WR_Byte((x&amp;<span class="number">0x0f</span>),OLED_CMD); </span><br><span class="line">&#125;     </span><br><span class="line"><span class="comment">//开启OLED显示    </span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_Display_On</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">OLED_WR_Byte(<span class="number">0X8D</span>,OLED_CMD);  <span class="comment">//SET DCDC命令</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0X14</span>,OLED_CMD);  <span class="comment">//DCDC ON</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0XAF</span>,OLED_CMD);  <span class="comment">//DISPLAY ON</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//关闭OLED显示     </span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_Display_Off</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">OLED_WR_Byte(<span class="number">0X8D</span>,OLED_CMD);  <span class="comment">//SET DCDC命令</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0X10</span>,OLED_CMD);  <span class="comment">//DCDC OFF</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0XAE</span>,OLED_CMD);  <span class="comment">//DISPLAY OFF</span></span><br><span class="line">&#125;    </span><br><span class="line"><span class="comment">//清屏函数,清完屏,整个屏幕是黑色的!和没点亮一样!!!  </span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_Clear</span><span class="params">(<span class="type">void</span>)</span>  </span><br><span class="line">&#123;  </span><br><span class="line">u8 i,n;    </span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">8</span>;i++)  </span><br><span class="line">&#123;  </span><br><span class="line">OLED_WR_Byte (<span class="number">0xb0</span>+i,OLED_CMD);    <span class="comment">//设置页地址（0~7）</span></span><br><span class="line">OLED_WR_Byte (<span class="number">0x00</span>,OLED_CMD);      <span class="comment">//设置显示位置—列低地址</span></span><br><span class="line">OLED_WR_Byte (<span class="number">0x10</span>,OLED_CMD);      <span class="comment">//设置显示位置—列高地址   </span></span><br><span class="line"><span class="keyword">for</span>(n=<span class="number">0</span>;n&lt;<span class="number">128</span>;n++)OLED_WR_Byte(<span class="number">0</span>,OLED_DATA); </span><br><span class="line">&#125; <span class="comment">//更新显示</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_On</span><span class="params">(<span class="type">void</span>)</span>  </span><br><span class="line">&#123;  </span><br><span class="line">u8 i,n;    </span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">8</span>;i++)  </span><br><span class="line">&#123;  </span><br><span class="line">OLED_WR_Byte (<span class="number">0xb0</span>+i,OLED_CMD);<span class="comment">//设置页地址（0~7）</span></span><br><span class="line">OLED_WR_Byte (<span class="number">0x00</span>,OLED_CMD);<span class="comment">//设置显示位置—列低地址</span></span><br><span class="line">OLED_WR_Byte (<span class="number">0x10</span>,OLED_CMD);<span class="comment">//设置显示位置—列高地址   </span></span><br><span class="line"><span class="keyword">for</span>(n=<span class="number">0</span>;n&lt;<span class="number">128</span>;n++)OLED_WR_Byte(<span class="number">1</span>,OLED_DATA); </span><br><span class="line">&#125; <span class="comment">//更新显示</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//在指定位置显示一个字符,包括部分字符</span></span><br><span class="line"><span class="comment">//x:0~127</span></span><br><span class="line"><span class="comment">//y:0~63</span></span><br><span class="line"><span class="comment">//mode:0,反白显示;1,正常显示 </span></span><br><span class="line"><span class="comment">//size:选择字体 16/12 </span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_ShowChar</span><span class="params">(u8 x,u8 y,u8 chr,u8 Char_Size)</span></span><br><span class="line">&#123;      </span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> c=<span class="number">0</span>,i=<span class="number">0</span>;</span><br><span class="line">    c=chr-<span class="string">&#x27; &#x27;</span>;<span class="comment">//得到偏移后的值</span></span><br><span class="line">    <span class="keyword">if</span>(x&gt;Max_Column<span class="number">-1</span>)&#123;x=<span class="number">0</span>;y=y+<span class="number">2</span>;&#125;</span><br><span class="line">    <span class="keyword">if</span>(Char_Size ==<span class="number">16</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        OLED_Set_Pos(x,y);</span><br><span class="line">        <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">8</span>;i++)</span><br><span class="line">        OLED_WR_Byte(F8X16[c*<span class="number">16</span>+i],OLED_DATA);</span><br><span class="line">        OLED_Set_Pos(x,y+<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">8</span>;i++)</span><br><span class="line">        OLED_WR_Byte(F8X16[c*<span class="number">16</span>+i+<span class="number">8</span>],OLED_DATA);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">    &#123;</span><br><span class="line">        OLED_Set_Pos(x,y);</span><br><span class="line">        <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">6</span>;i++)</span><br><span class="line">        OLED_WR_Byte(F6x8[c][i],OLED_DATA);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//m^n函数</span></span><br><span class="line">u32 <span class="title function_">oled_pow</span><span class="params">(u8 m,u8 n)</span></span><br><span class="line">&#123;</span><br><span class="line">u32 result=<span class="number">1</span>; </span><br><span class="line"><span class="keyword">while</span>(n--)result*=m;    </span><br><span class="line"><span class="keyword">return</span> result;</span><br><span class="line">&#125;  </span><br><span class="line"><span class="comment">//显示2个数字</span></span><br><span class="line"><span class="comment">//x,y :起点坐标 </span></span><br><span class="line"><span class="comment">//len :数字的位数</span></span><br><span class="line"><span class="comment">//size:字体大小</span></span><br><span class="line"><span class="comment">//mode:模式0,填充模式;1,叠加模式</span></span><br><span class="line"><span class="comment">//num:数值(0~4294967295);   </span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_ShowNum</span><span class="params">(u8 x,u8 y,u32 num,u8 len,u8 size2)</span></span><br><span class="line">&#123;         </span><br><span class="line">u8 t,temp;</span><br><span class="line">u8 enshow=<span class="number">0</span>;   </span><br><span class="line"><span class="keyword">for</span>(t=<span class="number">0</span>;t&lt;len;t++)</span><br><span class="line">&#123;</span><br><span class="line">temp=(num/oled_pow(<span class="number">10</span>,len-t<span class="number">-1</span>))%<span class="number">10</span>;</span><br><span class="line"><span class="keyword">if</span>(enshow==<span class="number">0</span>&amp;&amp;t&lt;(len<span class="number">-1</span>))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(temp==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">OLED_ShowChar(x+(size2/<span class="number">2</span>)*t,y,<span class="string">&#x27; &#x27;</span>,size2);</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;<span class="keyword">else</span> enshow=<span class="number">1</span>; </span><br><span class="line">&#125;</span><br><span class="line"> OLED_ShowChar(x+(size2/<span class="number">2</span>)*t,y,temp+<span class="string">&#x27;0&#x27;</span>,size2); </span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br><span class="line"><span class="comment">//显示一个字符号串</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_ShowString</span><span class="params">(u8 x,u8 y,u8 *chr,u8 Char_Size)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> j=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (chr[j]!=<span class="string">&#x27;\0&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line">        OLED_ShowChar(x,y,chr[j],Char_Size);</span><br><span class="line">x+=<span class="number">8</span>;</span><br><span class="line"><span class="keyword">if</span>(x&gt;<span class="number">120</span>)&#123;x=<span class="number">0</span>;y+=<span class="number">2</span>;&#125;</span><br><span class="line">j++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//显示汉字</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_ShowCHinese</span><span class="params">(u8 x,u8 y,u8 no)</span></span><br><span class="line">&#123;          </span><br><span class="line">u8 t,adder=<span class="number">0</span>;</span><br><span class="line">OLED_Set_Pos(x,y);</span><br><span class="line">    <span class="keyword">for</span>(t=<span class="number">0</span>;t&lt;<span class="number">16</span>;t++)</span><br><span class="line">&#123;</span><br><span class="line">        OLED_WR_Byte(Hzk[<span class="number">2</span>*no][t],OLED_DATA);</span><br><span class="line">adder+=<span class="number">1</span>;</span><br><span class="line">     &#125;</span><br><span class="line">OLED_Set_Pos(x,y+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span>(t=<span class="number">0</span>;t&lt;<span class="number">16</span>;t++)</span><br><span class="line">&#123;</span><br><span class="line">        OLED_WR_Byte(Hzk[<span class="number">2</span>*no+<span class="number">1</span>][t],OLED_DATA);</span><br><span class="line">        adder += <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/***********功能描述：显示显示BMP图片128×64起始点坐标(x,y),x的范围0～127，y为页的范围0～7*****************/</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_DrawBMP</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> x0, <span class="type">unsigned</span> <span class="type">char</span> y0,<span class="type">unsigned</span> <span class="type">char</span> x1, <span class="type">unsigned</span> <span class="type">char</span> y1,<span class="type">unsigned</span> <span class="type">char</span> BMP[])</span></span><br><span class="line">&#123; </span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> j=<span class="number">0</span>;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">char</span> x,y;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(y1%<span class="number">8</span>==<span class="number">0</span>) y=y1/<span class="number">8</span>;      </span><br><span class="line">    <span class="keyword">else</span> y=y1/<span class="number">8</span>+<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(y=y0;y&lt;y1;y++)</span><br><span class="line">    &#123;</span><br><span class="line">        OLED_Set_Pos(x0,y);</span><br><span class="line">    <span class="keyword">for</span>(x=x0;x&lt;x1;x++)</span><br><span class="line">        &#123;      </span><br><span class="line">            OLED_WR_Byte(BMP[j++],OLED_DATA);    </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="comment">//初始化SSD1306    </span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_Init</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123; </span><br><span class="line"> </span><br><span class="line">OLED_WR_Byte(<span class="number">0xAE</span>,OLED_CMD);<span class="comment">//--display off</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0x00</span>,OLED_CMD);<span class="comment">//---set low column address</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0x10</span>,OLED_CMD);<span class="comment">//---set high column address</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0x40</span>,OLED_CMD);<span class="comment">//--set start line address  </span></span><br><span class="line">OLED_WR_Byte(<span class="number">0xB0</span>,OLED_CMD);<span class="comment">//--set page address</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0x81</span>,OLED_CMD); <span class="comment">// contract control</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0xFF</span>,OLED_CMD);<span class="comment">//--128   </span></span><br><span class="line">OLED_WR_Byte(<span class="number">0xA1</span>,OLED_CMD);<span class="comment">//set segment remap </span></span><br><span class="line">OLED_WR_Byte(<span class="number">0xA6</span>,OLED_CMD);<span class="comment">//--normal / reverse</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0xA8</span>,OLED_CMD);<span class="comment">//--set multiplex ratio(1 to 64)</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0x3F</span>,OLED_CMD);<span class="comment">//--1/32 duty</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0xC8</span>,OLED_CMD);<span class="comment">//Com scan direction</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0xD3</span>,OLED_CMD);<span class="comment">//-set display offset</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0x00</span>,OLED_CMD);<span class="comment">//</span></span><br><span class="line"></span><br><span class="line">OLED_WR_Byte(<span class="number">0xD5</span>,OLED_CMD);<span class="comment">//set osc division</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0x80</span>,OLED_CMD);<span class="comment">//</span></span><br><span class="line"></span><br><span class="line">OLED_WR_Byte(<span class="number">0xD8</span>,OLED_CMD);<span class="comment">//set area color mode off</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0x05</span>,OLED_CMD);<span class="comment">//</span></span><br><span class="line"></span><br><span class="line">OLED_WR_Byte(<span class="number">0xD9</span>,OLED_CMD);<span class="comment">//Set Pre-Charge Period</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0xF1</span>,OLED_CMD);<span class="comment">//</span></span><br><span class="line"></span><br><span class="line">OLED_WR_Byte(<span class="number">0xDA</span>,OLED_CMD);<span class="comment">//set com pin configuartion</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0x12</span>,OLED_CMD);<span class="comment">//</span></span><br><span class="line"></span><br><span class="line">OLED_WR_Byte(<span class="number">0xDB</span>,OLED_CMD);<span class="comment">//set Vcomh</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0x30</span>,OLED_CMD);<span class="comment">//</span></span><br><span class="line"></span><br><span class="line">OLED_WR_Byte(<span class="number">0x8D</span>,OLED_CMD);<span class="comment">//set charge pump enable</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0x14</span>,OLED_CMD);<span class="comment">//</span></span><br><span class="line"></span><br><span class="line">OLED_WR_Byte(<span class="number">0xAF</span>,OLED_CMD);<span class="comment">//--turn on oled panel</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="oled-h"><a href="#oled-h" class="headerlink" title="oled.h"></a>oled.h</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __OLED_H__</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __OLED_H__</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>  u8 unsigned char </span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>  u32 unsigned int </span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> OLED_CMD  0<span class="comment">//写命令</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> OLED_DATA 1<span class="comment">//写数据</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> OLED_MODE 0</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//OLED模式设置</span></span><br><span class="line"><span class="comment">//0:4线串行模式</span></span><br><span class="line"><span class="comment">//1:并行8080模式</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SIZE 16</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> XLevelL0x02</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> XLevelH0x10</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> Max_Column128</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> Max_Row64</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>Brightness0xFF </span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> X_WIDTH 128</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> Y_WIDTH 64      </span></span><br><span class="line"><span class="comment">//-----------------OLED端口定义----------------     </span></span><br><span class="line"><span class="type">void</span> <span class="title function_">delay_ms</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> ms)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//OLED控制用函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_WR_Byte</span><span class="params">(<span class="type">unsigned</span> dat,<span class="type">unsigned</span> cmd)</span>;  </span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_Display_On</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_Display_Off</span><span class="params">(<span class="type">void</span>)</span>;          </span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_Init</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_Clear</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_DrawPoint</span><span class="params">(u8 x,u8 y,u8 t)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_Fill</span><span class="params">(u8 x1,u8 y1,u8 x2,u8 y2,u8 dot)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_ShowChar</span><span class="params">(u8 x,u8 y,u8 chr,u8 Char_Size)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_ShowNum</span><span class="params">(u8 x,u8 y,u32 num,u8 len,u8 size)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_ShowString</span><span class="params">(u8 x,u8 y, u8 *p,u8 Char_Size)</span>; </span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_Set_Pos</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> x, <span class="type">unsigned</span> <span class="type">char</span> y)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_ShowCHinese</span><span class="params">(u8 x,u8 y,u8 no)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_DrawBMP</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> x0, <span class="type">unsigned</span> <span class="type">char</span> y0,<span class="type">unsigned</span> <span class="type">char</span> x1, <span class="type">unsigned</span> <span class="type">char</span> y1,<span class="type">unsigned</span> <span class="type">char</span> BMP[])</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay_50ms</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> Del_50ms)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay_1ms</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> Del_1ms)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">fill_picture</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> fill_Data)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">Picture</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Write_IIC_Command</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> IIC_Command)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">Write_IIC_Data</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> IIC_Data)</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br></pre></td></tr></table></figure><p>oledfont.h、bmp.h为字符字模、图片字模</p><h2 id="delay-c"><a href="#delay-c" class="headerlink" title="delay.c"></a>delay.c</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;delay.h&quot;</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay5us</span><span class="params">()</span><span class="comment">//@11.0592MHz</span></span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="delay-h"><a href="#delay-h" class="headerlink" title="delay.h"></a>delay.h</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __DELAY_H__</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __DELAY_H__</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay5us</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;IIC理论&quot;&gt;&lt;a href=&quot;#IIC理论&quot; class=&quot;headerlink&quot; title=&quot;IIC理论&quot;&gt;&lt;/a&gt;&lt;center&gt;IIC理论&lt;/center&gt;&lt;/h1&gt;&lt;h2 id=&quot;实现方式&quot;&gt;&lt;a href=&quot;#实现方式&quot; class=&quot;headerl</summary>
      
    
    
    
    <category term="51单片机" scheme="http://example.com/categories/51%E5%8D%95%E7%89%87%E6%9C%BA/"/>
    
    
    <category term="51单片机" scheme="http://example.com/tags/51%E5%8D%95%E7%89%87%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>串口</title>
    <link href="http://example.com/post/f736596e.html"/>
    <id>http://example.com/post/f736596e.html</id>
    <published>2024-04-12T02:13:58.000Z</published>
    <updated>2024-07-16T08:33:40.875Z</updated>
    
    <content type="html"><![CDATA[<h1 id="串口的介绍"><a href="#串口的介绍" class="headerlink" title="串口的介绍"></a>串口的介绍</h1><p>UART（通用异步收发器）是一种双向、串行、异步的通信总线，仅用一根数据接收线（RX）和一根数据发送线（TX）就能实现全双工通信</p><p>R：Receiver(接收)，T：Transmit(发送)</p><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic/img/202406111508432.png" alt="数据组成" style="zoom: 33%;"><p>UART 在发送或接收过程中的一帧数据由4部分组成，起始位、数据位、奇偶校验位和停止位</p><p>如图所示。其中，起始位标志着一帧数据的开始，停止位标志着一帧数据的结束，数据位是一帧数据中的有效数据，校验位分为奇校验和偶校验，用于检验数据在传输过程中是否出错。（奇校验时，发送方应使数据位中1的个数与校验位中1的个数之和为奇数；接收方在接收数据时， 对1的个数进行检查，若不为奇数，则说明数据在传输过程中出了差错。同样，偶校验则检查1的个数是否为偶数）</p><p> UART通信过程中的数据格式及传输速率是可设置的，为了正确的通信，收发双方应约定并遵循同样的设置。数据位可选择为5、6、7、8位，其中8位数据位是最常用的，在实际应用中一般都选择8位数据位；校验位可选择奇校验、偶校验或者无校验位；停止位可选择1位（默认）， 1.5或2位</p><p>串口通信的速率用波特率表示，它表示每秒传输二进制数据的位数，单位是bps（位 &#x2F;秒），常用的波特率有9600、19200、38400、57600以及115200等</p><p>如波特率9600则代表每秒传输9600bit数据，以串口发送1个字节10bit算（起始位1bit+数据8bit+停止位1bit+NO校验位），则传输1个字节需要的时间是1*10&#x2F;9600秒</p><p>USART：通用同步&#x2F;异步串行接收&#x2F;发送器</p><h2 id="TTL"><a href="#TTL" class="headerlink" title="TTL"></a>TTL</h2><p>一般单片机产生的都是TTL电平。无论是51、32、还是各种跑Linux的ARM芯片，TTL满足绝大多数调试需求</p><p>TTL串口采用的是单一的信号线 (TX线和RX线) 进行数据传输，其中TX线用于单片机发送数据，RX线用于单片机接收数据。数据传输速率通常可以达到几-kbps至上百kbps的速率，<font color="red">传输距离较短，一般不超过数十米</font></p><p>TTL转USB</p><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic/img/202406111546131.png" alt="例图" style="zoom:50%;"><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic/img/202406111545487.png" alt="传输方向" style="zoom:50%;"><p>TTL的逻辑电平通常是0V和5V，其中0V表示逻辑“0”，5V表示逻辑“1”</p><h2 id="RS-232"><a href="#RS-232" class="headerlink" title="RS-232"></a>RS-232</h2><p>RS-232转USB</p><p>规定逻辑“1”的电平为-5V~-15 V，逻辑“0”的电平为+5 V～+15 V</p><p>由于RS -232采用串行传送方式，并且将TTL电平(某芯片)转换为RS-232C电平，其传送距离一般可达30 m。若采用光电隔离20 mA的电流环进行传送，其传送距离可以达到1000 m</p><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic/img/202406111708423.png" alt="公母头接法" style="zoom: 67%;"><h2 id="RS-485"><a href="#RS-485" class="headerlink" title="RS-485"></a>RS-485</h2><p>传输速度可以达到10Mb&#x2F;s以上，传输距离可以达到3000米左右</p><p>传输方式为：<code>差分方式</code></p><h1 id="分类方式"><a href="#分类方式" class="headerlink" title="分类方式"></a>分类方式</h1><h2 id="串口并口"><a href="#串口并口" class="headerlink" title="串口并口"></a>串口并口</h2><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic/img/202406111729362.png" alt="图解" style="zoom:33%;"><h2 id="同步异步"><a href="#同步异步" class="headerlink" title="同步异步"></a>同步异步</h2><p>异步：通信双方各自约定通信速率</p><p>UART：TX、RX</p><p>1 Wire</p><p>同步：通信双方靠一根时钟线来约定通信速率</p><p>IIC：SDA、SCL</p><p>SPI：MOSI、MISO、SCK、CS</p><p>单工：指消息只能单方向传输的工作方式</p><p>半双工：指信息即可从A到B，也可以从B到A，任一时刻只能有一个方向上的传输存在</p><p>全双工：指在任意时刻线路上存在A到B和B到A的双向信号传输</p><h1 id="相关寄存器"><a href="#相关寄存器" class="headerlink" title="相关寄存器"></a>相关寄存器</h1><h2 id="SCON"><a href="#SCON" class="headerlink" title="SCON"></a>SCON</h2><p>工作模式：01（8位UART波特率可变）其他不用为0</p><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic/img/202406131001458.png" alt="SCON详细1" style="zoom: 67%;"><p>REN &#x3D; 1，接收信息，一开始发送中断标志位、接收中断标志位置0</p><p>TB8：发送校验位，RB8：接收校验位，TI：发送中断，RI：接收中断</p><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic/img/202406131001199.png" alt="SCON详细2" style="zoom: 67%;"><p>则SCON &#x3D; 0x50</p><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic/img/202406131002775.png" alt="SCON详细3" style="zoom: 67%;"><h2 id="PCON"><a href="#PCON" class="headerlink" title="PCON"></a>PCON</h2><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic/img/202406131029450.png" alt="PCON解释图" style="zoom:67%;"><h2 id="TMOD"><a href="#TMOD" class="headerlink" title="TMOD"></a>TMOD</h2><p>模式(M1、M0)：这里选10（8位自动重装载定时器），其他在定时器有讲解</p><p><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic/img/202404131536016.png" alt="TMOD解释图"></p><h2 id="SBUF"><a href="#SBUF" class="headerlink" title="SBUF"></a>SBUF</h2><p>接收和发送的数据都存在SBUF</p><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic/img/202406131633290.png" alt="SBUF图解" style="zoom: 67%;"><h2 id="IE"><a href="#IE" class="headerlink" title="IE"></a>IE</h2><p>中断允许寄存器</p><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic/img/202404121351544.png" alt="允许寄存器分析" style="zoom:67%;"><h1 id="中断处理函数"><a href="#中断处理函数" class="headerlink" title="中断处理函数"></a>中断处理函数</h1><table><thead><tr><th>中断源</th><th>中断处理函数</th></tr></thead><tbody><tr><td>UART</td><td>UART_Routine(void)         interrupt 4</td></tr></tbody></table><h1 id="代码编写"><a href="#代码编写" class="headerlink" title="代码编写"></a>代码编写</h1><p>为何需要使用定时器观看链接讲解(9.34)：<a href="https://www.bilibili.com/video/BV1Bg4y1M7vi/?spm_id_from=333.788&vd_source=1c838941386ee32c4501615c317f75e0">波特率发生器</a></p><h2 id="main-c"><a href="#main-c" class="headerlink" title="main.c"></a>main.c</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;reg52.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;delay.h&quot;</span><span class="comment">//声明头文件，可在此文件使用头文件声明的函数、变量等</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;Uart.h&quot;</span></span></span><br><span class="line"></span><br><span class="line">uchar recv;<span class="comment">//全局变量用于接收数据</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">UART_Init();</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">Delay1000ms();</span><br><span class="line">UART_send_str(<span class="string">&quot;i am xingzai&quot;</span>);<span class="comment">//发送字符</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//串口中断处理函数</span></span><br><span class="line">UART_Routine(<span class="type">void</span>)         interrupt <span class="number">4</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="number">1</span> == RI)</span><br><span class="line">&#123;</span><br><span class="line">RI = <span class="number">0</span>;<span class="comment">//接收中断请求标志位软件复位</span></span><br><span class="line">recv = SBUF;<span class="comment">//接收数据赋值给变量</span></span><br><span class="line"><span class="keyword">switch</span>(recv)</span><br><span class="line">&#123;</span><br><span class="line">           <span class="keyword">case</span> <span class="number">0x1</span>: LED1 = <span class="number">0</span>;<span class="keyword">break</span>;   </span><br><span class="line">           <span class="keyword">case</span> <span class="number">0x2</span>: LED2 = <span class="number">0</span>;<span class="keyword">break</span>;</span><br><span class="line">           <span class="keyword">case</span> <span class="number">0x3</span>: LED3 = <span class="number">0</span>;<span class="keyword">break</span>;</span><br><span class="line">           <span class="keyword">case</span> <span class="number">0x4</span>: LED4 = <span class="number">0</span>;<span class="keyword">break</span>;</span><br><span class="line">           <span class="keyword">case</span> <span class="number">0x5</span>: P1  |= <span class="number">0x0F</span>;<span class="keyword">break</span>;<span class="comment">//这里采用或等于，目的不让P1.6蜂鸣器为0，保留高位原数据</span></span><br><span class="line">           <span class="keyword">case</span> <span class="number">0x6</span>: BEEP = <span class="number">0</span>;<span class="keyword">break</span>;</span><br><span class="line">           <span class="keyword">case</span> <span class="number">0x7</span>: BEEP = <span class="number">1</span>;<span class="keyword">break</span>;</span><br><span class="line">           <span class="keyword">case</span> <span class="number">0x8</span>: JDQ1 = <span class="number">0</span>;<span class="keyword">break</span>;</span><br><span class="line">           <span class="keyword">case</span> <span class="number">0x9</span>: JDQ1 = <span class="number">1</span>;<span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="delay-c"><a href="#delay-c" class="headerlink" title="delay.c"></a>delay.c</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;delay.h&quot;</span><span class="comment">//声明对应头文件，用于声明里面此文件函数、变量等</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;intrins.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;main.h&quot;</span></span></span><br><span class="line"><span class="comment">//延时函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay1000ms</span><span class="params">()</span><span class="comment">//@11.0592MHz</span></span><br><span class="line">&#123;</span><br><span class="line">uchar data i, j, k;</span><br><span class="line"></span><br><span class="line">_nop_();</span><br><span class="line">i = <span class="number">8</span>;</span><br><span class="line">j = <span class="number">1</span>;</span><br><span class="line">k = <span class="number">243</span>;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">while</span> (--k);</span><br><span class="line">&#125; <span class="keyword">while</span> (--j);</span><br><span class="line">&#125; <span class="keyword">while</span> (--i);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="delay-h"><a href="#delay-h" class="headerlink" title="delay.h"></a>delay.h</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//头文件固定格式，防止头文件重复包含</span></span><br><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __DELAY_H__</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __DELAY_H__</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay1000ms</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br></pre></td></tr></table></figure><h2 id="Uart-c"><a href="#Uart-c" class="headerlink" title="Uart.c"></a>Uart.c</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;reg52.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;Uart.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">UART_Init</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//配置相关寄存器</span></span><br><span class="line">SCON = <span class="number">0x50</span>;<span class="comment">//配置串口寄存器</span></span><br><span class="line">PCON=<span class="number">0x00</span>;</span><br><span class="line">TMOD |= <span class="number">0x20</span>;<span class="comment">//配置时间寄存器定时器1</span></span><br><span class="line"><span class="comment">//定时器初值</span></span><br><span class="line">TH1 = <span class="number">0xFD</span>;</span><br><span class="line">TL1 = <span class="number">0xFD</span>;</span><br><span class="line">EA = <span class="number">1</span>;<span class="comment">//打开中断总允许位</span></span><br><span class="line">ES = <span class="number">1</span>;<span class="comment">//打开串口中断允许位</span></span><br><span class="line">TR1 = <span class="number">1</span>;<span class="comment">//打开定时器1运行控制位</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//字符发送函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">UART_send_char</span><span class="params">(uchar send_char)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//将字符赋值给数据缓存寄存器</span></span><br><span class="line">SBUF = send_char;</span><br><span class="line"><span class="keyword">while</span>(!TI);<span class="comment">//发送时为0，发送完触发发送中断时为1，为1时则数据发送完</span></span><br><span class="line">TI = <span class="number">0</span>;<span class="comment">//发送中断请求标志位软件复位</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//接收传过来的字符串</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">UART_send_str</span><span class="params">(uchar *send_str)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//判断字符到最后&#x27;\0&#x27;则停止发送</span></span><br><span class="line"><span class="keyword">while</span>(*send_str != <span class="string">&#x27;\0&#x27;</span>)</span><br><span class="line">UART_send_char(*send_str++);<span class="comment">//将字符逐个传给这个函数发送</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Uart-h"><a href="#Uart-h" class="headerlink" title="Uart.h"></a>Uart.h</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __UART_H__</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __UART_H__</span></span><br><span class="line"><span class="comment">//因为main.c中已经声明了Uart.h，在Uart.h声明了main.h则main.c中也可以使用mian.h</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;main.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">UART_Init</span><span class="params">()</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">UART_send_char</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> send_char)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">UART_send_str</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> *send_str)</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br></pre></td></tr></table></figure><h2 id="main-h"><a href="#main-h" class="headerlink" title="main.h"></a>main.h</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __MAIN_H__</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __MAIN_H__</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;reg52.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">unsigned</span> <span class="type">char</span> uchar;<span class="comment">//给unsigned char取别名uchar</span></span><br><span class="line"><span class="comment">//定义对应元器件引脚</span></span><br><span class="line">sbit LED1 = P1^<span class="number">0</span>;</span><br><span class="line">sbit LED2 = P1^<span class="number">1</span>;</span><br><span class="line">sbit LED3 = P1^<span class="number">2</span>;</span><br><span class="line">sbit LED4 = P1^<span class="number">3</span>;</span><br><span class="line">sbit BEEP = P1^<span class="number">6</span>;</span><br><span class="line">sbit JDQ1 = P1^<span class="number">7</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br></pre></td></tr></table></figure><h2 id="回环"><a href="#回环" class="headerlink" title="回环"></a>回环</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;reg52.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;intrins.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> recv;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> send_buf[<span class="number">20</span>];</span><br><span class="line"></span><br><span class="line">sbit LED1 = P1^<span class="number">0</span>;</span><br><span class="line">sbit LED2 = P1^<span class="number">1</span>;</span><br><span class="line">sbit LED3 = P1^<span class="number">2</span>;</span><br><span class="line">sbit LED4 = P1^<span class="number">3</span>;</span><br><span class="line">sbit BEEP = P1^<span class="number">6</span>;</span><br><span class="line">sbit JDQ1 = P1^<span class="number">7</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay1000ms</span><span class="params">()</span>    <span class="comment">//@11.0592MHz</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">unsigned</span> <span class="type">char</span> data i, j, k;</span><br><span class="line"> </span><br><span class="line">  _nop_();</span><br><span class="line">  i = <span class="number">8</span>;</span><br><span class="line">  j = <span class="number">1</span>;</span><br><span class="line">  k = <span class="number">243</span>;</span><br><span class="line">  <span class="keyword">do</span></span><br><span class="line">  &#123;</span><br><span class="line">     <span class="keyword">do</span></span><br><span class="line">     &#123;</span><br><span class="line">       <span class="keyword">while</span> (--k);</span><br><span class="line">     &#125; <span class="keyword">while</span> (--j);</span><br><span class="line">  &#125; <span class="keyword">while</span> (--i);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">UART_send_byte</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> send_byte)</span></span><br><span class="line">&#123;</span><br><span class="line">SBUF = send_byte;</span><br><span class="line"><span class="keyword">while</span>(!TI);</span><br><span class="line">TI=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">UART_send_str</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> *send_str)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">while</span>(*send_str != <span class="string">&#x27;\0&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line">UART_send_byte(*send_str++);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">SCON = <span class="number">0x50</span>;</span><br><span class="line">PCON=<span class="number">0x00</span>;</span><br><span class="line">TMOD |= <span class="number">0x20</span>;</span><br><span class="line">TH1 = <span class="number">0xFD</span>;</span><br><span class="line">TL1 = <span class="number">0xFD</span>;</span><br><span class="line">EA = <span class="number">1</span>;</span><br><span class="line">ES = <span class="number">1</span>;</span><br><span class="line">TR1 = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">  &#123;</span><br><span class="line">Delay1000ms();</span><br><span class="line"><span class="comment">//UART_send_str(&quot;i am wfeng!\r\n&quot;);</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">UART_Routine(<span class="type">void</span>)    interrupt <span class="number">4</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="number">1</span> == RI) <span class="comment">//if(RI)</span></span><br><span class="line">&#123;</span><br><span class="line">RI=<span class="number">0</span>;</span><br><span class="line">recv = SBUF;</span><br><span class="line">SBUF = recv;</span><br><span class="line"><span class="keyword">while</span>(!TI);</span><br><span class="line">TI=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="继电器"><a href="#继电器" class="headerlink" title="继电器"></a>继电器</h1><p><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic/img/202406191552254.gif" alt="继电器动态原理图"></p><p>继电器模块的基本工作原理：</p><p>电磁线圈： 继电器内部包含一个电磁线圈，通常由绕制在绝缘芯片上的细导线组成。当通过线圈通电时，产生电磁场。</p><p>磁性吸引： 电磁场会使继电器中的铁芯（或磁性材料）受到磁性吸引，导致铁芯在电磁力的作用下移动。</p><p>触点操作： 铁芯的移动会导致机械部分的运动，最终使触点（开关）发生动作。继电器通常有常开（Normally Open，NO）和常闭（Normally Closed，NC）两组触点。</p><p>常开触点： 在继电器未通电时处于闭合状态，当电磁线圈通电时，触点打开。</p><p>常闭触点： 在继电器未通电时处于打开状态，当电磁线圈通电时，触点闭合。</p><p>电气隔离： 继电器的主要作用之一是提供电气隔离。通过电磁原理，可以在控制信号与被控制电路之间提供隔离，从而使得不同电路之间的电流不会相互影响。继电器模块常用于控制高电流或高电压的电路。</p><h1 id="ESP8266"><a href="#ESP8266" class="headerlink" title="ESP8266"></a>ESP8266</h1><p>AP模式：无线接入点，它是一个无线网络的中心节点，可以看成是一个服务器。它作为一个网络的中心节点，提供无线接入服务，其他的无线设备允许接入该节点，所有接入该节点设备的无线信号数据都要通过它才能进行交换和互相访问。一般的无线路由器、网关、热点就是工作在AP模式下，AP节点和AP节点之间允许相互连接。</p><p>STA模式：无线网络中的一个终端站点设备，可以看成是一个客户端，一般来说，处在STA模式下的设备本身不接受无线的接入，该设备连接到AP节点进行网络访问，STA模式下的设备之间的通信可以通过AP进行转发实现</p><h2 id="AT指令"><a href="#AT指令" class="headerlink" title="AT指令"></a>AT指令</h2><p>可在官网寻找对应的指令集：<a href="https://docs.ai-thinker.com/esp8266/docs">安信可科技</a></p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">配置 WiFi 模式：AT+CWMODE=3//模式3：STA+AP</span><br><span class="line">连接路由器：AT+CWJAP=&quot;wfeng&quot;,&quot;wf05430543&quot;</span><br><span class="line">查询 ESP8266的IP 地址： AT+CIFSR</span><br><span class="line">//PC端使用网络调试工具，建⽴一个 TCP 服务器器</span><br><span class="line">ESP8266 作为Client 连接到服务器：AT+CIPSTART=&quot;TCP&quot;,&quot;192.168.31.118&quot;,8090</span><br><span class="line">发送数据：AT+CIPSEND=4</span><br></pre></td></tr></table></figure><h2 id="代码编写-1"><a href="#代码编写-1" class="headerlink" title="代码编写"></a>代码编写</h2><p>电脑当服务端，单片机当客户端，电脑发指令控制单片机(接收)，单片机发送字符给电脑</p><h3 id="main-c-1"><a href="#main-c-1" class="headerlink" title="main.c"></a>main.c</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;define.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;send.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;delay.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">define_bl();</span><br><span class="line"><span class="keyword">do</span>&#123;</span><br><span class="line">send_str(<span class="string">&quot;AT+CWMODE=3\r\n&quot;</span>);<span class="comment">//发送AT指令配置ESP8266模块，选择模式3</span></span><br><span class="line">Delay1000ms();</span><br><span class="line">&#125;<span class="keyword">while</span>(Esp_Ok_flag);</span><br><span class="line"></span><br><span class="line">Esp_Ok_flag = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">do</span>&#123;</span><br><span class="line">send_str(<span class="string">&quot;AT+CWJAP=\&quot;qiji\&quot;,\&quot;12345678\&quot;\r\n&quot;</span>);<span class="comment">//连接WiFi</span></span><br><span class="line">Delay1000ms();</span><br><span class="line">&#125;<span class="keyword">while</span>(Esp_Ok_flag);</span><br><span class="line"></span><br><span class="line">Esp_Ok_flag = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">do</span>&#123;</span><br><span class="line">send_str(<span class="string">&quot;AT+CIPSTART=\&quot;TCP\&quot;,\&quot;192.168.43.10\&quot;,8085\r\n&quot;</span>);<span class="comment">//连接服务器</span></span><br><span class="line">Delay1000ms();</span><br><span class="line">&#125;<span class="keyword">while</span>(Esp_Ok_flag);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">do</span>&#123;</span><br><span class="line">send_str(<span class="string">&quot;AT+CIPSEND=4\r\n&quot;</span>);<span class="comment">//发送4个字节数据</span></span><br><span class="line">Delay1000ms();</span><br><span class="line">&#125;<span class="keyword">while</span>(Esp_Ok_flag);</span><br><span class="line"></span><br><span class="line">send_str(<span class="string">&quot;xinz\r\n&quot;</span>);<span class="comment">//发送的数据</span></span><br><span class="line">Esp_Ok_flag = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">Delay1000ms();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="define-c"><a href="#define-c" class="headerlink" title="define.c"></a>define.c</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;define.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> Esp_Ok_flag = <span class="number">1</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">define_bl</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    </span><br><span class="line">SCON = <span class="number">0x50</span>;</span><br><span class="line">PCON = <span class="number">0x00</span>;</span><br><span class="line">TMOD = <span class="number">0x20</span>;</span><br><span class="line">TH1 = <span class="number">0xFD</span>;</span><br><span class="line">TL1 = <span class="number">0xFD</span>;</span><br><span class="line">TR1 = <span class="number">1</span>;</span><br><span class="line">ES = <span class="number">1</span>;</span><br><span class="line">EA = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="define-h"><a href="#define-h" class="headerlink" title="define.h"></a>define.h</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __DELAY_H__</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __DELAY_H__</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;reg52.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">define_bl</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">unsigned</span> <span class="type">char</span> uchar;<span class="comment">//取别名</span></span><br><span class="line"><span class="keyword">extern</span> <span class="type">int</span> Esp_Ok_flag;<span class="comment">//定义一个全局变量方便不同.c文件使用</span></span><br><span class="line"><span class="comment">//定义对应元器件引脚</span></span><br><span class="line">sbit LED1 = P1^<span class="number">0</span>;</span><br><span class="line">sbit LED2 = P1^<span class="number">1</span>;</span><br><span class="line">sbit LED3 = P1^<span class="number">2</span>;</span><br><span class="line">sbit LED4 = P1^<span class="number">3</span>;</span><br><span class="line">sbit BEEP = P1^<span class="number">6</span>;</span><br><span class="line">sbit JDQ1 = P1^<span class="number">7</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br></pre></td></tr></table></figure><h3 id="send-c"><a href="#send-c" class="headerlink" title="send.c"></a>send.c</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;send.h&gt;</span></span></span><br><span class="line"><span class="comment">//接收需要发送的字符</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">send_str</span><span class="params">(uchar *send_s)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">while</span>(*send_s != <span class="string">&#x27;\0&#x27;</span>)<span class="comment">//当字符串!=&#x27;\0&#x27;时把字符一个个传给send_char函数发送</span></span><br><span class="line">&#123;</span><br><span class="line">send_char(*send_s++);<span class="comment">//将每个字符逐一发送</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">send_char</span><span class="params">(uchar send_c)</span></span><br><span class="line">&#123;</span><br><span class="line">SBUF = send_c;<span class="comment">//将单个字符赋值给SBUF则发送</span></span><br><span class="line"><span class="keyword">while</span>(!TI);<span class="comment">//当TI为0，则发送未完成，当发送完成为1，取反为0跳出循环</span></span><br><span class="line">TI = <span class="number">0</span>;<span class="comment">//复位，发送请求中断标志位为0</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="send-h"><a href="#send-h" class="headerlink" title="send.h"></a>send.h</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __SEND_H__</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __SEND_H__</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;define.h&quot;</span></span></span><br><span class="line"><span class="comment">//声明两个发送函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">send_str</span><span class="params">(uchar *send_s)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">send_char</span><span class="params">(uchar send_c)</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br></pre></td></tr></table></figure><h3 id="receive-c"><a href="#receive-c" class="headerlink" title="receive.c"></a>receive.c</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;define.h&gt;</span></span></span><br><span class="line">uchar Recv_Buf[<span class="number">20</span>];</span><br><span class="line"><span class="type">char</span> recv;</span><br><span class="line"><span class="comment">//串口中断函数</span></span><br><span class="line">UART_Routine(<span class="type">void</span>) interrupt <span class="number">4</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">static</span> <span class="type">int</span> i = <span class="number">0</span>;  <span class="comment">//static：全局使用不重新</span></span><br><span class="line"><span class="type">char</span> Recv;</span><br><span class="line"><span class="keyword">if</span>(<span class="number">1</span> == RI) <span class="comment">//if(RI)</span></span><br><span class="line">&#123;</span><br><span class="line">RI=<span class="number">0</span>;</span><br><span class="line">Recv=SBUF;</span><br><span class="line"><span class="keyword">if</span>(Recv == <span class="string">&#x27;O&#x27;</span>|| Recv == <span class="string">&#x27;+&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line">i = <span class="number">0</span>;</span><br><span class="line">Recv_Buf[i] = Recv;</span><br><span class="line">Recv_Buf[i+<span class="number">1</span>] = Recv;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">i++;</span><br><span class="line">Recv_Buf[i] = Recv;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(Recv_Buf[<span class="number">0</span>] == <span class="string">&#x27;O&#x27;</span>&amp;&amp;Recv_Buf[<span class="number">1</span>] == <span class="string">&#x27;K&#x27;</span>)<span class="comment">//收到回复OK则说明指令执行成功</span></span><br><span class="line">&#123;</span><br><span class="line">Esp_Ok_flag = <span class="number">0</span>;<span class="comment">//让标志为0跳出循环，执行下一个指令</span></span><br><span class="line">i = <span class="number">0</span>;<span class="comment">//重置数组指向位数</span></span><br><span class="line">&#125;</span><br><span class="line">        <span class="comment">//接收到服务器，接收到的指令会以　+IPD　开头，以及第七个是接收的指令开始，判断接收到哪个指令执行下方的操作</span></span><br><span class="line"><span class="keyword">if</span>(Recv_Buf[<span class="number">0</span>] == <span class="string">&#x27;+&#x27;</span>&amp;&amp;Recv_Buf[<span class="number">1</span>] == <span class="string">&#x27;I&#x27;</span>&amp;&amp;Recv_Buf[<span class="number">2</span>] == <span class="string">&#x27;P&#x27;</span>&amp;&amp;Recv_Buf[<span class="number">3</span>] == <span class="string">&#x27;D&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line">            <span class="keyword">if</span>(Recv_Buf[<span class="number">7</span>] == <span class="string">&#x27;L&#x27;</span>&amp;&amp;Recv_Buf[<span class="number">8</span>] == <span class="string">&#x27;E&#x27;</span>&amp;&amp;Recv_Buf[<span class="number">9</span>] == <span class="string">&#x27;D&#x27;</span>&amp;&amp;Recv_Buf[<span class="number">10</span>] == <span class="string">&#x27;1&#x27;</span>&amp;&amp;Recv_Buf[<span class="number">11</span>] == <span class="string">&#x27;1&#x27;</span>)</span><br><span class="line">                LED1 = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(Recv_Buf[<span class="number">7</span>] == <span class="string">&#x27;L&#x27;</span>&amp;&amp;Recv_Buf[<span class="number">8</span>] == <span class="string">&#x27;E&#x27;</span>&amp;&amp;Recv_Buf[<span class="number">9</span>] == <span class="string">&#x27;D&#x27;</span>&amp;&amp;Recv_Buf[<span class="number">10</span>] == <span class="string">&#x27;1&#x27;</span>&amp;&amp;Recv_Buf[<span class="number">11</span>] == <span class="string">&#x27;0&#x27;</span>)</span><br><span class="line">                LED1 = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">if</span>(Recv_Buf[<span class="number">7</span>] == <span class="string">&#x27;L&#x27;</span>&amp;&amp;Recv_Buf[<span class="number">8</span>] == <span class="string">&#x27;E&#x27;</span>&amp;&amp;Recv_Buf[<span class="number">9</span>] == <span class="string">&#x27;D&#x27;</span>&amp;&amp;Recv_Buf[<span class="number">10</span>] == <span class="string">&#x27;2&#x27;</span>&amp;&amp;Recv_Buf[<span class="number">11</span>] == <span class="string">&#x27;1&#x27;</span>)</span><br><span class="line">                LED2 = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(Recv_Buf[<span class="number">7</span>] == <span class="string">&#x27;L&#x27;</span>&amp;&amp;Recv_Buf[<span class="number">8</span>] == <span class="string">&#x27;E&#x27;</span>&amp;&amp;Recv_Buf[<span class="number">9</span>] == <span class="string">&#x27;D&#x27;</span>&amp;&amp;Recv_Buf[<span class="number">10</span>] == <span class="string">&#x27;2&#x27;</span>&amp;&amp;Recv_Buf[<span class="number">11</span>] == <span class="string">&#x27;0&#x27;</span>)</span><br><span class="line">                LED2 = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">if</span>(Recv_Buf[<span class="number">7</span>] == <span class="string">&#x27;L&#x27;</span>&amp;&amp;Recv_Buf[<span class="number">8</span>] == <span class="string">&#x27;E&#x27;</span>&amp;&amp;Recv_Buf[<span class="number">9</span>] == <span class="string">&#x27;D&#x27;</span>&amp;&amp;Recv_Buf[<span class="number">10</span>] == <span class="string">&#x27;3&#x27;</span>&amp;&amp;Recv_Buf[<span class="number">11</span>] == <span class="string">&#x27;1&#x27;</span>)</span><br><span class="line">                LED3 = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(Recv_Buf[<span class="number">7</span>] == <span class="string">&#x27;L&#x27;</span>&amp;&amp;Recv_Buf[<span class="number">8</span>] == <span class="string">&#x27;E&#x27;</span>&amp;&amp;Recv_Buf[<span class="number">9</span>] == <span class="string">&#x27;D&#x27;</span>&amp;&amp;Recv_Buf[<span class="number">10</span>] == <span class="string">&#x27;3&#x27;</span>&amp;&amp;Recv_Buf[<span class="number">11</span>] == <span class="string">&#x27;0&#x27;</span>)</span><br><span class="line">                LED3 = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">if</span>(Recv_Buf[<span class="number">7</span>] == <span class="string">&#x27;L&#x27;</span>&amp;&amp;Recv_Buf[<span class="number">8</span>] == <span class="string">&#x27;E&#x27;</span>&amp;&amp;Recv_Buf[<span class="number">9</span>] == <span class="string">&#x27;D&#x27;</span>&amp;&amp;Recv_Buf[<span class="number">10</span>] == <span class="string">&#x27;4&#x27;</span>&amp;&amp;Recv_Buf[<span class="number">11</span>] == <span class="string">&#x27;1&#x27;</span>)</span><br><span class="line">                LED4 = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(Recv_Buf[<span class="number">7</span>] == <span class="string">&#x27;L&#x27;</span>&amp;&amp;Recv_Buf[<span class="number">8</span>] == <span class="string">&#x27;E&#x27;</span>&amp;&amp;Recv_Buf[<span class="number">9</span>] == <span class="string">&#x27;D&#x27;</span>&amp;&amp;Recv_Buf[<span class="number">10</span>] == <span class="string">&#x27;4&#x27;</span>&amp;&amp;Recv_Buf[<span class="number">11</span>] == <span class="string">&#x27;0&#x27;</span>)</span><br><span class="line">                LED4 = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">if</span>(Recv_Buf[<span class="number">7</span>] == <span class="string">&#x27;B&#x27;</span>&amp;&amp;Recv_Buf[<span class="number">8</span>] == <span class="string">&#x27;E&#x27;</span>&amp;&amp;Recv_Buf[<span class="number">9</span>] == <span class="string">&#x27;E&#x27;</span>&amp;&amp;Recv_Buf[<span class="number">10</span>] == <span class="string">&#x27;P&#x27;</span>&amp;&amp;Recv_Buf[<span class="number">11</span>] == <span class="string">&#x27;1&#x27;</span>)</span><br><span class="line">                BEEP = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(Recv_Buf[<span class="number">7</span>] == <span class="string">&#x27;B&#x27;</span>&amp;&amp;Recv_Buf[<span class="number">8</span>] == <span class="string">&#x27;E&#x27;</span>&amp;&amp;Recv_Buf[<span class="number">9</span>] == <span class="string">&#x27;E&#x27;</span>&amp;&amp;Recv_Buf[<span class="number">10</span>] == <span class="string">&#x27;P&#x27;</span>&amp;&amp;Recv_Buf[<span class="number">11</span>] == <span class="string">&#x27;0&#x27;</span>)</span><br><span class="line">                BEEP = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">if</span>(Recv_Buf[<span class="number">7</span>] == <span class="string">&#x27;J&#x27;</span>&amp;&amp;Recv_Buf[<span class="number">8</span>] == <span class="string">&#x27;D&#x27;</span>&amp;&amp;Recv_Buf[<span class="number">9</span>] == <span class="string">&#x27;Q&#x27;</span>&amp;&amp;Recv_Buf[<span class="number">10</span>] == <span class="string">&#x27;1&#x27;</span>&amp;&amp;Recv_Buf[<span class="number">11</span>] == <span class="string">&#x27;1&#x27;</span>)</span><br><span class="line">                JDQ1 = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(Recv_Buf[<span class="number">7</span>] == <span class="string">&#x27;J&#x27;</span>&amp;&amp;Recv_Buf[<span class="number">8</span>] == <span class="string">&#x27;D&#x27;</span>&amp;&amp;Recv_Buf[<span class="number">9</span>] == <span class="string">&#x27;Q&#x27;</span>&amp;&amp;Recv_Buf[<span class="number">10</span>] == <span class="string">&#x27;1&#x27;</span>&amp;&amp;Recv_Buf[<span class="number">11</span>] == <span class="string">&#x27;0&#x27;</span>)</span><br><span class="line">                JDQ1 = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(i&gt;<span class="number">18</span>)</span><br><span class="line">i=<span class="number">18</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="delay-c-1"><a href="#delay-c-1" class="headerlink" title="delay.c"></a>delay.c</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;delay.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;intrins.h&gt;</span></span></span><br><span class="line"><span class="comment">//延时函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay1000ms</span><span class="params">()</span>    <span class="comment">//@11.0592MHz</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">unsigned</span> <span class="type">char</span> data i, j, k;</span><br><span class="line"> </span><br><span class="line">  _nop_();</span><br><span class="line">  i = <span class="number">8</span>;</span><br><span class="line">  j = <span class="number">1</span>;</span><br><span class="line">  k = <span class="number">243</span>;</span><br><span class="line">  <span class="keyword">do</span></span><br><span class="line">  &#123;</span><br><span class="line">     <span class="keyword">do</span></span><br><span class="line">     &#123;</span><br><span class="line">       <span class="keyword">while</span> (--k);</span><br><span class="line">     &#125; <span class="keyword">while</span> (--j);</span><br><span class="line">  &#125; <span class="keyword">while</span> (--i);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="delay-h-1"><a href="#delay-h-1" class="headerlink" title="delay.h"></a>delay.h</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __DELAY_H__</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __DELAY_H__</span></span><br><span class="line"><span class="comment">//声明延时函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay1000ms</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;串口的介绍&quot;&gt;&lt;a href=&quot;#串口的介绍&quot; class=&quot;headerlink&quot; title=&quot;串口的介绍&quot;&gt;&lt;/a&gt;串口的介绍&lt;/h1&gt;&lt;p&gt;UART（通用异步收发器）是一种双向、串行、异步的通信总线，仅用一根数据接收线（RX）和一根数据发送线（TX）就能实</summary>
      
    
    
    
    <category term="51单片机" scheme="http://example.com/categories/51%E5%8D%95%E7%89%87%E6%9C%BA/"/>
    
    
    <category term="51单片机" scheme="http://example.com/tags/51%E5%8D%95%E7%89%87%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>定时器/计数器</title>
    <link href="http://example.com/post/2e5216dd.html"/>
    <id>http://example.com/post/2e5216dd.html</id>
    <published>2024-04-12T02:13:46.000Z</published>
    <updated>2024-07-05T07:56:42.774Z</updated>
    
    <content type="html"><![CDATA[<h1 id="原理"><a href="#原理" class="headerlink" title="原理"></a><center>原理</center></h1><ol><li>时钟源：定时器是内部时钟源（晶振），计数器是外部</li><li>计时长度：对应TH  TL计数器初值寄存器(高八位,低八位)</li><li>对应的中断触发函数</li></ol><table><thead><tr><th>中断源</th><th>中断处理函数</th></tr></thead><tbody><tr><td>Timer0</td><td>Timer0_Routine(void)      interrupt 1</td></tr><tr><td>Timer1</td><td>Timer1_Routine(void)       interrupt 3</td></tr><tr><td>Timer2</td><td>Timer2_Routine(void)      interrupt 5</td></tr></tbody></table><h1 id="相关寄存器"><a href="#相关寄存器" class="headerlink" title="相关寄存器"></a><center>相关寄存器</center></h1><h2 id="TCON：定时器控制寄存器"><a href="#TCON：定时器控制寄存器" class="headerlink" title="TCON：定时器控制寄存器"></a><center>TCON：定时器控制寄存器</center></h2><p>只需用到：TF0、TF1、TR0、TR1</p><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic/img/202404131443931.png" alt="定时器/计数器" style="zoom: 50%;"><p>定时器&#x2F;计数器运行控制位(代码)：TR0、TR1</p><p>中断触发标志位(内部)：TF0、TF1</p><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic/img/202404121532268.png" alt="定时器中断分析" style="zoom: 50%;"><h2 id="TMOD：定时器模式寄存器"><a href="#TMOD：定时器模式寄存器" class="headerlink" title="TMOD：定时器模式寄存器"></a><center>TMOD：定时器模式寄存器</center></h2><p>两个定时器&#x2F;计数器（任选一个即可）：<code>T0(TL0\TH0)</code>、<code>T1(TL1\TH1)</code></p><p>工作模式：</p><ul><li>模式0（13位定时器&#x2F;计数器）</li><li>模式1（16位定时器&#x2F;计数器）</li><li>模式2（8位自动重装初值）</li><li>模式3（两个8位定时器&#x2F;计数器）</li></ul><p>我们学的是定时器，计数器是外部计数，则0.7、0.3地址是计数器的置0，C&#x2F;T：置0为定时器，模式（M1、M0）这里我们选01（16位定时器，不自动重装初值）</p><p>如果不会自动重装载寄存器（不会自动赋初值）则要触发中断处理函数时重新手动赋初值</p><p><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic/img/202404131536016.png" alt="工作模式"></p><h2 id="定时器计算初值"><a href="#定时器计算初值" class="headerlink" title="定时器计算初值"></a><center>定时器计算初值</center></h2><p>需要定时的时间带入公式，求出x</p><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic/img/202406101704253.png" alt="初值计算方式" style="zoom: 50%;"><h2 id="中断允许寄存器"><a href="#中断允许寄存器" class="headerlink" title="中断允许寄存器"></a><center>中断允许寄存器</center></h2><p>&ensp;&ensp;&ensp;&ensp;总中断允许控制位：EA</p><p>&ensp;&ensp;&ensp;&ensp;ET0：定时&#x2F;计数器T0的溢出中断允许位，ET1：定时&#x2F;计数器T1的溢出中断允许位，ET2：定时&#x2F;计数器T2的溢出中断允许位</p><p>&ensp;&ensp;&ensp;&ensp;需要外部、定时器、串口那个则赋值那个为1</p><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic/img/202404121351544.png" alt="允许寄存器分析" style="zoom:67%;"><h1 id="代码编写"><a href="#代码编写" class="headerlink" title="代码编写"></a><center>代码编写</center></h1><p>每1s翻转LED灯状态</p><ul><li>模式选择（定时器0；工作模式1）</li><li>定时器初值（10ms）</li><li>打开定时器T0运行控制位</li><li>打开定时器0中断允许位</li><li>打开总中断允许控制位</li><li>编写中断服务函数</li><li>当溢出时，触发中断，执行中断函数，执行完之后，回到主函数继续执行</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;reg52.h&gt;</span></span></span><br><span class="line">sbit LED1 = P1^<span class="number">0</span>;<span class="comment">//定义LED灯</span></span><br><span class="line"><span class="type">int</span> count;<span class="comment">//由于51单片机没办法定时1s，只能通过计数达到效果</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">TMOD = <span class="number">0x01</span>;<span class="comment">//配置定时器工作模式：使用定时器0，使用16位定时器模式(不自动重装初值)</span></span><br><span class="line"><span class="comment">//定时10ms，给寄存器赋初值</span></span><br><span class="line">TL0 = <span class="number">0x00</span>;</span><br><span class="line">TH0 = <span class="number">0xDC</span>;</span><br><span class="line">TR0 = <span class="number">1</span>;<span class="comment">//打开定时器T0运行控制位</span></span><br><span class="line">ET0 = <span class="number">1</span>;<span class="comment">//打开定时器0中断允许位</span></span><br><span class="line">EA = <span class="number">1</span>;<span class="comment">//打开总中断允许控制位</span></span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//大于99时则取反LED状态</span></span><br><span class="line"><span class="keyword">if</span>(count &gt; <span class="number">99</span>)</span><br><span class="line">&#123;</span><br><span class="line">count = <span class="number">0</span>;</span><br><span class="line">LED1 = ~LED1;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//定时中断处理函数</span></span><br><span class="line">Timer0_Routine(<span class="type">void</span>)      interrupt <span class="number">1</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//触发中断函数，需要重新给定时器赋初值</span></span><br><span class="line">TL0 = <span class="number">0x00</span>;</span><br><span class="line">TH0 = <span class="number">0xDC</span>;</span><br><span class="line">count++;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;原理&quot;&gt;&lt;a href=&quot;#原理&quot; class=&quot;headerlink&quot; title=&quot;原理&quot;&gt;&lt;/a&gt;&lt;center&gt;原理&lt;/center&gt;&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;时钟源：定时器是内部时钟源（晶振），计数器是外部&lt;/li&gt;
&lt;li&gt;计时长度：对应TH  TL</summary>
      
    
    
    
    <category term="51单片机" scheme="http://example.com/categories/51%E5%8D%95%E7%89%87%E6%9C%BA/"/>
    
    
    <category term="51单片机" scheme="http://example.com/tags/51%E5%8D%95%E7%89%87%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>外部中断</title>
    <link href="http://example.com/post/81b224e1.html"/>
    <id>http://example.com/post/81b224e1.html</id>
    <published>2024-04-12T02:13:12.000Z</published>
    <updated>2024-07-05T03:07:43.858Z</updated>
    
    <content type="html"><![CDATA[<h1 id="中断原理"><a href="#中断原理" class="headerlink" title="中断原理"></a><center>中断原理</center></h1><p>你在打游戏，水开了，水壶发出响声，你停止打游戏，去倒水，倒完水接着打游戏</p><p>打游戏：就相当于While(1){}里面执行的代码</p><p>水壶响：就是中断源</p><p>倒水：触发中断后要去做的事情，中断处理函数</p><h1 id="代码实现过程"><a href="#代码实现过程" class="headerlink" title="代码实现过程"></a><center>代码实现过程</center></h1><h2 id="中断源"><a href="#中断源" class="headerlink" title="中断源"></a><center>中断源</center></h2><p>INT0(外部中断源)、Timer0(定时器中断源)、INT1、Timer1、UART(串口中断源)、Timer2、INT2、INT3</p><p>中断触发方式：</p><p>&ensp;&ensp;&ensp;&ensp;外部中断：下降沿或者低电平</p><p>&ensp;&ensp;&ensp;&ensp;定时器中断：定时器计数溢出</p><p>&ensp;&ensp;&ensp;&ensp;串口中断：串口发送或者接收完成</p><h2 id="中断处理函数"><a href="#中断处理函数" class="headerlink" title="中断处理函数"></a><center>中断处理函数</center></h2><p>与中断源对应的中断处理函数，直接使用对应的函数</p><table><thead><tr><th align="center">中断源</th><th>中断处理函数</th></tr></thead><tbody><tr><td align="center">INT0</td><td>Int0_Routine(void)              interrupt 0</td></tr><tr><td align="center">INT1</td><td>Int1_Routine(void)              interrupt 2</td></tr><tr><td align="center">INT2</td><td>Int2_Routine(void)             interrupt 6</td></tr><tr><td align="center">INT3</td><td>Int3_Routine(void)              interrupt 7</td></tr></tbody></table><h2 id="中断寄存器"><a href="#中断寄存器" class="headerlink" title="中断寄存器"></a><center>中断寄存器</center></h2><p>保存中断源的中断请求信息的专用寄存器</p><h3 id="中断控制寄存器"><a href="#中断控制寄存器" class="headerlink" title="中断控制寄存器"></a>中断控制寄存器</h3><p>外部中断只需用到：IT0、IT1、IE0、IE1</p><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic/img/202404121515869.png" alt="中断寄存器功能" style="zoom: 50%;"><p><code>外部中断触发方式控制位</code>(代码)：IT0、IT1，中断触发标志位(内部)：IE0、IE1</p><p><code>下降沿触发</code>：IT0 &#x3D; 1，<code>低电平触发</code>：IT0 &#x3D; 0（IT1同理）</p><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic/img/202404121721299.png" alt="外部中断分析" style="zoom:60%;"><p>定时器、串口(后续讲)</p><h3 id="中断优先级寄存器（暂不学）"><a href="#中断优先级寄存器（暂不学）" class="headerlink" title="中断优先级寄存器（暂不学）"></a>中断优先级寄存器（暂不学）</h3><h3 id="中断允许寄存器"><a href="#中断允许寄存器" class="headerlink" title="中断允许寄存器"></a>中断允许寄存器</h3><p>在外部中断只需要（置1为打开）：</p><ol><li>总中断允许控制位：EA</li><li>EX0：外部中断0中断允许位、EX1：外部中断1中断允许位</li></ol><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic/img/202404121351544.png" alt="允许寄存器分析" style="zoom:67%;"><h1 id="中断代码"><a href="#中断代码" class="headerlink" title="中断代码"></a><center>中断代码</center></h1><ol><li>配置外部中断0为下降沿触发（为1则低电平触发）</li><li>打开外部中断0中断允许位</li><li>打开总中断允许控制位</li><li>当有中断源发出，触发中断，执行中断函数，执行完之后，回到主函数继续执行</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;reg52.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;intrins.h&gt;</span></span></span><br><span class="line"></span><br><span class="line">sbit LED1 = P1^<span class="number">0</span>;<span class="comment">//引脚初始化：P1^0：对应引脚的LED灯，定义LED1代表P1^0这个引脚的LED灯</span></span><br><span class="line"><span class="comment">//延时函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay120ms</span><span class="params">()</span><span class="comment">//@11.0592MHz</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> data i, j;</span><br><span class="line">i = <span class="number">216</span>;</span><br><span class="line">j = <span class="number">37</span>;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">while</span> (--j);</span><br><span class="line">&#125; <span class="keyword">while</span> (--i);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//电路图知：中断源INT0、INT1引脚与按键P3^2、P3^3同一个，则按键为中断源，无需定义按键</span></span><br><span class="line">IT0 = <span class="number">1</span>;<span class="comment">//配置外部中断0为下降沿触发（为1则低电平触发）</span></span><br><span class="line">EX0 = <span class="number">1</span>;<span class="comment">//打开外部中断0中断允许位</span></span><br><span class="line">EA = <span class="number">1</span>;<span class="comment">//打开总中断允许控制位</span></span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        Delay120ms();</span><br><span class="line">Delay120ms();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Int0_Routine(<span class="type">void</span>)        interrupt <span class="number">0</span><span class="comment">//中断处理函数</span></span><br><span class="line">&#123;</span><br><span class="line">    Delay120ms();</span><br><span class="line">LED1 = ~LED1;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;中断原理&quot;&gt;&lt;a href=&quot;#中断原理&quot; class=&quot;headerlink&quot; title=&quot;中断原理&quot;&gt;&lt;/a&gt;&lt;center&gt;中断原理&lt;/center&gt;&lt;/h1&gt;&lt;p&gt;你在打游戏，水开了，水壶发出响声，你停止打游戏，去倒水，倒完水接着打游戏&lt;/p&gt;
&lt;p&gt;打</summary>
      
    
    
    
    <category term="51单片机" scheme="http://example.com/categories/51%E5%8D%95%E7%89%87%E6%9C%BA/"/>
    
    
    <category term="51单片机" scheme="http://example.com/tags/51%E5%8D%95%E7%89%87%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>I/O</title>
    <link href="http://example.com/post/74750b31.html"/>
    <id>http://example.com/post/74750b31.html</id>
    <published>2024-04-11T05:11:34.000Z</published>
    <updated>2024-07-04T01:33:32.920Z</updated>
    
    <content type="html"><![CDATA[<h1 id="I-O输出-点灯"><a href="#I-O输出-点灯" class="headerlink" title="I&#x2F;O输出(点灯)"></a><center>I&#x2F;O输出(点灯)</center></h1><h2 id="分析电路"><a href="#分析电路" class="headerlink" title="分析电路"></a><center>分析电路</center></h2><p>看电路图，元器件形成电压差，即可点亮LED灯</p><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic/img/202406061928657.png" alt="LED电路图" style="zoom:50%;"><h2 id="代码编写"><a href="#代码编写" class="headerlink" title="代码编写"></a><center>代码编写</center></h2><p>使用不同操作进行LED控制</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;reg52.h&quot;</span><span class="comment">//51单片机头文件</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;intrins.h&gt;</span></span></span><br><span class="line">sbit LED1 = P1^<span class="number">0</span>;<span class="comment">//引脚初始化：P1^0：对应引脚的LED灯，定义LED1代表P1^0这个引脚的LED灯</span></span><br><span class="line">sbit LED2 = P1^<span class="number">1</span>;</span><br><span class="line">sbit LED3 = P1^<span class="number">2</span>;</span><br><span class="line">sbit LED4 = P1^<span class="number">3</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> i;</span><br><span class="line"><span class="comment">//延时1000ms的延时函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay1000ms</span><span class="params">()</span>    <span class="comment">//@11.0592MHz</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">unsigned</span> <span class="type">char</span> data i, j, k;</span><br><span class="line">  _nop_();</span><br><span class="line">  i = <span class="number">8</span>;</span><br><span class="line">  j = <span class="number">1</span>;</span><br><span class="line">  k = <span class="number">243</span>;</span><br><span class="line">  <span class="keyword">do</span></span><br><span class="line">  &#123;</span><br><span class="line">     <span class="keyword">do</span></span><br><span class="line">     &#123;</span><br><span class="line">       <span class="keyword">while</span> (--k);</span><br><span class="line">     &#125; <span class="keyword">while</span> (--j);</span><br><span class="line">  &#125; <span class="keyword">while</span> (--i);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//方法一：对位操作，P1^0为0，接通</span></span><br><span class="line">LED1 = <span class="number">0</span>;<span class="comment">//电路图得知，LED为0时，接通LED灯</span></span><br><span class="line">LED2 = <span class="number">1</span>;</span><br><span class="line">LED3 = <span class="number">1</span>;</span><br><span class="line">LED4 = <span class="number">1</span>;</span><br><span class="line"><span class="comment">//方法二：P1寄存器直接赋值，两种效果相同</span></span><br><span class="line"><span class="comment">//P1 = 0xfe;   //11111110，LED灯为P1^0~P1^3，则为最低位3位</span></span><br><span class="line">Delay1000ms();</span><br><span class="line">      </span><br><span class="line"><span class="comment">//方法一：对位操作，P1^1为0，接通</span></span><br><span class="line">LED1 = <span class="number">1</span>;</span><br><span class="line">LED2 = <span class="number">0</span>;</span><br><span class="line">LED3 = <span class="number">1</span>;</span><br><span class="line">LED4 = <span class="number">1</span>;</span><br><span class="line"><span class="comment">//P1 = 0xfd; //11111101</span></span><br><span class="line">Delay1000ms(); </span><br><span class="line">      </span><br><span class="line"><span class="comment">//方法一：对位操作，P1^2为0，接通</span></span><br><span class="line">LED1 = <span class="number">1</span>;</span><br><span class="line">LED2 = <span class="number">1</span>;</span><br><span class="line">LED3 = <span class="number">0</span>;</span><br><span class="line">LED4 = <span class="number">1</span>; </span><br><span class="line"><span class="comment">//P1 = 0xfb; //11111011</span></span><br><span class="line">Delay1000ms(); </span><br><span class="line"></span><br><span class="line"><span class="comment">//方法一：对位操作，P1^3为0，接通</span></span><br><span class="line">LED1 = <span class="number">1</span>;</span><br><span class="line">LED2 = <span class="number">1</span>;</span><br><span class="line">LED3 = <span class="number">1</span>;</span><br><span class="line">LED4 = <span class="number">0</span>;</span><br><span class="line"><span class="comment">//P1 = 0xf7; //11110111</span></span><br><span class="line">Delay1000ms();</span><br><span class="line"></span><br><span class="line"><span class="comment">//对方法三分析</span></span><br><span class="line"><span class="comment">//P1 = 0xff; //11111111</span></span><br><span class="line"><span class="comment">//Delay1000ms();</span></span><br><span class="line"><span class="comment">//P1 = P1&lt;&lt;1;  //11111110</span></span><br><span class="line"><span class="comment">//Delay1000ms();</span></span><br><span class="line"><span class="comment">//P1 = P1&lt;&lt;1; //11111100</span></span><br><span class="line"><span class="comment">//Delay1000ms();</span></span><br><span class="line">      </span><br><span class="line"><span class="comment">//方法三：位移实现对LED灯控制</span></span><br><span class="line">P1 = <span class="number">0xff</span>; <span class="comment">//11111111，将LED灯初始为灭</span></span><br><span class="line">Delay1000ms();</span><br><span class="line"><span class="comment">//通过4次循环左移，实现对LED灯的控制</span></span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">P1 = P1&lt;&lt;<span class="number">1</span>;</span><br><span class="line">Delay1000ms();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="I-O输入-电平检测"><a href="#I-O输入-电平检测" class="headerlink" title="I&#x2F;O输入(电平检测)"></a><center>I&#x2F;O输入(电平检测)</center></h1><p>输入是检测输入的电平的高低，与输出不同</p><p>电路图知，按键按下为低电平，则判断按键引脚为低电平则按键按下</p><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic/img/202406071642838.png" alt="按键电路图" style="zoom:50%;"><p>注意：按键会有抖动。消除方法：按键并联一个电容 或 代码延时</p><h2 id="代码编写-1"><a href="#代码编写-1" class="headerlink" title="代码编写"></a><center>代码编写</center></h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;reg52.h&gt;</span><span class="comment">//51单片机头文件</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;intrins.h&gt;</span></span></span><br><span class="line">sbit LED1 = P1^<span class="number">0</span>;</span><br><span class="line">sbit KEY1 = P3^<span class="number">2</span>;<span class="comment">//第一个按键位引脚</span></span><br><span class="line">sbit KEY2 = P3^<span class="number">3</span>;<span class="comment">//第二个按键位引脚</span></span><br><span class="line">sbit BEEP = P1^<span class="number">6</span>;<span class="comment">//蜂鸣器位引脚</span></span><br><span class="line"><span class="comment">//延时函数，用来消除按键抖动</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay120ms</span><span class="params">()</span><span class="comment">//@11.0592MHz</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> data i, j;</span><br><span class="line"></span><br><span class="line">i = <span class="number">216</span>;</span><br><span class="line">j = <span class="number">37</span>;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">while</span> (--j);</span><br><span class="line">&#125; <span class="keyword">while</span> (--i);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(KEY1 == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">Delay120ms();</span><br><span class="line"><span class="comment">//双重判断且加延时函数，消除按键抖动</span></span><br><span class="line"><span class="keyword">if</span>(KEY1 == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">LED1 = ~LED1;<span class="comment">//对LED取反，则实现LED开关</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(KEY2 == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">Delay120ms();</span><br><span class="line"><span class="keyword">if</span>(KEY2 == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">BEEP = ~BEEP;<span class="comment">//对蜂鸣器取反，则实现蜂鸣器开关</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="I-O内部电路分析"><a href="#I-O内部电路分析" class="headerlink" title="I&#x2F;O内部电路分析"></a><center>I&#x2F;O内部电路分析</center></h1><h2 id="51单片机"><a href="#51单片机" class="headerlink" title="51单片机"></a><center>51单片机</center></h2><p>准双向口&#x2F;弱上拉：可用作输出和输入功能而不需要配置口线输出状态</p><p>开漏输出(P0)：当P0管脚做I&#x2F;O时，需要外加<code>上拉电阻</code>，若作为地址&#x2F;数据总线时，不需要加上拉电阻</p><h2 id="STM32单片机"><a href="#STM32单片机" class="headerlink" title="STM32单片机"></a><center>STM32单片机</center></h2><h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><p>浮空输入：从IO引脚入，VDD(上拉电阻)打开和Vss(下拉电阻)打开，经过输入数据寄存器，读出</p><p>上拉输入：从IO引脚入，VDD(上拉电阻)闭合和Vss(下拉电阻)打开，经过输入数据寄存器，读出</p><p>下拉输入：从IO引脚入，VDD(上拉电阻)打开和Vss(下拉电阻)闭合，经过输入数据寄存器，读出</p><p>模拟输入：从IO引脚入，VDD(上拉电阻)打开和Vss(下拉电阻)打开，经过模拟输入</p><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic/img/202404121123673.png" alt="分析图" style="zoom: 67%;"><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><p>开漏输出：在开漏输出模式下，P-MOS(上拉)管不工作，只有N-MOS(下拉)管起作用。若输出数据寄存器的值为0，则N-MOS导通，IO口输出低电平；若输出数据寄存器的值为1，则N-MOS截止；由于P-MOS不工作，此时IO口既不是高电平，也不是低电平，这种状态被称为高阻态</p><p>推挽输出：在推挽输出模式下，若输出数据寄存器的值为0，则N-MOS(下拉)导通，P-MOS(上拉)截止，IO口输出低电平；若输出数据寄存器的值为1，则N-MOS截止，P-MOS导通，IO口输出高电平</p><p>复用：使别引脚也具备原本引脚功能</p><p>推挽复用输出、开漏复用输出</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;I-O输出-点灯&quot;&gt;&lt;a href=&quot;#I-O输出-点灯&quot; class=&quot;headerlink&quot; title=&quot;I&amp;#x2F;O输出(点灯)&quot;&gt;&lt;/a&gt;&lt;center&gt;I&amp;#x2F;O输出(点灯)&lt;/center&gt;&lt;/h1&gt;&lt;h2 id=&quot;分析电路&quot;&gt;&lt;a hre</summary>
      
    
    
    
    <category term="51单片机" scheme="http://example.com/categories/51%E5%8D%95%E7%89%87%E6%9C%BA/"/>
    
    
    <category term="51单片机" scheme="http://example.com/tags/51%E5%8D%95%E7%89%87%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>寄存器</title>
    <link href="http://example.com/post/f8f1fb54.html"/>
    <id>http://example.com/post/f8f1fb54.html</id>
    <published>2024-04-10T15:39:56.000Z</published>
    <updated>2024-06-06T09:01:08.567Z</updated>
    
    <content type="html"><![CDATA[<h1 id="什么是寄存器"><a href="#什么是寄存器" class="headerlink" title="什么是寄存器"></a><center>什么是寄存器</center></h1><p>单片机寄存器是一组特定的存储单元，每个存储单元可以存储一个特定的数据值，对寄存器赋不同特定值，起到配置和控制各种功能的作用</p><h1 id="寄存器分类"><a href="#寄存器分类" class="headerlink" title="寄存器分类"></a><center>寄存器分类</center></h1><h2 id="特殊功能寄存器"><a href="#特殊功能寄存器" class="headerlink" title="特殊功能寄存器"></a><center>特殊功能寄存器</center></h2><p>8位单片机则一个寄存器有8位：P1：P1_0 ~ P1_7，单片机可能还有P0、P1等等</p><p>TCON、TMOD、IE…….</p><h2 id="通用寄存器"><a href="#通用寄存器" class="headerlink" title="通用寄存器"></a><center>通用寄存器</center></h2><p>51单片机包括：R0、R1、R3、R4……（）</p><p>作用：存储临时数据、提高数据访问速度、传递函数参数、存储程序状态</p><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic/img/202406061701959.png" alt="通用寄存器" style="zoom:50%;"><h1 id="寄存器操作方式"><a href="#寄存器操作方式" class="headerlink" title="寄存器操作方式"></a><center>寄存器操作方式</center></h1><p>位寻址：一个位对应单片机一个引脚，这个引脚连接对应的器件&ensp;&ensp;&ensp;&ensp;</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">如：P0_1连接LED灯</span><br><span class="line">sbit LED1 = P0^<span class="number">1</span>;</span><br><span class="line">LED1 = <span class="number">1</span>;<span class="comment">//则LED灯亮</span></span><br></pre></td></tr></table></figure><p>如果没有位寻址，则整个寄存器赋值(十六进制0x00 ~ 0xff)</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">P0=<span class="number">0XFF</span>;<span class="comment">//P0=0XA5;</span></span><br></pre></td></tr></table></figure><p><code>如何知道寄存器对应的位以及芯片对应引脚功能，查看数据手册</code></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;什么是寄存器&quot;&gt;&lt;a href=&quot;#什么是寄存器&quot; class=&quot;headerlink&quot; title=&quot;什么是寄存器&quot;&gt;&lt;/a&gt;&lt;center&gt;什么是寄存器&lt;/center&gt;&lt;/h1&gt;&lt;p&gt;单片机寄存器是一组特定的存储单元，每个存储单元可以存储一个特定的数据值，对</summary>
      
    
    
    
    <category term="51单片机" scheme="http://example.com/categories/51%E5%8D%95%E7%89%87%E6%9C%BA/"/>
    
    
    <category term="51单片机" scheme="http://example.com/tags/51%E5%8D%95%E7%89%87%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>单片机工作原理</title>
    <link href="http://example.com/post/c6b2a2fd.html"/>
    <id>http://example.com/post/c6b2a2fd.html</id>
    <published>2024-04-08T12:55:48.000Z</published>
    <updated>2024-07-14T13:48:37.326Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><h1 id="最小系统"><a href="#最小系统" class="headerlink" title="最小系统"></a><center>最小系统</center></h1><h2 id="单片机芯片"><a href="#单片机芯片" class="headerlink" title="单片机芯片"></a><center>单片机芯片</center></h2><p>本次51单片机的芯片为：STC89C52</p><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic/img/202404101723175.png" alt="芯片类型" style="zoom:50%;"><p>Flash(闪存)程序存储器：存储程序的空间</p><p>SRAM：数据存储器，可用于存放程序执行的中间结果和过程数据</p><p>DPTR：16位的寄存器（两个8位寄存器组成），用于间接寻址，DPH存储地址的高8位，而DPL存储地址的低8位</p><p>EEPROM：带电可擦可编程只读存储器。是一种掉电后数据不丢失的存储芯片</p><p>看门狗：用于监控单片机程序运行状态的机制。它通过一个定时器电路实现，能够在程序运行失控或遇到硬件错误时对单片机进行复位操作，以确保程序能够重新开始执行</p><p>A&#x2F;D：模拟信号到数字信号的转换（模拟&#x2F;数字）</p><p>I&#x2F;O：输入和输出，输入（Input）是指数据或信号从外部设备或用户传输到计算机系统内部的过程，而输出（Output）则是指数据或信号从计算机系统传输到外部设备或用户的过程</p><h2 id="时钟电路"><a href="#时钟电路" class="headerlink" title="时钟电路"></a><center>时钟电路</center></h2><p>产生固定频率的交流信号，晶振是产生信号的元器件（由晶振频率计算产生）</p><p>12Mhz：</p><p>时钟周期：1&#x2F;12Mhz，单位是秒，12Mhz要转为秒为12000000hz</p><p>1&#x2F;12000000 ≈ 0.00000008s</p><p>机器周期：12 × 时钟周期 &#x3D; 0.00000008s × 12 &#x3D; 0.000001s，转为us就是1us</p><h2 id="复位电路"><a href="#复位电路" class="headerlink" title="复位电路"></a><center>复位电路</center></h2><p>按键复位和上电复位</p><h2 id="电源"><a href="#电源" class="headerlink" title="电源"></a><center>电源</center></h2><p>供电，51单片机一般5v，smt32单片机一般3.3v</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;[TOC]&lt;/p&gt;
&lt;h1 id=&quot;最小系统&quot;&gt;&lt;a href=&quot;#最小系统&quot; class=&quot;headerlink&quot; title=&quot;最小系统&quot;&gt;&lt;/a&gt;&lt;center&gt;最小系统&lt;/center&gt;&lt;/h1&gt;&lt;h2 id=&quot;单片机芯片&quot;&gt;&lt;a href=&quot;#单片机芯片&quot; cla</summary>
      
    
    
    
    <category term="51单片机" scheme="http://example.com/categories/51%E5%8D%95%E7%89%87%E6%9C%BA/"/>
    
    
    <category term="51单片机" scheme="http://example.com/tags/51%E5%8D%95%E7%89%87%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>浏览器插件</title>
    <link href="http://example.com/post/def84ee6.html"/>
    <id>http://example.com/post/def84ee6.html</id>
    <published>2024-04-07T04:43:37.000Z</published>
    <updated>2024-07-13T07:45:55.792Z</updated>
    
    <content type="html"><![CDATA[<p>如果我们经常使用的浏览器不是edge或者是chrome浏览器时，需要在浏览器安装插件时，无法获取插件以及不知道如何安装插件，本文章教你如何获取以及安装使用。</p><h1 id="获取方法"><a href="#获取方法" class="headerlink" title="获取方法"></a><center>获取方法</center></h1><h2 id="第一种方法（推荐）"><a href="#第一种方法（推荐）" class="headerlink" title="第一种方法（推荐）"></a><center>第一种方法（推荐）</center></h2><p>无需“魔法”，即可访问获取插件的网站：<a href="https://www.crxsoso.com/">链接</a></p><p>还有一个浏览器一些黑科技小网站（正规绿色）：<a href="https://www.youxiaohou.com/">链接</a></p><h2 id="网上搜集下载地址"><a href="#网上搜集下载地址" class="headerlink" title="网上搜集下载地址"></a><center>网上搜集下载地址</center></h2><p>由于这些都是搬运的插件，若怕插件不安全，请使用第一种方法（本人正在使用），也可自行必应搜<code>浏览器插件下载</code>关键词</p><p>Extfans：<a href="https://extfans.com/">链接</a></p><p>画夹插件：<a href="https://huajiakeji.com/">链接</a></p><p>收藏猫插件：<a href="https://chrome.pictureknow.com/">链接</a></p><h1 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a><center>使用方法</center></h1><p>一般下载之后，插件文件的后缀名为：crx的单文件</p><p>这里以华为浏览器为例，首先打开华为浏览器，在右上角点击三点图标，选择设置，进入设置</p><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic/img/202404071329022.png" alt="打开浏览器设置" style="zoom:50%;"><p>打开在左边的下面，有一个扩展程序，点击进去</p><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic/img/202404071331220.png" alt="打开扩展程序" style="zoom:50%;"><p>打开开发者模式</p><p><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic/img/202404071332308.png" alt="开发者模式"></p><p>打开之后，如果下载后的插件文件后缀为：<code>crx</code> 的单文件，则直接将文件拖进扩展程序这个页面，即可添加插件</p><p>如果是压缩包，解压之后是多文件，则点击左上角的加载已解压的扩展程序，然后选择解压出来的插件文件夹，打开即可。</p><p>如果是其他浏览器也是类似操作，也可以进行模仿尝试是否可以导入插件</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;如果我们经常使用的浏览器不是edge或者是chrome浏览器时，需要在浏览器安装插件时，无法获取插件以及不知道如何安装插件，本文章教你如何获取以及安装使用。&lt;/p&gt;
&lt;h1 id=&quot;获取方法&quot;&gt;&lt;a href=&quot;#获取方法&quot; class=&quot;headerlink&quot; title</summary>
      
    
    
    
    <category term="技术教程" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="插件" scheme="http://example.com/tags/%E6%8F%92%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>资源搜索网址</title>
    <link href="http://example.com/post/1f293ccb.html"/>
    <id>http://example.com/post/1f293ccb.html</id>
    <published>2024-04-03T15:18:19.000Z</published>
    <updated>2024-07-13T02:42:51.811Z</updated>
    
    <content type="html"><![CDATA[<h3 id="猫狸盘搜"><a href="#猫狸盘搜" class="headerlink" title="猫狸盘搜"></a>猫狸盘搜</h3><p><a href="https://www.alipansou.com/">地址</a></p><h3 id="千帆搜索"><a href="#千帆搜索" class="headerlink" title="千帆搜索"></a>千帆搜索</h3><p><a href="https://pan.qianfan.app/">地址</a></p><h3 id="懒盘搜索"><a href="#懒盘搜索" class="headerlink" title="懒盘搜索"></a>懒盘搜索</h3><p><a href="https://www.lzpanx.com/">地址</a></p><h3 id="快盘搜"><a href="#快盘搜" class="headerlink" title="快盘搜"></a>快盘搜</h3><p><a href="https://www.kpanso.com/">地址</a></p><h3 id="秒搜"><a href="#秒搜" class="headerlink" title="秒搜"></a>秒搜</h3><p><a href="https://miaosou.fun/">地址</a></p><h3 id="皮卡搜索"><a href="#皮卡搜索" class="headerlink" title="皮卡搜索"></a>皮卡搜索</h3><p><a href="https://www.pikaso.top/">地址</a></p><h3 id="磁力狗"><a href="#磁力狗" class="headerlink" title="磁力狗"></a>磁力狗</h3><p><a href="http://clg0.icu/">地址</a></p><h3 id="老王磁力"><a href="#老王磁力" class="headerlink" title="老王磁力"></a>老王磁力</h3><p><a href="https://laowangyx.top/">地址</a></p><h3 id="搜度盘"><a href="#搜度盘" class="headerlink" title="搜度盘"></a>搜度盘</h3><p><a href="http://www.sodu123.com/index.html">地址</a></p><h3 id="小白盘"><a href="#小白盘" class="headerlink" title="小白盘"></a>小白盘</h3><p><a href="https://www.xiaobaipan.com/">地址</a></p><h3 id="文件搜"><a href="#文件搜" class="headerlink" title="文件搜"></a>文件搜</h3><p><a href="https://wjsou.com/">地址</a></p><h3 id="SOSO云盘"><a href="#SOSO云盘" class="headerlink" title="SOSO云盘"></a>SOSO云盘</h3><p><a href="https://www.sosoyunpan.com/">地址</a></p><h3 id="搜BaiDu盘"><a href="#搜BaiDu盘" class="headerlink" title="搜BaiDu盘"></a>搜BaiDu盘</h3><p><a href="https://www.sobaidupan.com/">地址</a></p><h3 id="盘友圈"><a href="#盘友圈" class="headerlink" title="盘友圈"></a>盘友圈</h3><p><a href="https://panyq.com/">地址</a></p><h3 id="UP云搜"><a href="#UP云搜" class="headerlink" title="UP云搜"></a>UP云搜</h3><p><a href="https://www.upyunso.com/">地址</a></p><h3 id="学霸盘"><a href="#学霸盘" class="headerlink" title="学霸盘"></a>学霸盘</h3><p><a href="https://www.xuebapan.com/">地址</a></p><h3 id="盘他一下"><a href="#盘他一下" class="headerlink" title="盘他一下"></a>盘他一下</h3><p><a href="https://www.panothers.com/">地址</a></p><h3 id="云盘分享网"><a href="#云盘分享网" class="headerlink" title="云盘分享网"></a>云盘分享网</h3><p><a href="https://alypw.cn/">网址</a></p><h3 id="好当家"><a href="#好当家" class="headerlink" title="好当家"></a>好当家</h3><p><a href="https://www.hjdang.com/">网址</a></p><h3 id="爱盘搜"><a href="#爱盘搜" class="headerlink" title="爱盘搜"></a>爱盘搜</h3><p><a href="https://aipanso.com/">网址</a></p><h3 id="易搜"><a href="#易搜" class="headerlink" title="易搜"></a>易搜</h3><p><a href="https://yiso.fun/">网址</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;猫狸盘搜&quot;&gt;&lt;a href=&quot;#猫狸盘搜&quot; class=&quot;headerlink&quot; title=&quot;猫狸盘搜&quot;&gt;&lt;/a&gt;猫狸盘搜&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://www.alipansou.com/&quot;&gt;地址&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;千帆搜索&quot;&gt;</summary>
      
    
    
    
    <category term="技术教程" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="资源搜索" scheme="http://example.com/tags/%E8%B5%84%E6%BA%90%E6%90%9C%E7%B4%A2/"/>
    
  </entry>
  
  <entry>
    <title>图片压缩在线工具</title>
    <link href="http://example.com/post/79959306.html"/>
    <id>http://example.com/post/79959306.html</id>
    <published>2024-03-31T08:54:07.000Z</published>
    <updated>2024-04-01T03:57:39.737Z</updated>
    
    <content type="html"><![CDATA[<h3 id="TinyPng"><a href="#TinyPng" class="headerlink" title="TinyPng"></a>TinyPng</h3><p><a href="https://tinypng.com/">地址</a></p><h3 id="图好快"><a href="#图好快" class="headerlink" title="图好快"></a>图好快</h3><p><a href="https://www.tuhaokuai.com/">地址</a></p><h3 id="Jpeg-io"><a href="#Jpeg-io" class="headerlink" title="Jpeg.io"></a>Jpeg.io</h3><p><a href="https://www.jpeg.io/">地址</a></p><h3 id="色彩笔"><a href="#色彩笔" class="headerlink" title="色彩笔"></a>色彩笔</h3><p><a href="https://www.secaibi.com/tools/">地址</a></p><h3 id="压缩图"><a href="#压缩图" class="headerlink" title="压缩图"></a>压缩图</h3><p><a href="https://www.yasuotu.com/">地址</a></p><h3 id="Recompressor"><a href="#Recompressor" class="headerlink" title="Recompressor"></a>Recompressor</h3><p><a href="https://zh.recompressor.com/">地址</a></p><h3 id="Picdiet"><a href="#Picdiet" class="headerlink" title="Picdiet"></a>Picdiet</h3><p><a href="https://www.picdiet.com/zh-cn?ref=dartools.com#google_vignette">地址</a></p><h3 id="Squoosh"><a href="#Squoosh" class="headerlink" title="Squoosh"></a>Squoosh</h3><p><a href="https://squoosh.app/">地址</a></p><h3 id="Imagify"><a href="#Imagify" class="headerlink" title="Imagify"></a>Imagify</h3><p><a href="http://webresizer.com/resizer/">地址</a></p><h3 id="Optimizilla"><a href="#Optimizilla" class="headerlink" title="Optimizilla"></a>Optimizilla</h3><p><a href="https://imagecompressor.com/zh/">地址</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;TinyPng&quot;&gt;&lt;a href=&quot;#TinyPng&quot; class=&quot;headerlink&quot; title=&quot;TinyPng&quot;&gt;&lt;/a&gt;TinyPng&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://tinypng.com/&quot;&gt;地址&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;</summary>
      
    
    
    
    <category term="技术教程" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="图片压缩在线工具" scheme="http://example.com/tags/%E5%9B%BE%E7%89%87%E5%8E%8B%E7%BC%A9%E5%9C%A8%E7%BA%BF%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>小狼毫配置</title>
    <link href="http://example.com/post/5f6e69ef.html"/>
    <id>http://example.com/post/5f6e69ef.html</id>
    <published>2024-03-14T13:57:15.000Z</published>
    <updated>2024-04-06T09:53:59.248Z</updated>
    
    <content type="html"><![CDATA[<h1 id="下载小狼毫软件"><a href="#下载小狼毫软件" class="headerlink" title="下载小狼毫软件"></a><center>下载小狼毫软件</center></h1><p>小狼毫下载：<a href="https://rime.im/download/#">地址</a></p><h1 id="安装步骤"><a href="#安装步骤" class="headerlink" title="安装步骤"></a><center>安装步骤</center></h1><p>下载好安装包后，打开安装包，安装，步骤如下</p><p>点击我接受</p><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic/img/202403142202912.png" alt="步骤一" style="zoom:50%;"><p>这里是软件安装路径，选择自己要安装的位置，后直接点击安装</p><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic/img/202403142203014.png" alt="步骤二" style="zoom:50%;"><p>后续还有个<code>用户配置文件</code>的安装目录，这个目录保存好，在别的电脑可以直接恢复配置。</p><p>方案选定，选择图片单个即可，选择 中 下一步</p><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic/img/202403142204796.png" alt="步骤三" style="zoom:50%;"><p>然后，选择自己喜欢的风格，点击中，即可安装完成。</p><h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><p>在任务栏中，在 中 字右键，选择用户文件夹</p><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic/img/202403142207761.png" alt="配置一" style="zoom:67%;"><p>在大佬整理的文件下载词库配置，大佬的：GitHub<a href="https://github.com/iDvel/rime-ice">地址</a>，直接整个打包下载</p><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic/img/202403142209429.png" alt="打包下载" style="zoom: 33%;"><h1 id="重点配置"><a href="#重点配置" class="headerlink" title="重点配置"></a>重点配置</h1><p>解压下载好的词库配置包，右键退出算法服务（若点击退出没有反应，直接重启即可），然后删除用户文件夹内的所有文件（最好备份一下原本的文件），复制大佬仓库中的所有文件到你的用户文件夹中，重启电脑，刚重启之后，等待一会儿，如果还不行，再右键重新部署，这期间会出现 输入法调出来但是无法打字的问题，等重新部署完成，可以打字即部署完成</p><hr><p>tip：个人感觉不是很好用，可能不会配置，或者说没有精力去配置，如果想要好用需要花费精力去配置。本人已切换到百度输入法。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;下载小狼毫软件&quot;&gt;&lt;a href=&quot;#下载小狼毫软件&quot; class=&quot;headerlink&quot; title=&quot;下载小狼毫软件&quot;&gt;&lt;/a&gt;&lt;center&gt;下载小狼毫软件&lt;/center&gt;&lt;/h1&gt;&lt;p&gt;小狼毫下载：&lt;a href=&quot;https://rime.im/do</summary>
      
    
    
    
    <category term="技术教程" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="小狼毫输入法" scheme="http://example.com/tags/%E5%B0%8F%E7%8B%BC%E6%AF%AB%E8%BE%93%E5%85%A5%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>GitHub+Picgo图片上传</title>
    <link href="http://example.com/post/d20e58f5.html"/>
    <id>http://example.com/post/d20e58f5.html</id>
    <published>2024-03-01T09:14:17.000Z</published>
    <updated>2024-03-01T09:42:37.913Z</updated>
    
    <content type="html"><![CDATA[<p> Picgo下载，修改安装路径，其他一路下一步！</p><blockquote><p><a href="https://github.com/Molunerfinn/picgo/releases">地址</a></p></blockquote><p> 注册GitHub，注册过程不详细展开，不会的百度一下</p><blockquote><p><a href="https://github.com/">地址</a></p></blockquote><h1 id="新建GitHub仓库存放图片"><a href="#新建GitHub仓库存放图片" class="headerlink" title="新建GitHub仓库存放图片"></a>新建GitHub仓库存放图片</h1><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic/img/202403011715417.png" alt="新建" style="zoom: 33%;"><p><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic/img/202403011718105.png" alt="填写信息"></p><h1 id="生成Token令牌"><a href="#生成Token令牌" class="headerlink" title="生成Token令牌"></a>生成Token令牌</h1><p>点击头像，点击Settings</p><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic/img/202403011720770.png" alt="img" style="zoom: 50%;"><p>滑到最后</p><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic/img/202403011720876.png" alt="进入生成令牌" style="zoom: 33%;"><p><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic/img/202403011721976.png" alt="选择对应选项"></p><p>过期时间：<code>No expiration</code>(永久不过期)</p><p><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic/img/202403011722080.png" alt="设置令牌信息"></p><blockquote><p><strong>务必将令牌保存起来</strong>，放在一个安全的地方，页面关掉后就看不到了。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic/img/202403011726560.png" alt="生产令牌"></p><h1 id="创建img文件夹"><a href="#创建img文件夹" class="headerlink" title="创建img文件夹"></a>创建img文件夹</h1><p>回到刚才新建存放图片的仓库，新建文件夹</p><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic/img/202403011726060.png" alt="创建文件夹" style="zoom:50%;"><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic/img/202403011727746.png" alt="命名文件夹" style="zoom: 33%;"><h1 id="设置GitHub图床"><a href="#设置GitHub图床" class="headerlink" title="设置GitHub图床"></a>设置GitHub图床</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">自定义域名需要配置为：https://cdn.jsdelivr.net/gh/用户名/仓库名，这样就才可以通过cdn访问图片</span><br><span class="line">仓库名：GitHub用户名/GitHub仓库地址</span><br><span class="line">分支名：main</span><br><span class="line">Token：GitHub中设定的AccessToken</span><br><span class="line">自定义域名：https://cdn.jsdelivr.net/gh/用户名/仓库名</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic/img/202403011728215.png" alt="Picgo设置"></p><p>点击上传区上传图片</p><p>上传成功之后</p><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic/img/202403011729915.png" alt="例图" style="zoom: 50%;"><p>如果提示网络不好等错误，可能不稳定，稍后再试试看。或者可以重启试试看!！</p><p>在Typora中，文件-》偏好设置中，设置成下图，将语法偏好所有选项关闭，可以避免直接复制图片进Typora报错</p><p><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic/img/202403011729398.png" alt="img"></p><p>仓库可能最多只能存放1g，网上说的，所以最好快到的时候重新建一个仓库</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt; Picgo下载，修改安装路径，其他一路下一步！&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/Molunerfinn/picgo/releases&quot;&gt;地址&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt; 注册GitHu</summary>
      
    
    
    
    <category term="技术教程" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="GitHub+Picgo图片上传" scheme="http://example.com/tags/GitHub-Picgo%E5%9B%BE%E7%89%87%E4%B8%8A%E4%BC%A0/"/>
    
  </entry>
  
  <entry>
    <title>GitHub同步gitee并部署</title>
    <link href="http://example.com/post/6c3f8114.html"/>
    <id>http://example.com/post/6c3f8114.html</id>
    <published>2024-02-28T14:32:35.000Z</published>
    <updated>2024-02-28T15:29:04.008Z</updated>
    
    <content type="html"><![CDATA[<h1 id="创建并同步GitHub仓库"><a href="#创建并同步GitHub仓库" class="headerlink" title="创建并同步GitHub仓库"></a><center>创建并同步GitHub仓库</center></h1><p>点击加号，选择从GitHub仓库导入</p><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic/img/202402282300375.jpg" alt="导入仓库" style="zoom:67%;"><p>选择导入GitHub仓库</p><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic/img/202402282301124.jpg" alt="选择仓库" style="zoom: 50%;"><p>导入对应GitHub仓库，此时需要注意仓库名字需要和你创建gitee时的名字相同，如果不知道名字可先往下看，中间可修改仓库名字</p><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic/img/202402282303081.jpg" alt="导入仓库" style="zoom: 50%;"><p>查看名字为哪个，可看浏览器网址，中间名字就是</p><p><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic/img/202402282318977.jpg" alt="查看用户名"></p><p>设置仓库为公有，为了可以开启pages，进入仓库，点击管理</p><p><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic/img/202402282306887.jpg" alt="进入设置"></p><p>基本信息最下方找到，是否开源，点击开源</p><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic/img/202402282307142.jpg" alt="开源" style="zoom: 50%;"><h1 id="部署gitee-pages"><a href="#部署gitee-pages" class="headerlink" title="部署gitee pages"></a>部署gitee pages</h1><p>进入对应仓库，点击服务，点击gitee pages，此处需要实名认证，实名认证完之后才可以开启</p><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic/img/202402282320319.jpg" alt="部署" style="zoom: 50%;"><p>进入之后，直接选中对应仓库中的分支，点击部署即可</p><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic/img/202402282322599.jpg" alt="部署中" style="zoom: 50%;"><p>GitHub上传部署之后不会自动更新gitee，需要手动部署，只需要在对应的仓库中，点击仓库名字旁边的旋转图标，强制更新即可，更新就直接部署了，不需要自己再进入pages重新部署。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;创建并同步GitHub仓库&quot;&gt;&lt;a href=&quot;#创建并同步GitHub仓库&quot; class=&quot;headerlink&quot; title=&quot;创建并同步GitHub仓库&quot;&gt;&lt;/a&gt;&lt;center&gt;创建并同步GitHub仓库&lt;/center&gt;&lt;/h1&gt;&lt;p&gt;点击加号，选择从G</summary>
      
    
    
    
    <category term="技术教程" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="GitHub同步gitee并部署" scheme="http://example.com/tags/GitHub%E5%90%8C%E6%AD%A5gitee%E5%B9%B6%E9%83%A8%E7%BD%B2/"/>
    
  </entry>
  
  <entry>
    <title>云图床</title>
    <link href="http://example.com/post/2ec6e870.html"/>
    <id>http://example.com/post/2ec6e870.html</id>
    <published>2024-02-23T01:53:48.000Z</published>
    <updated>2024-02-24T06:29:59.265Z</updated>
    
    <content type="html"><![CDATA[<h1 id="图床导航"><a href="#图床导航" class="headerlink" title="图床导航"></a>图床导航</h1><p><a href="http://imgdh.com/">网址</a></p><h1 id="路过图床"><a href="#路过图床" class="headerlink" title="路过图床"></a>路过图床</h1><p><a href="https://imgse.com/">网址</a></p><h1 id="Picgo图床"><a href="#Picgo图床" class="headerlink" title="Picgo图床"></a>Picgo图床</h1><p><a href="https://www.picgo.net/">网址</a></p><h1 id="sm-ms图床"><a href="#sm-ms图床" class="headerlink" title="sm.ms图床"></a>sm.ms图床</h1><p><a href="https://sm.ms/">网址</a></p><h1 id="薄荷图床"><a href="#薄荷图床" class="headerlink" title="薄荷图床"></a>薄荷图床</h1><p><a href="https://zixiaoyun.com/">网址</a></p><h1 id="风筝图床"><a href="#风筝图床" class="headerlink" title="风筝图床"></a>风筝图床</h1><p><a href="https://www.imgbed.link/">网址</a></p><h1 id="ImgURL图床"><a href="#ImgURL图床" class="headerlink" title="ImgURL图床"></a>ImgURL图床</h1><p><a href="https://www.imgurl.org/vip/manage/upload">网址</a></p><h1 id="Z4A图床"><a href="#Z4A图床" class="headerlink" title="Z4A图床"></a>Z4A图床</h1><p><a href="https://z4a.net/">网址</a></p><h1 id="Hello图床"><a href="#Hello图床" class="headerlink" title="Hello图床"></a>Hello图床</h1><p><a href="https://www.helloimg.com/">网址</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;图床导航&quot;&gt;&lt;a href=&quot;#图床导航&quot; class=&quot;headerlink&quot; title=&quot;图床导航&quot;&gt;&lt;/a&gt;图床导航&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;http://imgdh.com/&quot;&gt;网址&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;路过图床&quot;&gt;&lt;a href=&quot;</summary>
      
    
    
    
    <category term="技术教程" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="云图床" scheme="http://example.com/tags/%E4%BA%91%E5%9B%BE%E5%BA%8A/"/>
    
  </entry>
  
  <entry>
    <title>魔法</title>
    <link href="http://example.com/post/812d49a5.html"/>
    <id>http://example.com/post/812d49a5.html</id>
    <published>2024-02-22T14:02:09.000Z</published>
    <updated>2024-04-11T01:04:39.164Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="ebfa71a3ddfbe28bbc4dc219dd98ece3a00e737d9a33da54df14312da76d77c3">d0082e95ce53ece4a4c0f5b8a727fc3f7abb847cc98e7a9a6a2fde3b380d7c463eab01dd65778c150e07dcadb67c6af1d15b71b699b47174951fa67a2912481f86bfc3f40db66f875cde4163a833c2282a5ef27e4dce42910951c1fb29d2bcede01f597d9b999b5ae308c011e3a8bcfe87f6943b92da1629ebf2f20f85e1ff09f7ac03362d4799f57091d1ce3affbc597b5318e09fba03e79b9330c9282a9530ab686db628d7499492ad97c86bcd148c5955f26e767728282d95e46c39afe37e7b3125e16426491d24604cb05862abbd276c34f94a0a10e1d1c5a3f40e3aa3f2a340378712f0329a6c38f361781b02e77129aece2ee545f49116099dd42be108e85d0d6c93d1650da9e333105a9e2ce14df0b1d76be27466bd48064da706e38d7a7aa70e122cda666c38c16945e90fd655b5e1b7f482947e00fe39a263f7243626482cfc6e33301285edfce86fe4bd930a32a247a2fd08747b7d0bdb3d3ac2bc43fe860f7ec0967543000929eb011651ba4494aca9ce5937be5d5a872ea65ebad211ace06566d8c6b1ec3973953c8979b0715d02068f688ba0cd9165cc13279583427e9e9b64810ea8c48fd5ebc786fc10eb5ffa5c656853f859a8e923f6f1f2569f74ebc27a1072ab5d68201b5ba236d2288b01d101eb7e56da22546facb31bba2589b3b247a0fca3c376543294e3207ab5fe131ff4e463ad77635bbcd2de80781b01397a0b1fb02e9a68e1f165ea4a16f8f2aa5019f87a69f4cc32172bace6fae2b612a33c2a1d41568fa05d6b5c11421b5ed153a2bc30ed1dd7ad95b1945b1515ded15105b848d3221e0970a97d1c00d043bd72a393ec8e41cdbe4c12a04cde385026f4923b4271f033be2630e1b5</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">输入密码，查看文章。</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">这是一篇加密文章，内容可能是个人情感宣泄或者收费技术。如果你非常好奇，请与我联系。</summary>
    
    
    
    <category term="技术教程" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="魔法" scheme="http://example.com/tags/%E9%AD%94%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>计算机备考</title>
    <link href="http://example.com/post/df95841.html"/>
    <id>http://example.com/post/df95841.html</id>
    <published>2024-01-06T01:00:00.000Z</published>
    <updated>2024-07-13T13:19:13.681Z</updated>
    
    <content type="html"><![CDATA[<h1 id="C语言程序和程序设计概述"><a href="#C语言程序和程序设计概述" class="headerlink" title="C语言程序和程序设计概述"></a><center>C语言程序和程序设计概述</center></h1><p>程序：可以连续执行的一条条指令的集合</p><p>开发过程：C源程序(.c文件) –&gt; 目标程序(.obj二进制文件，目标文件) –&gt; 可执行文件(.exe文件) –&gt;结果</p><p>在任何机器上可以运行C源程序生成的<code> .exe 文件</code></p><p>没有安装C语言集成开发环境，不能编译C语言程序，<code>函数</code>是C程序的<code>基本单位</code></p><p>程序设计有以下几个部分：</p><ol><li>确定数据结构</li><li>确定算法</li><li>编码（编写代码）</li><li>计算机上调试程序</li><li>整理并写出文档资料</li></ol><p>C语言运行方法：编译执行，python：解释执行</p><p>头文件：#include&lt;stdio.h&gt;</p><p>C语言的结构特点：</p><ul><li>函数是C程序的主要组成部分</li></ul><p>&ensp;&ensp;&ensp;&ensp;一个C程序是由一个或多个函数组成</p><p>&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;必须包含一个main函数（只能有一个）</p><p>&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;每个函数都用来实现一个或多个特定功能</p><p>&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;被调用的函数可以是库函数，也可以是自己编制设计的函数</p><ul><li>程序总是从main函数开始执行</li><li>C程序书写可以一行内写几个语句，也可以一个语句分写在多行上（以<mark>分号</mark>为标准，判断是否是一个语句）</li><li>数据声明和语句最后必须有分号</li><li>C语言本事不提供输入输出语句，由库函数提供</li></ul><p>算法表示方法：</p><ol><li>自然语言</li><li>用伪代码表示</li><li>用流程图表示</li></ol><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic/img/202402220850908.png" alt="流程图常用符号" style="zoom:50%;"><ol start="4"><li>N-S流程图表示</li></ol><h2 id="标识符、常量和变量"><a href="#标识符、常量和变量" class="headerlink" title="标识符、常量和变量"></a><center>标识符、常量和变量</center></h2><p>常量</p><p>整型常量：12、0、-3</p><p>实型常量：</p><p>&ensp;&ensp;&ensp;&ensp;十进制小数：0.34、-56.79</p><p>&ensp;&ensp;&ensp;&ensp;指数形式：12.34e3（12.34×10³）</p><p>符号常量：’a’、’b’</p><p>字符串常量：”Beijing”</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">常量在程序运行期间，值不可以改变的</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PI 3.14159<span class="comment">//定义符号常量不需要分号</span></span></span><br></pre></td></tr></table></figure><p>变量</p><p>&ensp;&ensp;&ensp;&ensp;在程序运行期间，值是可以改变的</p><p>&ensp;&ensp;&ensp;&ensp;定义变量时指定该变量的名字和类型</p><p>&ensp;&ensp;&ensp;&ensp;变量名实际上是以一个名字代表一个存储地址</p><p>&ensp;&ensp;&ensp;&ensp;从变量取值，实际上是通过变量名找到相应的内存地址，从该存储单元中读取数据</p><p>标识符</p><p>&ensp;&ensp;&ensp;&ensp;只能由字母、数字和下划线组成，且第一个字符必须为字符或下划线，不能使用C语言关键字作为标识符</p><p>C语言是严格区分字母大小写</p><p>关键字必须用小写字母</p><p><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic/img/202402220849778.png" alt="关键字"></p><h2 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a><center>数据类型</center></h2><h3 id="整型数据"><a href="#整型数据" class="headerlink" title="整型数据"></a>整型数据</h3><p>&ensp;&ensp;&ensp;&ensp;整型常量3种表示形式</p><p>&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;十进制整数，如2，-983</p><p>&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;八进制整数。以0开头，由0~7构成，通常为无符号数，如012，八进制12</p><p>&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;十六进制整数。以0x开头，由 0 ~ 9 和 A ~ F 或 a ~ f 构成，如0x12A，十六进制12A</p><p>&ensp;&ensp;&ensp;&ensp;整型变量：<font color="red">类型说明符 变量名标识符;</font>如 int a,b,c;</p><p>&ensp;&ensp;&ensp;&ensp;在定义变量的同时给变量赋初值，称变量初始化，若没有初始化，则内容不确定</p><p>计算机最小存储单位：位(bit)</p><p>&ensp;&ensp;&ensp;&ensp;一个<mark>字节</mark>(byte) &#x3D; 8bit</p><table><thead><tr><th align="center">关键字</th><th align="center">类型</th><th align="center">所占的空间</th></tr></thead><tbody><tr><td align="center">char</td><td align="center">字符串类型</td><td align="center">占1字节空间（8位二进制位）</td></tr><tr><td align="center">short</td><td align="center">短整型</td><td align="center">占2字节空间（16位二进制位）</td></tr><tr><td align="center">int</td><td align="center">整型</td><td align="center">占4个字节空间（32位二进制）</td></tr><tr><td align="center">long</td><td align="center">长整型</td><td align="center">占4个字节空间（32位二进制）（在64为平台下占8个字节）</td></tr><tr><td align="center">float</td><td align="center">单精度浮点数</td><td align="center">占4个字节空间（32为二进制）（7位有效位，指数-37到38）</td></tr><tr><td align="center">double</td><td align="center">双精度浮点数</td><td align="center">占8个字节空间（64为二进制）（16位有效位，指数-307到308）</td></tr></tbody></table><p>在存储有符号数时，存储单元最高为代表符号位，0为正，1为负</p><p>设计程序时，注意变量类型的取值范围，当赋值超过取值范围时，会出现溢出错误</p><p>一个整 型常量后加 U或u 后缀则被认为时unsigned类型，内存中按unsigned规定方式存放</p><p>一个整型常量后加 L或l 后缀则被认为时long类型，内存中按long规定位数存放</p><p>无符号长整数：用后缀 UL&#x2F;ul表示，如：15ul</p><h3 id="浮点型-实型-数据"><a href="#浮点型-实型-数据" class="headerlink" title="浮点型(实型)数据"></a>浮点型(实型)数据</h3><p>实型常量</p><p>&ensp;&ensp;&ensp;&ensp;又称实属或浮点数</p><p>&ensp;&ensp;&ensp;&ensp;十进制小数形式，如123.456</p><p>&ensp;&ensp;&ensp;&ensp;指数形式：以 “e” 或 “E” 后跟一个整数来表示以10为底的幂数，如 2.3026e2</p><p>&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;规定：字母 e 或 E 之前必须有数字，且e或E后面指数必须为整数</p><p>&ensp;&ensp;&ensp;&ensp;10⁸不能写成e8，必须写成：1e8 或 1.0E8</p><p>实型变量</p><p>&ensp;&ensp;&ensp;&ensp;实型(3.14159)数据在内存中存放的形式：</p><p>&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;+：数符</p><p>&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;.314159：小数部分</p><p>&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;1：指数</p><p>&ensp;&ensp;&ensp;&ensp;小数部分占的为数越多，数的有效数字越多，精度越高</p><p>&ensp;&ensp;&ensp;&ensp;指数部分占的位数越多，则能表示的数值范围越大</p><h3 id="字符型数据"><a href="#字符型数据" class="headerlink" title="字符型数据"></a>字符型数据</h3><p>字符常量</p><p>&ensp;&ensp;&ensp;&ensp;用单引号括起来的一个字符，如’a‘、’E‘，不能 ’ab‘</p><p>&ensp;&ensp;&ensp;&ensp;字符常量以ASCII码存储，一个字符占一个字节，<mark>大写</mark>字母与<mark>小写</mark>字母ASCII码值相差 32</p><p>字符变量</p><p>&ensp;&ensp;&ensp;&ensp;如：char c1,c2,c3; c1 &#x3D; ‘A’; c2 &#x3D; ‘\n’;</p><p>&ensp;&ensp;&ensp;&ensp;每个字符变量分配一个字节用于存放一个字符（存放的是字符的ASCII码值）</p><p>字符数据与整型数据可相互赋值，直接运算</p><p>用%d输出，则输出整型数，用%c输出，则输出字符</p><p>字符串常量</p><p>&ensp;&ensp;&ensp;&ensp;一对双引号(“ “)括起来的字符序列，字符个数称为其长度，如：”hellow”</p><p>&ensp;&ensp;&ensp;&ensp;长度为n的字符串，在计算机存储中占n+1个字节，原因：会自动在结尾添加 ’\0‘</p><p>ASCII码表</p><p><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic/img/202402220849502.png" alt="ASCII码表"></p><h3 id="转义字符"><a href="#转义字符" class="headerlink" title="转义字符"></a>转义字符</h3><table><thead><tr><th align="center">字符形式</th><th align="center">功能</th><th align="center">字符形式</th><th align="center">功能</th></tr></thead><tbody><tr><td align="center">\n</td><td align="center">回车换行</td><td align="center">\\</td><td align="center">一个反斜杠字符(\)</td></tr><tr><td align="center">\t</td><td align="center">将当前位置移到下一个tab位置</td><td align="center">\‘</td><td align="center">一个单引号(‘)</td></tr><tr><td align="center">\v</td><td align="center">当前位置移到下一个垂直制表对齐点</td><td align="center">\“</td><td align="center">一个双引号(“)</td></tr><tr><td align="center">\r</td><td align="center">回车符</td><td align="center">\ddd</td><td align="center">三位八进制数代表一个ASCII字符</td></tr><tr><td align="center">\f</td><td align="center">换页符</td><td align="center">\xhh</td><td align="center">二位十六进制代表一个ASCII字符</td></tr><tr><td align="center">\b</td><td align="center">将当前位置后退一个字符</td><td align="center">\0</td><td align="center">空值，其ASCII码值为0</td></tr></tbody></table><h3 id="符号常量"><a href="#符号常量" class="headerlink" title="符号常量"></a>符号常量</h3><p>用标识符表示的常量，一般符号常量名用大写字母表示，命令通常放在文件头，在程序中不允许重新赋值，注意：不需要分号结尾</p><p>格式：#define 标识符 常量如：#define PI 3</p><h3 id="数学函数"><a href="#数学函数" class="headerlink" title="数学函数"></a>数学函数</h3><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic/img/202402220849431.png" alt="数学函数" style="zoom: 50%;"><h2 id="运算符和表达式"><a href="#运算符和表达式" class="headerlink" title="运算符和表达式"></a><center>运算符和表达式</center></h2><h3 id="算术运算符"><a href="#算术运算符" class="headerlink" title="算术运算符"></a>算术运算符</h3><p>优先级越小，越优先，优先级相同时，运算次序由<mark>结合性</mark>决定</p><table><thead><tr><th align="center">运算符</th><th align="center">运算规则</th><th align="center">操作数数目</th><th align="center">优先级</th><th align="center">结合方向</th></tr></thead><tbody><tr><td align="center">-</td><td align="center">负号</td><td align="center">单目</td><td align="center">2</td><td align="center">左结合</td></tr><tr><td align="center">+</td><td align="center">加法</td><td align="center">双目</td><td align="center">4</td><td align="center">左结合</td></tr><tr><td align="center">-</td><td align="center">减法</td><td align="center">双目</td><td align="center">4</td><td align="center">左结合</td></tr><tr><td align="center">*</td><td align="center">乘法</td><td align="center">双目</td><td align="center">3</td><td align="center">左结合</td></tr><tr><td align="center">&#x2F;</td><td align="center">除法</td><td align="center">双目</td><td align="center">3</td><td align="center">左结合</td></tr><tr><td align="center">%</td><td align="center">取余或模</td><td align="center">双目</td><td align="center">3</td><td align="center">左结合</td></tr></tbody></table><p>1.&#x2F;3 + 1.&#x2F;3 + 1.&#x2F;3 &#x3D; 1</p><p>取余运算符，所得结果的符号与运算符左侧操作数符号相同，如：-5 % 2 &#x3D; -1，5 % -2 &#x3D; 1，<code>运算对象只能是整型</code>，结果也是整型，如：5 % 2 &#x3D;1</p><h3 id="自增、自减运算符"><a href="#自增、自减运算符" class="headerlink" title="自增、自减运算符"></a>自增、自减运算符</h3><p>自增和自减运算符只能用于变量，不能用于常量和表达式</p><table><thead><tr><th align="center">含义</th><th align="center">运算符</th><th align="center">优先级</th><th align="center">结合性</th><th align="center">功能</th></tr></thead><tbody><tr><td align="center">自增</td><td align="center">++</td><td align="center">2</td><td align="center">右结合</td><td align="center">使变量的值增1</td></tr><tr><td align="center">自减</td><td align="center">–</td><td align="center">2</td><td align="center">右结合</td><td align="center">使变量的值减1</td></tr></tbody></table><p>使用形式：</p><p>&ensp;&ensp;&ensp;&ensp;++i 或 –i 变量 i 先自增或自减 1，再引用 i</p><p>&ensp;&ensp;&ensp;&ensp;i++ 或 i– 先使用变量 i，再自增或自减1</p><h3 id="不同数据类型间的转换"><a href="#不同数据类型间的转换" class="headerlink" title="不同数据类型间的转换"></a>不同数据类型间的转换</h3><p>自动转换类型：数据类型自动由低级向高级转换</p><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic/img/202402220849472.png" alt="自动转换类型图" style="zoom:33%;"><p>强制转换：将表达式的运算结果强制转换成指定的数据类型</p><p>格式：(数据类型说明符)(表达式)</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> x,y;</span><br><span class="line"><span class="type">float</span> z;</span><br><span class="line">(<span class="type">float</span>)(x+y);<span class="comment">//浮点型</span></span><br><span class="line">(<span class="type">int</span>)z+x;<span class="comment">//整型</span></span><br></pre></td></tr></table></figure><h3 id="关系运算符（比较运算）"><a href="#关系运算符（比较运算）" class="headerlink" title="关系运算符（比较运算）"></a>关系运算符（比较运算）</h3><p>关系表达式：</p><p>&ensp;&ensp;&ensp;&ensp;格式：表达式1 关系运算符 表达式2;如：m+n &lt;&#x3D; 20; 成立表达式值为 1，不成立值为0</p><table><thead><tr><th align="center">含义</th><th align="center">运算符</th><th align="center">优先级</th><th align="center">结合性</th></tr></thead><tbody><tr><td align="center">小于</td><td align="center">&lt;</td><td align="center">6</td><td align="center">左结合</td></tr><tr><td align="center">小于等于</td><td align="center">&lt;&#x3D;</td><td align="center">6</td><td align="center">左结合</td></tr><tr><td align="center">大于</td><td align="center">&gt;</td><td align="center">6</td><td align="center">左结合</td></tr><tr><td align="center">大于等于</td><td align="center">&gt;&#x3D;</td><td align="center">6</td><td align="center">左结合</td></tr><tr><td align="center">等于</td><td align="center">&#x3D;&#x3D;</td><td align="center">7</td><td align="center">左结合</td></tr><tr><td align="center">不等于</td><td align="center">!&#x3D;</td><td align="center">7</td><td align="center">左结合</td></tr></tbody></table><h3 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h3><table><thead><tr><th>含义</th><th>运算符</th><th>优先级</th><th>结合性</th><th>运算逻辑</th></tr></thead><tbody><tr><td>逻辑非</td><td>!</td><td>2</td><td>右结合</td><td>取反</td></tr><tr><td>逻辑与</td><td>&amp;&amp;</td><td>11</td><td>左结合</td><td>全真为真，其余为假</td></tr><tr><td>逻辑或</td><td>||</td><td>12</td><td>左结合</td><td>全假为假，其余为真</td></tr></tbody></table><h4 id="逻辑表达式"><a href="#逻辑表达式" class="headerlink" title="逻辑表达式"></a>逻辑表达式</h4><p>&ensp;&ensp;&ensp;&ensp;形式：表达式1 逻辑运算符 表达式2如：5 &gt; 3 &amp;&amp; 2 || 4 - !’a’</p><p>判断时，0 代表 假，非0 代表真</p><p>逻辑与 和 逻辑或 短路能力</p><p>&ensp;&ensp;&ensp;&ensp;逻辑与：只有表达式1值为真，才求表达式2 的值</p><p>&ensp;&ensp;&ensp;&ensp;逻辑或：只有表达式1值为假，才判断表达式2的值</p><h3 id="三目表达式"><a href="#三目表达式" class="headerlink" title="三目表达式"></a>三目表达式</h3><p>形式：表达式1 ? 表达式2 : 表达式3如：max &#x3D; (a&gt;b)?a:b;</p><p>如果表达式1为真，执行表达式2，为假，执行表达式3</p><p>最终判断出的值类型，为表达式2和表达式3 中较高的类型</p><p>可以嵌套的，这种嵌套是右结合，如：a &gt; b ? c : c &gt; d ? b : d;</p><h3 id="赋值运算符"><a href="#赋值运算符" class="headerlink" title="赋值运算符"></a>赋值运算符</h3><p>复合赋值运算符：+&#x3D;、-&#x3D;、*&#x3D;、&#x2F;&#x3D;、%&#x3D;优先级14，右结合性</p><h3 id="赋值表达式"><a href="#赋值表达式" class="headerlink" title="赋值表达式"></a>赋值表达式</h3><p>简单赋值表达式</p><p>&ensp;&ensp;&ensp;&ensp;格式：变量 &#x3D; 表达式如：k &#x3D; i+++–j</p><p>&ensp;&ensp;&ensp;&ensp;执行顺序：先计算，再赋值</p><p>复合表达式</p><p>&ensp;&ensp;&ensp;&ensp;x +&#x3D; y +&#x3D; z*z–&gt; x&#x3D; x+(y&#x3D;y+z*z)</p><h3 id="逗号运算符"><a href="#逗号运算符" class="headerlink" title="逗号运算符"></a>逗号运算符</h3><p>符号：,</p><p>优先级15，左结合</p><h3 id="逗号表达式"><a href="#逗号表达式" class="headerlink" title="逗号表达式"></a>逗号表达式</h3><p>格式：表达式1,表达式2,表达式3如：a &#x3D; 3*5,a*10,a+8</p><p>求解过程中：先求表达式1的值，再表达式2的值，再表达式n的值，<mark>表达式n</mark>的值作为<font color="red">整个逗号表达式的值</font></p><h2 id="选择结构（分支结构）"><a href="#选择结构（分支结构）" class="headerlink" title="选择结构（分支结构）"></a><center>选择结构（分支结构）</center></h2><h3 id="if语句"><a href="#if语句" class="headerlink" title="if语句"></a>if语句</h3><p>格式：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(表达式) 语句<span class="number">1</span>;<span class="comment">//语句1，只能是一条语句</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(表达式)</span><br><span class="line">&#123;</span><br><span class="line">语句块<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>()</span><br><span class="line">&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>()</span><br><span class="line">&#123;&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>()</span><br><span class="line">    &#123;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意：else 与 if 必须成对出现，且else总是与<mark>最近</mark>的一个未配对的 if 配对</p><h3 id="switch语句"><a href="#switch语句" class="headerlink" title="switch语句"></a>switch语句</h3><p>格式：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">switch</span>(表达式)<span class="comment">//表达式类型要与case后面常量值类型匹配，只能是整型、字符型或枚举型</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> 常量表达式:<span class="comment">//每个case后的常量表达式不允许相同</span></span><br><span class="line">语句<span class="number">1</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> 常量表达式:</span><br><span class="line">语句<span class="number">2</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">......</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">语句n+<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>语句终止<span class="keyword">switch</span>语句的执行</span><br></pre></td></tr></table></figure><h2 id="循环结构"><a href="#循环结构" class="headerlink" title="循环结构"></a><center>循环结构</center></h2><h3 id="while语句"><a href="#while语句" class="headerlink" title="while语句"></a>while语句</h3><p>格式：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span>(表达式)</span><br><span class="line">&#123;</span><br><span class="line">    语句块;<span class="comment">//循环体</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//先判断，再执行，有可能一次也不执行</span></span><br></pre></td></tr></table></figure><p>注意：<br>&ensp;&ensp;&ensp;&ensp;1）while没有初始化语句，用户提前初始化好</p><p>&ensp;&ensp;&ensp;&ensp;2）while没有步进语句，用户必须在循环语句中写好步进语句</p><p>&ensp;&ensp;&ensp;&ensp;3）循环变量的值可以被引用、修改，但不能赋新值</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">test04</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> sum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(i&lt;=<span class="number">100</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        sum += i;</span><br><span class="line">        i++;   <span class="comment">//步进条件 </span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;sum = %d\n&quot;</span>,sum);<span class="comment">//sum = 5050</span></span><br><span class="line">&#125; </span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">int</span> argc,<span class="type">char</span> *argv[])</span></span><br><span class="line">&#123;</span><br><span class="line">    test04();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//当循环体是空语句或单个语句</span></span><br><span class="line"><span class="keyword">while</span>(x++ &lt; <span class="number">1000</span>);<span class="comment">//分号不能省略</span></span><br><span class="line"></span><br><span class="line">x = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">while</span>(x-- &gt; <span class="number">0</span>)<span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,x);</span><br></pre></td></tr></table></figure><h3 id="do-while语句"><a href="#do-while语句" class="headerlink" title="do-while语句"></a>do-while语句</h3><p>格式：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//循环体语句</span></span><br><span class="line">&#125;<span class="keyword">while</span>(表达式);</span><br><span class="line"><span class="comment">//特点：先执行，再判断，至少执行一次循环体</span></span><br></pre></td></tr></table></figure><h3 id="for语句"><a href="#for语句" class="headerlink" title="for语句"></a>for语句</h3><p>格式：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(初始语句;循环条件;步进条件)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//循环语句</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//初始语句：只在循环开始时执行一次</span></span><br><span class="line"><span class="comment">//循环条件: 每次循环都要执行，如果循环条件为 真 进入循环体，如果为 假 退出循环</span></span><br><span class="line"><span class="comment">//步进条件：每次循环结束的时候要执行的语句</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//初始语句可以省略，但要在for语句之前给循环变量赋初值</span></span><br><span class="line"><span class="comment">//循环条件为空时，则会陷入死循环</span></span><br><span class="line"><span class="comment">//进步条件省略时，需要在循环体内写进步条件</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//初始语句和进步条件可以有多项，若有多项则使用逗号表达式</span></span><br><span class="line"><span class="keyword">for</span>(s = <span class="number">0</span>,i = <span class="number">1</span>;i &lt;= <span class="number">100</span>;s += i,i++);</span><br><span class="line"></span><br><span class="line"><span class="comment">//单个语句时</span></span><br><span class="line"><span class="keyword">for</span>(初始语句;循环条件;步进条件)</span><br><span class="line">    语句;</span><br><span class="line"><span class="comment">//特点：先判断，再执行，有可能一次也不执行</span></span><br></pre></td></tr></table></figure><p>嵌套for循环：总结外层循环的次数*内层循环的次数&#x3D;&#x3D;总循环次数</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//并列的循环变量可以同名，但嵌套的循环变量不能同名</span></span><br><span class="line"><span class="keyword">for</span>(初始语句;循环条件;步进条件)</span><br><span class="line">&#123;</span><br><span class="line">     <span class="keyword">for</span>(初始语句;循环条件;步进条件)</span><br><span class="line">    &#123;</span><br><span class="line">         <span class="comment">//循环语句</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="break语句"><a href="#break语句" class="headerlink" title="break语句"></a>break语句</h2><p>格式：break;</p><p>作用：提前退出某个循环或跳出switch结构</p><p>只能在switch语句和循环体中使用</p><h2 id="continue语句"><a href="#continue语句" class="headerlink" title="continue语句"></a>continue语句</h2><p>格式：continue;</p><p>作用：结束本次循环，接着下次循环，通常与if语句连用</p><h2 id="数组与结构"><a href="#数组与结构" class="headerlink" title="数组与结构"></a><center>数组与结构</center></h2><h3 id="一维数组"><a href="#一维数组" class="headerlink" title="一维数组"></a>一维数组</h3><p>格式：<font color="red">类型说明符 数组名[常量表达式];</font></p><p>常量表达式可以是 <mark>正</mark>整数常量、符号常量或常量表达式，不能包含变量</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> N 10</span></span><br><span class="line"><span class="type">int</span> a[<span class="number">11</span>],b[N],c[<span class="string">&#x27;0&#x27;</span>];</span><br><span class="line"><span class="type">float</span> d[<span class="number">2</span>*N];</span><br><span class="line"></span><br><span class="line"><span class="comment">//sizeof(类型) * 数组长度 = 总字节数</span></span><br><span class="line"><span class="type">int</span>(<span class="number">4</span>字节) * <span class="number">11</span> = <span class="number">44</span></span><br><span class="line"><span class="comment">//引用方式</span></span><br><span class="line">数组名 [下标]</span><br><span class="line"><span class="comment">//数组初始化</span></span><br><span class="line">类型符 数组名[表达式] = &#123;初值表&#125;;</span><br><span class="line"><span class="comment">//全部元素赋初值</span></span><br><span class="line"><span class="type">int</span> a[<span class="number">8</span>] = &#123;<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>&#125;;<span class="comment">//初始数据个数&gt;数组长度，编译出错</span></span><br><span class="line"><span class="comment">//部分元素赋初值</span></span><br><span class="line"><span class="type">int</span> a[<span class="number">8</span>] = &#123;<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>&#125;;<span class="comment">//剩下元素的初值为0</span></span><br><span class="line"><span class="comment">//给全部元素赋初值时可以不指定数组长度</span></span><br><span class="line"><span class="type">int</span> a[] = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>&#125;;<span class="comment">//数组长度是初值表中数值的个数</span></span><br><span class="line"><span class="comment">//当对全部数组元素初始化为0时，可以写成</span></span><br><span class="line"><span class="type">int</span> x[<span class="number">5</span>] = &#123;<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>&#125;;</span><br><span class="line">或 <span class="type">int</span> x[<span class="number">5</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="comment">//初值表不能为空 如：int a[5] = &#123;&#125;;但是可以int a[5]; 但元素值不确定</span></span><br><span class="line"><span class="comment">//如果没有初始化的数组，元素的值不确定</span></span><br></pre></td></tr></table></figure><p>数组是数目固定，类型相同的若干变量的有序集合</p><p>数组中每一个变量称为数组元素，属于同一个数据类型</p><p>数组在内存占有一段连续的存储空间</p><h3 id="二维数组"><a href="#二维数组" class="headerlink" title="二维数组"></a>二维数组</h3><p>格式：类型说明符 数组名[常量表达式1] [常量表达式2];如：int a[3][4];</p><p>注意：下标从0开始</p><p>二维数组总字节数：行数 * 列数 * 类型字节数</p><h3 id="字符数组"><a href="#字符数组" class="headerlink" title="字符数组"></a>字符数组</h3><h1 id="标准库"><a href="#标准库" class="headerlink" title="标准库"></a><center>标准库</center></h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//如使用输入输出函数</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="comment">//使用字符串处理函数</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="comment">//使用数学库中的函数</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;math.h&gt;</span><span class="comment">//所有数学函数返回都是double型</span></span></span><br></pre></td></tr></table></figure><p>C语言中将 null 定义为 0，则null表示则为0</p><p>EOF：为-1</p><h1 id="数据结构"><a href="#数据结构" class="headerlink" title="数据结构"></a><center>数据结构</center></h1><blockquote><p>课件：<a href="https://maifile.cn/est/a65c2e423881c5/pdf">https://maifile.cn/est/a65c2e423881c5/pdf</a></p></blockquote><h2 id="第二章-线性表"><a href="#第二章-线性表" class="headerlink" title="第二章 线性表"></a><center>第二章 线性表</center></h2><p>线性表定义：n(&gt;&#x3D; 0)个数据特性相同的元素的有限序列，记作(a1,a2,…..,an)</p><p>线性表逻辑结构：一对一</p><p>ai是表中数据元素，n是表长度</p><p>遍历：逐项访问，从前向后，从后向前</p><p>线性表特点：</p><p>&ensp;&ensp;&ensp;&ensp;除了第一个元素外，其他每一个元素有且只有一个<font color="red">直接前驱</font></p><p>&ensp;&ensp;&ensp;&ensp;除了最后一个元素外，其他每一个元素有且只有一个<font color="red">直接后驱</font></p><p>&ensp;&ensp;&ensp;&ensp;例：a1&lt;–&gt;a2&lt;—-&gt;a3&lt;—-&gt;a4</p><p>&ensp;&ensp;&ensp;&ensp;线性表的存储结构：顺序存储结构、链式存储结构（单链表、双链表、循环链表）</p><p>顺序表（顺序存储）：</p><p>&ensp;&ensp;&ensp;&ensp;每个节点只存放数据元素</p><p>&ensp;&ensp;&ensp;&ensp;定义：将线性表中的元素相继存放在一个连续的存储空间中</p><p>&ensp;&ensp;&ensp;&ensp;特点：线性表的顺序存储方式，可以随机存取</p><p>&ensp;&ensp;&ensp;&ensp;优点：可随机存取，存储密度高</p><p>&ensp;&ensp;&ensp;&ensp;缺点：要求大片连续空间，改变容量不方便</p><p>&ensp;&ensp;&ensp;&ensp;插入&#x2F;删除 要将后续元素后移&#x2F;前移动，可通过下表确定目标元素位置，时间开销主要移动元素(O(n))</p><p>&ensp;&ensp;&ensp;&ensp;按位查找 O(1) ，按值查找(需要对元素值一一比较) O(n)</p><p>链表（链式存储）</p><p>&ensp;&ensp;&ensp;&ensp;每个节点除了存放数据元素外，还存储向下一个节点的指针</p><p>&ensp;&ensp;&ensp;&ensp;优点：不要求大片连续空间，改变容量方便</p><p>&ensp;&ensp;&ensp;&ensp;缺点：不可随机存取，要耗费一定空间存放指针</p><p>&ensp;&ensp;&ensp;&ensp;单链表：无法逆向检索，增加头节点目的：方便运算的实现(使得对第一个元素的操作与其他元素操作相同)</p><p>&ensp;&ensp;&ensp;&ensp;双链表：可进退检索</p><p>&ensp;&ensp;&ensp;&ensp;空表：头节点指针域都指向头节点</p><p>&ensp;&ensp;&ensp;&ensp;循环单链表：表尾节点的指针指向头节点，形成循环</p><p>&ensp;&ensp;&ensp;&ensp;循环双链表：双向指针域，尾节点指向头节点，头节点指向下一个节点和尾节点，形成循环且可进退</p><p>&ensp;&ensp;&ensp;&ensp;复杂度：若从头节点找到尾部，时间复杂度为O(n)，n：n个元素</p><p>&ensp;&ensp;&ensp;&ensp;插入&#x2F;删除 元素只需修改指针即可，但需要遍历找到对应修改元素的位置，时间开销主要查找目标元素(O(n))</p><p>&ensp;&ensp;&ensp;&ensp;按位查找 O(n) ，按值查找 O(n)</p><p>总结：</p><p>&ensp;&ensp;&ensp;&ensp;链表：用于经常需要增加&#x2F;删除元素(弹性)</p><p>&ensp;&ensp;&ensp;&ensp;顺序表：用于查询(搜索)操作</p><p>栈：<code>先进后出</code>（全部元素不用全部进栈才可以出栈，进栈和出栈的顺序可组成不同的序列）</p><p>&ensp;&ensp;&ensp;&ensp;压栈(push)，出栈(pop)</p><p>队列：<code>先进先出</code></p><p>栈和队列的共同点：只允许端点处插入和删除元素，都是线性表</p><p>括号配对算法结构：栈 最佳</p><h2 id="串和广义表"><a href="#串和广义表" class="headerlink" title="串和广义表"></a><center>串和广义表</center></h2><h3 id="串"><a href="#串" class="headerlink" title="串"></a>串</h3><p>串或字符串：由零个或多个字符组成的有限序列</p><p>串也称为字符串，在 C 语言中是由数字、字母、下划线以及特殊字符组成的串字符，字符串需要用一对双引号括起来。在一个字符串中取一部分作为一个新字符串，这个新字符串叫子串，另一个叫做它的母串</p><p>s &#x3D; “a₁ a₂ a₃ … an” （n &gt;&#x3D; 0） n为串的长度</p><p>子串：串中任意个连续字符组成的子序列，包含字串的串称为主串</p><p>空串：零个字符的串</p><p>例：a &#x3D; “BEI”b &#x3D; “JING”c &#x3D; “BEIJING”d &#x3D; “BEI JING”</p><p>&ensp;&ensp;&ensp;&ensp;a和b都是c和d的字串，a在c和d中的位置都是1，b在c中的位置是4，在d中的位置是5</p><p>只有两个串的长度相等，并各个对应位置的字符都相等时，则这两个串都是相等的</p><h3 id="广义表"><a href="#广义表" class="headerlink" title="广义表"></a>广义表</h3><p>定义：广义表是线性表的推广，也称为列表</p><p>广义表的深度，可以通过观察该表中所包含括号的层数间接得到</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">如：&#123;&#123;1,2&#125;,&#123;3,&#123;4,5&#125;&#125;&#125; 中，子表 &#123;1,2&#125; 和 &#123;3,&#123;4,5&#125;&#125; 位于同层，此广义表中包含 3 层括号，因此深度为 3</span><br></pre></td></tr></table></figure><p>广义表的长度(广度)：广义表中所包含的数据元素的个数</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">如：广义表 &#123;&#123;a,b,c&#125;&#125; 中只有一个子表 &#123;a,b,c&#125;，因此它的长度为 1</span><br></pre></td></tr></table></figure><h2 id="树"><a href="#树" class="headerlink" title="树"></a><center>树</center></h2><p>树的逻辑结构：一对多</p><p>空树：节点数为0的树</p><p>有且只有一个根节点</p><p>没有后继的节点：叶子节点</p><p>有后继的节点：分支节点</p><p>除了根节点外，任何一个节点有且只有一个前驱</p><p>每个节点可以有 0 个或 多个后继</p><p>路径：由一节点到另一节点间的分支构成（只能从上往下）</p><p>路径长度：路径上的分支数目（经过几条边）</p><p>树的路径长度：树中所有叶子节点到根的路径长度之和</p><p>节点的层次(深度)：从上往下数</p><p>节点的高度：从下往上数</p><p>树的高度(深度)：总共有多少层</p><p>节点的度：有几个孩子(分支)</p><p>树的度：各节点的度的最大值</p><p>树的性质：</p><p>&ensp;&ensp;&ensp;&ensp;<code>总点数 = 总度数 + 1</code></p><p>&ensp;&ensp;&ensp;&ensp;m叉树：每个节点最多只能有m个孩子的树，可以是空树</p><p>&ensp;&ensp;&ensp;&ensp;度为 m 的树第 i 层最多有 m的 i-1 次方 个节点</p><p>&ensp;&ensp;&ensp;&ensp;m叉树第 i 层最多有 <code>m的 i-1次方</code> 个节点</p><p>&ensp;&ensp;&ensp;&ensp;高度为 h 的m叉树至多有几个节点（每一层都最多，则使用每层计算最多节点的方法再相加）</p><p>&ensp;&ensp;&ensp;&ensp;高度为 h 的m叉树至少有 h 个节点</p><p>&ensp;&ensp;&ensp;&ensp;高度为 h，度为m的树至少有 <code>h+m-1</code> 个节点</p><p>&ensp;&ensp;&ensp;&ensp;具有n个节点的m叉树的最小高度？ 每一层节点打满</p><h3 id="二叉树"><a href="#二叉树" class="headerlink" title="二叉树"></a>二叉树</h3><p>特点：每个节点至多只有两颗子树，左右子树不能颠倒(二叉树是有序树)</p><p>任意二叉树满足：<code>n0 = n2 + 1</code></p><p>二叉树转森林：二叉树从根(包含)开始路过几个节点就有几个根，也就是有森林有几棵树</p><h4 id="满二叉"><a href="#满二叉" class="headerlink" title="满二叉"></a>满二叉</h4><p>&ensp;&ensp;&ensp;&ensp;一颗高度为h，含有 <code>2的h次方-1</code> 个节点的二叉树</p><p>&ensp;&ensp;&ensp;&ensp;特点：</p><p>&ensp;&ensp;&ensp;&ensp;只有最后一层有叶子节点</p><p>&ensp;&ensp;&ensp;&ensp;不存在度为1 的节点</p><p>&ensp;&ensp;&ensp;&ensp;按层序从1开始编号，节点 i 的左孩子为 2i，右孩子为 2i + 1，节点i的父亲节点为 i&#x2F;2(向下取整)</p><h4 id="完全二叉树"><a href="#完全二叉树" class="headerlink" title="完全二叉树"></a>完全二叉树</h4><p>&ensp;&ensp;&ensp;&ensp;在满二叉树的基础上可去掉若干个编号更大的节点(最后几个缺失)，某节点只有一个孩子，一定是左孩子</p><p>&ensp;&ensp;&ensp;&ensp;高度：H &#x3D; ㏒₂N + 1</p><p>&ensp;&ensp;&ensp;&ensp;特点：</p><p>&ensp;&ensp;&ensp;&ensp;只有最后两层可能有叶子节点</p><p>&ensp;&ensp;&ensp;&ensp;最多只有一个度为 1 的节点</p><p>&ensp;&ensp;&ensp;&ensp;按层序从1开始编号，节点 i 的左孩子为 2i，右孩子为 2i + 1，节点i的父亲节点为 i&#x2F;2(向下取整)</p><p>&ensp;&ensp;&ensp;&ensp;i &lt;&#x3D; n&#x2F;2 为分支节点，i &gt; n&#x2F;2 为叶子节点  n：节点数</p><h4 id="二叉排序树"><a href="#二叉排序树" class="headerlink" title="二叉排序树"></a>二叉排序树</h4><p>&ensp;&ensp;&ensp;&ensp;左子树上所有节点的关键字均小于根节点的关键字</p><p>&ensp;&ensp;&ensp;&ensp;右子树上所有节点的关键字均大于根节点的关键字</p><p>&ensp;&ensp;&ensp;&ensp;左子树和右子树又各是一颗二叉排序树</p><p>&ensp;&ensp;&ensp;&ensp;判断二叉排序树的元素大小</p><p>&ensp;&ensp;&ensp;&ensp;在树图下方画个向右的坐标轴，从图中对应元素垂直到坐标轴，则可得到元素从小到大排序</p><p>&ensp;&ensp;&ensp;&ensp;查找(考察比较次数 &#x3D;&#x3D; 查找长度)</p><p>&ensp;&ensp;&ensp;&ensp;从上往下寻找，左树比根小，右数比根大，查找成功，返回结点指针，查找失败，返回null</p><p>&ensp;&ensp;&ensp;&ensp;查找成功时  平均查找长度(ASL)：每层的 查找长度 * 节点数 相加 &#x2F; 节点数</p><p>&ensp;&ensp;&ensp;&ensp;查找失败时  平均查找长度(ASL)：有叶子节点每一层的 同一层叶子节点数 * 查找长度 相加 &#x2F; 总叶子节点数</p><h4 id="平衡二叉树"><a href="#平衡二叉树" class="headerlink" title="平衡二叉树"></a>平衡二叉树</h4><p>&ensp;&ensp;&ensp;&ensp;平衡二叉树是排序二叉树的特殊情况</p><p> &ensp;&ensp;&ensp;&ensp;树上，任一节点的左子树和右子树的深度之差不超过1</p><p>&ensp;&ensp;&ensp;&ensp;节点平衡因子 &#x3D; 左子树高 - 右子树高，只能是 <code>-1  0 或 1</code></p><h4 id="二叉树遍历"><a href="#二叉树遍历" class="headerlink" title="二叉树遍历"></a>二叉树遍历</h4><p>&ensp;&ensp;&ensp;&ensp;都是先左树后右树</p><p>&ensp;&ensp;&ensp;&ensp;先序遍历：根左右（从上到下，从左到右）</p><p>&ensp;&ensp;&ensp;&ensp;中序遍历：左根右（小嵌套再大嵌套）</p><p>&ensp;&ensp;&ensp;&ensp;后续遍历：左右根（小嵌套再大嵌套）</p><p><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic/img/202402220848250.jpg" alt="二叉树遍历"></p><p>&ensp;&ensp;&ensp;&ensp;层序遍历：从上到下，从左到右</p><p>只给出前、中、后、层序遍历序列中的一种，可能对应多种二叉树形态，所以不能确定唯一一颗二叉树</p><p>需要两种来确定唯一（给出两个序列画图）</p><p>&ensp;&ensp;&ensp;&ensp;前序(确根) + 中序遍历(确左右)</p><p>&ensp;&ensp;&ensp;&ensp;后序(确根) + 中序遍历(确左右)</p><p>&ensp;&ensp;&ensp;&ensp;层序 + 中序遍历</p><h3 id="哈夫曼树"><a href="#哈夫曼树" class="headerlink" title="哈夫曼树"></a>哈夫曼树</h3><p>结点的权(节点上面的数值)：有某种显示含义的数值（如：表示结点的重要性等）</p><p><code>结点</code>的带权路径长度：从树的根到该结点的路径长度(经过边数) 与 该<code>结点上权值</code>的乘积</p><p><code>树</code>的带权路径长度(WPL)：树中所有<code>叶子结点</code>的带权路径长度之和</p><p>定义：含有n个带权叶子结点的二叉树中，其中树的<code>带权路径长度最小</code>的二叉树，哈夫曼树(最优二叉树)</p><p>构造</p><p>&ensp;&ensp;&ensp;&ensp;选取<code>权值最小</code>的结点构成新结点，新结点的权值为左 右子树上根结点权值之和，直到全部结点拼接完</p><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic/img/202403172258571.png" alt="哈夫曼树构造" style="zoom:50%;"><p>&ensp;&ensp;&ensp;&ensp;特点：</p><p>&ensp;&ensp;&ensp;&ensp;每个初始结点(给出)最终都成为叶子结点，且权值越小的结点到根结点的路径长度越大</p><p>&ensp;&ensp;&ensp;&ensp;哈夫曼树的结点总数为：2n-1n：初始结点数</p><p>&ensp;&ensp;&ensp;&ensp;哈夫曼树中<code>不存在度为 1 的结点</code></p><p>&ensp;&ensp;&ensp;&ensp;哈夫曼树并不唯一，但WPL(树的带权路径长度)必然相同且最优</p><p>哈夫曼编码</p><p>&ensp;&ensp;&ensp;&ensp;固定长度编码：每个字符用相等长度的二进制表示</p><p>&ensp;&ensp;&ensp;&ensp;可变长编码：允许对不同字符用不等长的二进制位表示（使用哈夫曼树编辑二进制位）</p><p>&ensp;&ensp;&ensp;&ensp;前缀编码：没有一个编码是另一个编码的前缀，无歧义。非前缀编码有歧义</p><p>&ensp;&ensp;&ensp;&ensp;哈夫曼编码可以用于数据压缩</p><h2 id="图"><a href="#图" class="headerlink" title="图"></a>图</h2><p>图(G)由顶点集(V)和边集(E)组成，|V|：图中顶点的个数|E|：图中边的条数</p><p>元素存在<code>多对多</code>的关系</p><p>图不可以是空，即 V 一定是非空集，但E可为0</p><p>有向图：边是有方向的(有向边)</p><p>G &#x3D; (V,E)</p><p>V &#x3D; {A,B,C,D,E}</p><p>E &#x3D; {&lt;A,B&gt;,&lt;A,C&gt;,&lt;A,D&gt;,&lt;A,E&gt;,&lt;B,A&gt;,&lt;B,C&gt;,&lt;B,E&gt;,&lt;C,D&gt;}</p><p>无向图：边是没有方向的(无向边)</p><p>G &#x3D; (V,E)</p><p>V &#x3D; {A,B,C,D,E}</p><p>E &#x3D; {(A,B),(B,D),(B,E),(C,D),(C,E),(D,E)}</p><p>简单图：不存在重复边，不存在顶点到自身的边（有向图中两个方向不同的边不属于重复边）</p><p>多重图：两个结点之间边数多余一条，允许顶点通过同一条边和自己联系</p><p>对于无向图</p><p>&ensp;&ensp;&ensp;&ensp;顶点的度：依附于该顶点的边的条数</p><p>&ensp;&ensp;&ensp;&ensp;无向图的全部顶点的度的和 等于 边数的2倍</p><p>对于有向图</p><p>&ensp;&ensp;&ensp;&ensp;入度(进来)：顶点 v 为终点的有向边的数目</p><p>&ensp;&ensp;&ensp;&ensp;出度(出去)：顶点 v 为起点的有向边的数目</p><p>&ensp;&ensp;&ensp;&ensp;顶点v的度：入度和出度之和入度之和 &#x3D; 出度之和 &#x3D; 边数</p><p>路径：顶点到顶点之间的路径</p><p>回路或环：第一个顶点和最后一个顶点相同的路径(构成闭环)</p><p>简单路径：顶点不重复出现的路径</p><p>简单回路：除了第一个顶点和最后一个顶点外，其余顶点不重复出现的回路</p><p>路径长度：路径上 边的数目</p><p>点到点的距离：顶点u到顶点v的最短路径若存在，则此路径的长度为u到v的距离，若不存在，则该距离为无穷(∞)</p><p>无向图中，顶点v 到 顶点w 有路径存在，则称 v 和 w 是<mark>连通</mark>的</p><p>有向图中，顶点v 到 顶点w 和 顶点w 到 顶点v 之间都有路径，则这两个顶点为<mark>强连通</mark>的</p><p>若图(无向)中，任意两个顶点都是连通的，则成为连通图，否则为非连通图</p><p>&ensp;&ensp;&ensp;&ensp;对于n个顶点的无向图G</p><p>&ensp;&ensp;&ensp;&ensp;若G是连通图，则最少有 <code>n-1</code> 条边</p><p>&ensp;&ensp;&ensp;&ensp;若G是非连通图，则最多可能有n(n-1)&#x2F;2</p><p>若图(有向)中，任何一堆顶点都是强连通，则此图为强连通图</p><p>&ensp;&ensp;&ensp;&ensp;n个顶点的强连通图，最少有<code>n</code>条边(形成回路)</p><p>生成子图：无向图中包含全部点(父图)</p><p>连通分量：无向图中有几个分开的整体，几个整体就是连通分量</p><p>强连通分量：有向图中有几个分开的整体，几个整体就是连通分量</p><p>连通图生成树：包含图中全部顶点，边尽可能少，但要保持连通</p><p>无向全连通图边数：<code>n(n-1)/2</code>n：顶点数</p><p>n个顶点有向图，每个顶点的度最大可达 <code>2(n-1)</code></p><h3 id="图的存储"><a href="#图的存储" class="headerlink" title="图的存储"></a>图的存储</h3><h4 id="邻接矩阵法"><a href="#邻接矩阵法" class="headerlink" title="邻接矩阵法"></a>邻接矩阵法</h4><p>&ensp;&ensp;&ensp;&ensp;注意：有向图的方向，<font color="red"><code>无向图</code></font><code>斜角45度对称</code></p><p>&ensp;&ensp;&ensp;&ensp;在无向图中，第i个结点的度 &#x3D; 第i行(或者第i列)的非零元素个数</p><p>&ensp;&ensp;&ensp;&ensp;在有向图中，第i个结点的<mark>出度</mark> &#x3D; 第i行的非零元素个数</p><p>&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;第i个结点的<mark>入度</mark> &#x3D; 第i列的非零元素个数</p><p>&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;第i个结点的度 &#x3D; 第i行、第i列的非零元素的个数之和</p><p>&ensp;&ensp;&ensp;&ensp;邻接矩阵法求顶点的度 出度 入度 的时间复杂度为 O(|v|)v：顶点个数</p><p>&ensp;&ensp;&ensp;&ensp;邻接矩阵法：所占存储空间与顶点个数相关</p><p>&ensp;&ensp;&ensp;&ensp;结点数为n，邻接矩阵A是 n*n 的</p><p><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic/img/202402220848000.jpg" alt="邻接矩阵法"></p><p>&ensp;&ensp;&ensp;&ensp;邻接矩阵法存储带权图</p><p><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic/img/202402220847724.jpg" alt="邻接矩阵图_带权"></p><p>&ensp;&ensp;&ensp;&ensp;邻接矩阵图性能分析</p><p>&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;空间复杂度：O(|v|²)v：顶点数只和顶点数有关，和实际边数无关</p><p>&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;适合用于存储稠密图</p><p>&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;<code>无向图</code>的的邻接矩阵是<code>对称矩阵</code>，<code>可以压缩存储</code></p><h4 id="邻接表-顺序-链式存储"><a href="#邻接表-顺序-链式存储" class="headerlink" title="邻接表(顺序+链式存储)"></a>邻接表(顺序+链式存储)</h4><p>&ensp;&ensp;&ensp;&ensp;边结点的数量是2|E|（每条边被记录了两次）</p><p>&ensp;&ensp;&ensp;&ensp;无向图空间复杂度为：O(|v| + 2|E|)</p><p>&ensp;&ensp;&ensp;&ensp;有向图空间复杂度为：O(v+e)</p><p>&ensp;&ensp;&ensp;&ensp;排列方式：<code>不唯一</code>。存储稀疏图(边较少)</p><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic/img/202402220847734.jpg" alt="邻接表法" style="zoom:50%;"><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic/img/202402291650507.png" style="zoom:50%;"><h3 id="图的遍历"><a href="#图的遍历" class="headerlink" title="图的遍历"></a>图的遍历</h3><p>可能序列排序不唯一，按节点编号的<code>升序</code>一次访问</p><h4 id="广度优先遍历-BFS"><a href="#广度优先遍历-BFS" class="headerlink" title="广度优先遍历(BFS)"></a>广度优先遍历(BFS)</h4><p>树：类似<code>层序遍历</code>，一层一层遍历，先孩子再孙子，按编号升序访问</p><p>时间复杂度：O(n+e)n：顶点数  e：边数</p><p>使用<code>队列</code>数据结构</p><h4 id="深度优先遍历-DFS"><a href="#深度优先遍历-DFS" class="headerlink" title="深度优先遍历(DFS)"></a>深度优先遍历(DFS)</h4><p>树：类似<code>先序遍历</code>，一条直线走到底，走完再换另一个，按编号升序访问方向</p><p>时间复杂度：O(n+e)n：顶点数  e：边数</p><p>使用<code>栈</code>数据结构，是一个递归过程</p><p>图：</p><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic/img/202402220846594.jpg" alt="图1" style="zoom:33%;"><p>广度优先：以2为先，21653748</p><p>深度优先：以3为先，34762158以2为先，21563478</p><h2 id="最小生成树"><a href="#最小生成树" class="headerlink" title="最小生成树"></a>最小生成树</h2><p>连通图生成树：包含图中全部点，最少边，保持连通</p><p>最小生成树：带权值，边权值最小，<code>图形不唯一</code>，但最小代价唯一</p><h3 id="Prim算法-普里姆"><a href="#Prim算法-普里姆" class="headerlink" title="Prim算法(普里姆)"></a>Prim算法(普里姆)</h3><p>贪心算法</p><p>先选最小权值的边，再从以选中的顶点所附带的边中选择最小权值的边，以此类推，推出树图</p><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic/img/202402220829529.jpg" alt="图2" style="zoom:33%;"><h3 id="Kruskal算法-克鲁斯卡尔"><a href="#Kruskal算法-克鲁斯卡尔" class="headerlink" title="Kruskal算法(克鲁斯卡尔)"></a>Kruskal算法(克鲁斯卡尔)</h3><p>贪心算法</p><p>每次选择一条权值最小的边，这条边两头连通（原本连通的就不选）</p><h2 id="排序-需要代码"><a href="#排序-需要代码" class="headerlink" title="排序(需要代码)"></a>排序(需要代码)</h2><h3 id="交换排序"><a href="#交换排序" class="headerlink" title="交换排序"></a>交换排序</h3><p>冒泡：把最大的或最小的冒到一边</p><p>每两个数字相互比较，按对应顺序排序，比较完一次，再和后面的一个数比较，以此类推</p><h3 id="选择排序"><a href="#选择排序" class="headerlink" title="选择排序"></a>选择排序</h3><p>类似打扑克牌时整理牌的顺序一样，从左往右整理</p><h3 id="插入排序"><a href="#插入排序" class="headerlink" title="插入排序"></a>插入排序</h3><h3 id="折半查找"><a href="#折半查找" class="headerlink" title="折半查找"></a>折半查找</h3><p>只能在顺序存储，不能在链表，元素有序</p><h1 id="简答题备考"><a href="#简答题备考" class="headerlink" title="简答题备考"></a><center>简答题备考</center></h1><h2 id="C语言"><a href="#C语言" class="headerlink" title="C语言"></a>C语言</h2><p>机器语言：紧密依赖于计算机的硬件</p><p>高级语言：比较接近人们习惯使用的自然语言和数学语言</p><p>程序：一组计算机能识别和执行的指令</p><p>源程序：用高级语言编写的程序</p><p>常量：程序运行过程中不能改变的量</p><p>变量：程序运行过程中其值可以改变的量</p><p>变量名：以一个容易记忆的名字代表存储单元的地址</p><p>转义字符：将反斜杠 “\“ 后面的字符转换成另外的意义，输出信息时的控制符号 如 ‘\n’代表换行</p><p>字符串常量：一对双撇号括起来的字符序列</p><p>算术表达式：用算术运算符和括号将运算对象连接起来的、符合C语法规则的式子</p><p>数据结构：在程序中指定数据类型和数据的组织形式</p><p>算法：即操作步骤</p><p>修饰符：用来丰富格式字符功能的附加字符</p><p>关系表达式：用关系运算符将两个表达式连接起来的式子</p><p>逻辑表达式：用逻辑运算符将两个表达式连接起来的式子</p><p>用选择机构来检查所指定的条件是否满足，并根据判断的结果决定执行哪种操作</p><p>循环结构就是用来处理需要重复处理的问题</p><p>数组：具有相同类型的变量，用连续空间存储起来</p><p>字符数组：用来存放字符数据的数组</p><p>函数就是用来完成一定的功能的</p><p>函数的声明称为函数原型</p><p>递归调用：在调用一个函数的过程中又出现直接或间接地调用函数本身</p><p>局部变量：在函数或复合语句中定义的变量，只在本函数或复合语句内范围内有效</p><p>全局变量：在函数之外定义的变量，从定义变量到本源程序文件结束有效，在范围内可以为本程序文件中所有函数共用</p><p>静态存储：在程序运行期间由系统在静态存储区分配存储空间的方式，在程序运行期间不释放</p><p>动态存储：在函数调用期间根据需要在动态存储分配存储空间的方式</p><p>寄存器变量(register)：一些变量频繁使用，将局部变量的值放在CPU中的寄存器，寄存器对于存取速度远高于内存的存取速度，这样可以提高执行效率</p><p>内部函数(静态函数)：用static声明的，函数作用只局限于所在文件，其他文件不能引用</p><p>外部函数：函数首部最左端添加extern，可供其他文件调用</p><p>函数的定义：对函数功能的确立，包括指定函数名、函数值类型、形参及其类型以及函数体等，它是一个完整的、独立的函数单位</p><p>函数的声明：好吧函数的名字、函数类型以及形参的类型、个数和顺序通知编译系统，以便在调用该函数时系统按此进行对照检查</p><p>变量的定义：定义变量时，要指明数据类型，编译系统要据此给变量分配存储空间，称为定义行声明</p><p>变量的声明：不必指定数据类型，数据类型在定义时指定了，只是为了引用的需要，称为引用性声明</p><p>将地址形象化地称为“指针”</p><p>指针变量：一个变量专门用来存放另一个变量的地址</p><p>结构体：用户自己建立由不同类型的数据组成的组合型的数据结构</p><p>结构体数组：一个结构体变量中可以存放一组有关联的数据</p><p>结构体指针：指向结构</p><p>枚举：将变量的值一一列举出来，变量的值只限于列举出来的值的范围内</p><p>程序文件：包括源程序(后缀为.c)、目标文件(后缀.obj)、可执行文件(后缀为.exe)文件等。这种文件是用来存放程序的，以便实现程序的功能</p><p>数据文件：文件内容不是程序，而是供程序运行时读写的数据，或共程序运行时读入内存的数据</p><p>文件分类：按数据的组织形式，数据文件可分为<code>ASCII文件</code>和<code>二进制文件</code></p><h2 id="数据结构-1"><a href="#数据结构-1" class="headerlink" title="数据结构"></a>数据结构</h2><p>数据：客观事物的符号表示，是所有能输入计算机中并被计算机程序处理的符号的总称</p><p>数据元素：是数据的基本单位，在计算机中通常作为一个整体进行考虑</p><p>数据项：组成数据元素的、有独立含义的、不可分割的最小单位</p><p>数据对象：是性质相同的数据元素的集合，是数据的一个子集</p><p>数据结构：相互之间存在一种或多种特定关系的数据元素的集合</p><p>算法：为了解决某类问题而规定的一个有限长的操作序列</p><p>算法特性：有穷性、确定性、可行性、输入、输出</p><p>算法基本标准：正确性、可读性、健壮性、高效性</p><p>线性表：由n个数据特性相同的元素构成的有限序列</p><p>&ensp;&ensp;&ensp;&ensp;如学生基本信息表，每个学生为一个数据元素，包括学号、姓名、性别、籍贯等数据项</p><p>节点：存储七本身的信息之外，还需存储一个指示七直接后继的信息，这两部分信息组成数据元素的存储映像</p><p>数据域：存储数据元素信息的域</p><p>指针域：存储直接后继存储位置的域</p><p>链表：n个节点链接成的表</p><p>栈：限定仅在表尾进行插入或删除操作的线性表</p><p>栈底：表头端</p><p>栈顶：表尾端</p><p>队列：一种先进先出的线性表</p><p>队尾：允许插入的一端</p><p>对头：允许删除的一端</p><p>栈和队列都有：顺序和链式存储</p><p>串也称为字符串，在 C 语言中是由数字、字母、下划线以及特殊字符组成的串字符，字符串需要用一对双引号括起来。在一个字符串中取一部分作为一个新字符串，这个新字符串叫子串，另一个叫做它的母串</p><p>树：n个节点的有限集</p><p>森林：n棵互不相交的树的集合</p><p>图(G)：由两个集合V和E组成，记为G &#x3D; (V,E)，V是顶点的有穷非空集合，E是V中顶点偶对的有穷集合，这些顶点偶对 称为 边</p><p>查找表：由同一个类型的数据元素构成的集合</p><p>关键字：数据元素中某个数据项的值，用它可以标识一个数据元素</p><p>&ensp;&ensp;&ensp;&ensp;主关键字：此关键字可以唯一地标识一个记录</p><p>&ensp;&ensp;&ensp;&ensp;次关键字：用以识别若干记录的关键字</p><p>查找：指根据给定的某个值，在查找表中确定一个关键字等于给定值的记录或数据元素，如果存在查找成功，不存在查找失败</p><p>查找分类：顺序查找、折半查找、分块查找</p><p>排序：按关键字的非递减或非递增顺序对一组记录重新进行排列的操作</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;C语言程序和程序设计概述&quot;&gt;&lt;a href=&quot;#C语言程序和程序设计概述&quot; class=&quot;headerlink&quot; title=&quot;C语言程序和程序设计概述&quot;&gt;&lt;/a&gt;&lt;center&gt;C语言程序和程序设计概述&lt;/center&gt;&lt;/h1&gt;&lt;p&gt;程序：可以连续执行的一条条</summary>
      
    
    
    
    <category term="升学" scheme="http://example.com/categories/%E5%8D%87%E5%AD%A6/"/>
    
    
    <category term="计算机程序与基础" scheme="http://example.com/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A8%8B%E5%BA%8F%E4%B8%8E%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>25.网络编程</title>
    <link href="http://example.com/post/f1dbdc9f.html"/>
    <id>http://example.com/post/f1dbdc9f.html</id>
    <published>2023-12-30T05:12:09.000Z</published>
    <updated>2024-03-01T15:03:29.738Z</updated>
    
    <content type="html"><![CDATA[<h1 id="知识点一：什么是网络编程"><a href="#知识点一：什么是网络编程" class="headerlink" title="知识点一：什么是网络编程"></a><center>知识点一：什么是网络编程</center></h1><p>Java是Internet上语言，它从语言级别上提供了对网络编程支持，程序猿可以利用Java语言进行网络应用程序编写，Java提供大量网络库，可以实现不同网络连接【TCP&#x2F;UDP】，联网的底层实现已经被Java进行封装了，只需调用网络包中提供实现类方法就可以完成网络编程</p><p>网络编程就是提供互联网应用程序，互联网是什么？把分布在不同区域的计算机与专门外部设备进行通信相互链接在一起，提供一个强大网络关系，从而通过链接网络就可以方便计算机与计算机之间的信息传递，共享硬件，数据和软件信息</p><p>之所以计算机之间可以进行网络通信是因为提供网络连接【网线和wifi】</p><h1 id="知识点二：网络通信协议"><a href="#知识点二：网络通信协议" class="headerlink" title="知识点二：网络通信协议"></a><center>知识点二：网络通信协议</center></h1><p>网络通信协议就是联网设备之间可以进行更好交互，需要遵守一套通信规则</p><p>通讯协议有两套【一套是理论协议和一套是实际操作协议】</p><h2 id="1、OSI通信模型【网络7层协议】"><a href="#1、OSI通信模型【网络7层协议】" class="headerlink" title="1、OSI通信模型【网络7层协议】"></a><center>1、OSI通信模型【网络7层协议】</center></h2><p><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic/img/202403012250386.png" alt="OSI通信模型"></p><p>在7协议的基础至少之上进行网络协议修改，修改之后的协议更加适合现实生活中网络的实现【TCP&#x2F;IP通信模型】</p><p><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic/img/202403012250533.png" alt="层次"></p><p>在这个模型中 传输层和网络层是需要使用的，提供TCP&#x2F;IP编程可以完成网络通信操作</p><h1 id="知识点三：网络编程三要素"><a href="#知识点三：网络编程三要素" class="headerlink" title="知识点三：网络编程三要素"></a><center>知识点三：网络编程三要素</center></h1><p><strong>协议、IP地址、端口号</strong>，在这三个要素的前提下得到到两种网络编程模式【软件结构】-&gt; <strong>C&#x2F;S架构和B&#x2F;S架构</strong></p><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic/img/202403012251097.png" alt="三要素" style="zoom:50%;"><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic/img/202403012252229.png" alt="B/S结构" style="zoom:50%;"><p>其实这两种框架开发时各有有点，但是无论是那种框架，都要离不开【“网络”】，需要提供网络编程，就可以架构通信操作了</p><h2 id="1、协议"><a href="#1、协议" class="headerlink" title="1、协议"></a><center>1、协议</center></h2><p>通信协议是计算必须遵守规则， 只有遵守规则才可以进行计算机与计算机之间通信，这就好比道路中行驶的汽车必须遵守交通规则，通讯协议也是一样的，通信协议中提供对数据的【传输格式、传输速率、传输步骤】等等都提供统一的规范，通讯双方必须遵守这个规范，最终完成数据的交换</p><h2 id="2、TCP协议"><a href="#2、TCP协议" class="headerlink" title="2、TCP协议"></a><center>2、TCP协议</center></h2><p>在 java.net 这个包中就提供了这种常见协议：</p><p>TCP：传输控制协议，TCP协议是<strong>面向连接</strong>的通信协议，即传输数据之前，在发送端和接收端需要建立起逻辑连接，然后再传输数据，它提供了两台计算机之间可靠无差错的数据传输</p><p>TCP协议的特点: <strong>面向连接、传输数据安全、传输速度低</strong></p><p>例如： 大宝发现了李四家里牛丢了</p><p>&ensp;&ensp;&ensp;&ensp;TCP协议： 大宝一定要找到李四，面对面的告诉他你们家牛丢了</p><p>TCP如何保证面向连接安全？</p><p>&ensp;&ensp;&ensp;&ensp;TCP在连接时会进行【<strong>三次握手</strong>】，TCP协议中，在发送数据的准备阶段，客户端与服务器之间进行三次交互，以保证可靠连接</p><img src="https://cdn.jsdelivr.net/gh/xinzai-x/MyPic/img/202403012253925.png" alt="TCP协议" style="zoom:50%;"><p>第一次握手： 客户端向服务器发送连接请求，等待服务器确认</p><p>第二次握手：服务器端接收客户端请求并向客户端回送一个响应，通知客户端收到了连接请求</p><p>第三次握手：客户端接收到服务器响应，再次向服务器端发送确认信息，确认连接</p><p>客户端与服务器之间就可以开始进行通信操作了</p><p>完成三次握手，连接建立后，客户端和服务器就可以开始进行数据传输了，由于这种连接时面思连接的特性，所以TCP协议可以保证传输数据的安全，所以TCP通信协议被广泛的应用【HTTP协议（网页浏览）、文件上传、文件下载】等等</p><p>三次握手可以理解为打电话</p><p>&ensp;&ensp;&ensp;&ensp;第一次握手就相当于 —》 你拿起电话开始拨号</p><p>&ensp;&ensp;&ensp;&ensp;第二次握手就相当于 —》 对方拿起电话说“喂”</p><p>&ensp;&ensp;&ensp;&ensp;第三次握手就相当于 —》 听到“喂”就说明两端连同，开始通话</p><h2 id="3、UDP协议"><a href="#3、UDP协议" class="headerlink" title="3、UDP协议"></a><center>3、UDP协议</center></h2><p>在 java.net 这个包中就提供了这种常见协议：</p><p>UDP被称之为 【数据报（文）协议】，UDP协议是一个面向无连接的协议，传输数据时候，不需要建立连接，不管对方服务器是否启动，【直接将数据，数据源和目的地都封装到数据包，直接发送】，每个数据包的大小被限制在64KB，因为连接不可靠而且是面向无连接，所以它传输速度快，但是容易丢包【数据】，日日常应用中：视频、游戏等等</p><p>例如： 大宝发现了李四家里牛丢了</p><p>UDP协议： 大宝在村里的广播站广播以下李四你家牛丢了，效率快</p><h2 id="4、IP地址"><a href="#4、IP地址" class="headerlink" title="4、IP地址"></a><center>4、IP地址</center></h2><p>IP地址：是互联网中协议地址，俗称IP，<strong>IP地址用来给一个网络中的计算机设备做唯一的编号</strong></p><p>IP地址分类</p><p>&ensp;&ensp;&ensp;&ensp;IPv4：是一个32位的二进制数，通常被划分4个字节，表示形式D.D.D.D 形式表示</p><p>&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;例如： 192.168.10.27 这就是IP地址，其中的每一位即 D 范围是一个从0~255结束范围 ，最多表示42亿个IP地址，就算这样全世界的IPv4地址已经没有了</p><p>&ensp;&ensp;&ensp;&ensp;IPv6：中国主导的，随着全世界互联网网络发展IPv4已经不能满足所有需求，但是网络资源地址还是需要的，使用IPv6来缓解IPv4的缺失，IPv6是一个128位的二进制数，每16个字节划分一组，8组16进制，表示形成 F.F.F.F.F.F.F.F</p><p>&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;例如： fdb2:2c26:f4e4:0:3421:943d:8040:8eef</p><p><strong>windows中CMD中 输入 ipconfig可以查看本机的IP地址</strong></p><p>所有的人电脑其实在出厂时都有自己的一个IP地址，这个IP地址是供给计算机内容进行通信使用，称之为“环形网络”–》这个IP地址是127.0.0.1 –》 称之为 localhost</p><h2 id="5、端口号"><a href="#5、端口号" class="headerlink" title="5、端口号"></a><center>5、端口号</center></h2><p>网络的通信，本质上是有两个进程（应用程序）的通信，每台计算机都有很多的进程，那么在网络通信时，如何区分是哪个进程呢？</p><p>如果说“IP地址”可以唯一标识网络中的设备，那么“端口号”就可以唯一标识设备中进程（应用程序)了</p><p>端口号：用两个字节标识的整数，它的取值范围是0<del>65535。其中，**0</del>1023之间端口号用于一些知名的网络服务器与系统应用<strong>，普通的应用程序需啊哟使用1024以上的端口号。</strong>如果端口号被另外一个服务器或应用程序所占用，会导致当前程序启动失败**</p><p>开中常见端口号 ： MySQL ： 3306 Oracle 1521 或 1520 Tomcat： 8080</p><p>利用这个三个组合 <strong>协议 + IP地址 + 端口号</strong>就可以提供网络中进程（应用程序）</p><h1 id="知识点四：InteAddress类"><a href="#知识点四：InteAddress类" class="headerlink" title="知识点四：InteAddress类"></a><center>知识点四：InteAddress类</center></h1><p>此类表示互联网协议 (IP) 地址，能够通过InetAddress这个类获取到IP地址，InteAddress也可以理解为一个IP地址的在Java代码中抽象</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.net.InetAddress;</span><br><span class="line"><span class="keyword">import</span> java.net.UnknownHostException;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">InterAddressDemo</span> 。</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span><br><span class="line">    &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;----------------------------创建局域网IP地址对象-------------------------------&quot;</span>);</span><br><span class="line">        <span class="comment">//1.使用本机的IP地址创建对象</span></span><br><span class="line">        <span class="comment">//提供一个编译时异常Unhandled exception: java.net.UnknownHostException【无法获取主机（IP地址）】</span></span><br><span class="line">        <span class="type">InetAddress</span> <span class="variable">localHost</span> <span class="operator">=</span> InetAddress.getLocalHost();</span><br><span class="line">        <span class="comment">//获取封装在对象中IP地址</span></span><br><span class="line">        System.out.println(<span class="string">&quot;ip地址：&quot;</span>+localHost.getHostAddress());</span><br><span class="line">        <span class="comment">//获取封装在对象中主机名</span></span><br><span class="line">        System.out.println(<span class="string">&quot;主机名：&quot;</span>+localHost.getHostName());</span><br><span class="line">        <span class="comment">//通过赋值IP地址来创建IP地址对象 --》这个参数也可以赋值为 localhost(主机) ---》赋值网络域名</span></span><br><span class="line">        <span class="type">InetAddress</span> <span class="variable">byName</span> <span class="operator">=</span> InetAddress.getByName(<span class="string">&quot;10.211.55.3&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;----------------------------创建外网IP地址对象-------------------------------&quot;</span>);</span><br><span class="line">        <span class="type">InetAddress</span> <span class="variable">byName1</span> <span class="operator">=</span> InetAddress.getByName(<span class="string">&quot;www.baidu.com&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;百度IP地址：&quot;</span>+byName1.getHostAddress());</span><br><span class="line">        System.out.println(<span class="string">&quot;百度主机名：&quot;</span>+byName1.getHostName());</span><br><span class="line">        <span class="comment">//判断连接访问 ---》 ping命令</span></span><br><span class="line">        System.out.println(<span class="string">&quot;2秒内是否可以访问到？&quot;</span>+ byName1.isReachable(<span class="number">2000</span>));    <span class="comment">// ping www.baidu.com</span></span><br><span class="line">        <span class="comment">//获取IP地址对象中所有的信息</span></span><br><span class="line">        InetAddress[] allByName = InetAddress.getAllByName(<span class="string">&quot;www.baidu.com&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span>(InetAddress ip : allByName)</span><br><span class="line">        &#123;</span><br><span class="line">            System.out.println(ip);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="知识点五：TCP协议编程"><a href="#知识点五：TCP协议编程" class="headerlink" title="知识点五：TCP协议编程"></a><center>知识点五：TCP协议编程</center></h1><p>Java中TCP协议编程并不需要我们从头开始写，Java已经在net包中提供操作，专门提供两个类来完成TCP操作</p><p><strong>Socket</strong>【客户端】：此类实现客户端套接字（也可以就叫“套接字”）。套接字是两台机器间通信的端点</p><p><strong>ServerSocket</strong>【服务器】：此类实现服务器套接字。服务器套接字等待请求通过网络传入。它基于该请求执行某些操作，然后可能向请求者返回结果</p><p>因为TCP连接时面向连接的，也就是属于“长连接”，所以需要进行关闭操作，<strong>客户端是可以与服务器进行通信使用的是字节流</strong></p><p>案例1</p><p>&ensp;&ensp;&ensp;&ensp;需求：客户端向服务器发送请求，并传递数据发送【服务你好】</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.qfedu.TCP.V1;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.OutputStream;</span><br><span class="line"><span class="keyword">import</span> java.net.Socket;</span><br><span class="line"><span class="comment">//客户端程序</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Client</span> </span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//1.创建客户端对象提供IP地址和端口号</span></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">            第一个参数：字符串类型IP地址</span></span><br><span class="line"><span class="comment">            第二个参数：通信端口号</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">        <span class="type">Socket</span> <span class="variable">client</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Socket</span>(<span class="string">&quot;10.211.55.3&quot;</span>,<span class="number">8888</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;客户端信息：&quot;</span>+client);</span><br><span class="line">        <span class="comment">//2.获取网络字节输出流对象【建立一条客户端通向服务器的通道】</span></span><br><span class="line">        <span class="type">OutputStream</span> <span class="variable">outputStream</span> <span class="operator">=</span> client.getOutputStream();</span><br><span class="line">        <span class="comment">//利用字节输入流的对象向服务器发送数据即可</span></span><br><span class="line">        outputStream.write(<span class="string">&quot;服务器你好，我是客户端，来自远方问候.....嘿嘿(*^▽^*)！！！&quot;</span>.getBytes());</span><br><span class="line">        <span class="comment">//强烈推荐在使用网路流传输数据时必须要写刷新</span></span><br><span class="line">        outputStream.flush();</span><br><span class="line">        <span class="comment">//3.关闭客户端</span></span><br><span class="line">        client.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">package</span> com.qfedu.TCP.V1;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.net.ServerSocket;</span><br><span class="line"><span class="keyword">import</span> java.net.Socket;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Server</span> </span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//1.创建服务器端对象，参数只有一个需要和客户端一样的端口号</span></span><br><span class="line">        <span class="type">ServerSocket</span> <span class="variable">server</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ServerSocket</span>(<span class="number">8888</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;服务器在等待客户端的链接.......&quot;</span>);</span><br><span class="line">        <span class="comment">//2.通过服务器端对象调用 accept 方法获取到连接服务器的客户端对象进行操作</span></span><br><span class="line">        <span class="type">Socket</span> <span class="variable">sClient</span> <span class="operator">=</span> server.accept();    <span class="comment">//返回的是客户端的信息(端口号等信息)</span></span><br><span class="line">        System.out.println(<span class="string">&quot;恭喜!来自客户端&quot;</span>+sClient+<span class="string">&quot;已经链接上了.......&quot;</span>);</span><br><span class="line">        <span class="comment">//3.创建网络字节输入流对象，获取传输的数据【建立客户端与服务器连接通道】</span></span><br><span class="line">        <span class="type">InputStream</span> <span class="variable">inputStream</span> <span class="operator">=</span> sClient.getInputStream();</span><br><span class="line">        <span class="type">byte</span>[] bs = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">1024</span>];</span><br><span class="line">        <span class="type">int</span> <span class="variable">len</span> <span class="operator">=</span> inputStream.read(bs);</span><br><span class="line">        <span class="comment">//4.打印客户端的信息</span></span><br><span class="line">        System.out.println(<span class="string">&quot;来自客户端的信息是：&quot;</span>+<span class="keyword">new</span> <span class="title class_">String</span>(bs,<span class="number">0</span>,len));</span><br><span class="line">        <span class="comment">//5.关闭服务器</span></span><br><span class="line">        server.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>案例2</p><p>&ensp;&ensp;&ensp;&ensp;需求：此时客户端与服务器之间是建立了连接发送了信息，客户端服务器发送了信息，服务器要给客户端予以响应</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.qfedu.TCP.V2;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.OutputStream;</span><br><span class="line"><span class="keyword">import</span> java.net.Socket;</span><br><span class="line"><span class="comment">//客户端程序</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Client</span> </span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//1.创建客户端对象提供IP地址和端口号</span></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">            第一个参数是字符串类型IP地址</span></span><br><span class="line"><span class="comment">            第二个参数通信端口号</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">        <span class="type">Socket</span> <span class="variable">client</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Socket</span>(<span class="string">&quot;10.211.55.3&quot;</span>,<span class="number">8888</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;客户端信息：&quot;</span>+client);</span><br><span class="line">        <span class="comment">//2.获取网络字节输出流对象【建立一条客户端通向服务器的通道】</span></span><br><span class="line">        <span class="type">OutputStream</span> <span class="variable">outputStream</span> <span class="operator">=</span> client.getOutputStream();</span><br><span class="line">        <span class="comment">//利用字节输入流的对象向服务器发送数据即可</span></span><br><span class="line">        outputStream.write(<span class="string">&quot;服务器你好，我是客户端，来自远方问候.....嘿嘿(*^▽^*)！！！&quot;</span>.getBytes());</span><br><span class="line">        <span class="comment">//强烈推荐在使用网路流传输数据时必须要写刷新</span></span><br><span class="line">        outputStream.flush();</span><br><span class="line">        <span class="comment">//3.接收服务器的反馈信息[获取网络字节输入流对象]</span></span><br><span class="line">        <span class="type">InputStream</span> <span class="variable">inputStream</span> <span class="operator">=</span> client.getInputStream();</span><br><span class="line">        <span class="type">byte</span>[] bs = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">1024</span>];</span><br><span class="line">        <span class="type">int</span> <span class="variable">len</span> <span class="operator">=</span> inputStream.read(bs);</span><br><span class="line">        System.out.println(<span class="string">&quot;当前来之服务器的反馈信息：&quot;</span>+<span class="keyword">new</span> <span class="title class_">String</span>(bs,<span class="number">0</span>,len));</span><br><span class="line">        <span class="comment">//4.关闭客户端</span></span><br><span class="line">        client.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">package</span> com.qfedu.TCP.V2;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.OutputStream;</span><br><span class="line"><span class="keyword">import</span> java.net.ServerSocket;</span><br><span class="line"><span class="keyword">import</span> java.net.Socket;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Server</span> </span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//1.创建服务器端对象，参数只有一个需要和客户端一样的端口号</span></span><br><span class="line">        <span class="type">ServerSocket</span> <span class="variable">server</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ServerSocket</span>(<span class="number">8888</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;服务器在等待客户端的链接.......&quot;</span>);</span><br><span class="line">        <span class="comment">//2.通过服务器端对象调用 accept 方法获取到连接服务器的客户端对象进行操作</span></span><br><span class="line">        <span class="type">Socket</span> <span class="variable">sClient</span> <span class="operator">=</span> server.accept();</span><br><span class="line">        System.out.println(<span class="string">&quot;恭喜!来自客户端&quot;</span>+sClient+<span class="string">&quot;已经链接上了.......&quot;</span>);</span><br><span class="line">        <span class="comment">//3.创建网络字节输入流对象，获取传输的数据【建立客户端与服务器连接通道】</span></span><br><span class="line">        <span class="type">InputStream</span> <span class="variable">inputStream</span> <span class="operator">=</span> sClient.getInputStream();</span><br><span class="line">        <span class="type">byte</span>[] bs = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">1024</span>];</span><br><span class="line">        <span class="type">int</span> <span class="variable">len</span> <span class="operator">=</span> inputStream.read(bs);</span><br><span class="line">        <span class="comment">//4.打印客户端的信息</span></span><br><span class="line">        System.out.println(<span class="string">&quot;来之客户端的信息是：&quot;</span>+<span class="keyword">new</span> <span class="title class_">String</span>(bs,<span class="number">0</span>,len));</span><br><span class="line">        <span class="comment">//5.服务器向客户予以响应</span></span><br><span class="line">        <span class="comment">//5.1提供网络字节输出流对象</span></span><br><span class="line">        <span class="type">OutputStream</span> <span class="variable">outputStream</span> <span class="operator">=</span> sClient.getOutputStream();</span><br><span class="line">        outputStream.write(<span class="string">&quot;已收到信息，感谢访问(#^.^#)！&quot;</span>.getBytes());</span><br><span class="line">        outputStream.flush();</span><br><span class="line">        <span class="comment">//6.关闭服务器</span></span><br><span class="line">        server.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>案例3</p><p>&ensp;&ensp;&ensp;&ensp;需求: 提供客户端与服务器之间聊天程序， 当某一个方输入 886 停止聊天</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.qfedu.TCP.V3;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.OutputStream;</span><br><span class="line"><span class="keyword">import</span> java.net.Socket;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="comment">//提供一个客户端程序，完成客户端接收与发送信息给服务器</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Client</span> </span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//1.提供客户端对象</span></span><br><span class="line">        <span class="type">Socket</span> <span class="variable">socket</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Socket</span>(<span class="string">&quot;10.211.55.3&quot;</span>,<span class="number">9999</span>);</span><br><span class="line">        <span class="comment">//2.提供网络字节输入输出流对象</span></span><br><span class="line">        <span class="type">InputStream</span> <span class="variable">inputStream</span> <span class="operator">=</span> socket.getInputStream();</span><br><span class="line">        <span class="type">OutputStream</span> <span class="variable">outputStream</span> <span class="operator">=</span> socket.getOutputStream();</span><br><span class="line">        <span class="comment">//3.提供Scanner获取控制台信息</span></span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">input</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="keyword">while</span>(<span class="literal">true</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;客户端向服务器说：&quot;</span>);</span><br><span class="line">            <span class="type">String</span> <span class="variable">content</span> <span class="operator">=</span> input.next();</span><br><span class="line">            outputStream.write(content.getBytes());</span><br><span class="line">            outputStream.flush();</span><br><span class="line">            <span class="comment">//做了一个约定，如果哪一方输入886 就关闭聊天</span></span><br><span class="line">            <span class="keyword">if</span>(<span class="string">&quot;886&quot;</span>.equals(content))</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125; </span><br><span class="line">            <span class="comment">//提供数组存数据操作</span></span><br><span class="line">            <span class="type">byte</span>[] bs = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">1024</span>];</span><br><span class="line">            <span class="type">int</span> <span class="variable">len</span> <span class="operator">=</span> inputStream.read(bs);</span><br><span class="line">            System.out.println(<span class="string">&quot;来之服务器的信息：&quot;</span>+ <span class="keyword">new</span> <span class="title class_">String</span>(bs,<span class="number">0</span>,len));</span><br><span class="line">        &#125; </span><br><span class="line">        socket.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">package</span> com.qfedu.TCP.V3;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.OutputStream;</span><br><span class="line"><span class="keyword">import</span> java.net.ServerSocket;</span><br><span class="line"><span class="keyword">import</span> java.net.Socket;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Server</span> </span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span></span><br><span class="line">Exception </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//1.创建服务器端对象</span></span><br><span class="line">        <span class="type">ServerSocket</span> <span class="variable">server</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ServerSocket</span>(<span class="number">9999</span>);</span><br><span class="line">        <span class="comment">//2.利用serverSocket对象中accept方法获取客户端连接</span></span><br><span class="line">        <span class="type">Socket</span> <span class="variable">accept</span> <span class="operator">=</span> server.accept();</span><br><span class="line">        <span class="comment">//3.提供网络字节输入输出流对象完成信息发送</span></span><br><span class="line">        <span class="type">InputStream</span> <span class="variable">inputStream</span> <span class="operator">=</span> accept.getInputStream();</span><br><span class="line">        <span class="type">OutputStream</span> <span class="variable">outputStream</span> <span class="operator">=</span> accept.getOutputStream();</span><br><span class="line">        <span class="comment">//4.提供控制台获取数据</span></span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">input</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="keyword">while</span>(<span class="literal">true</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//4.1接收客户端向服务器发送的数据</span></span><br><span class="line">            <span class="type">byte</span>[] bs = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">1024</span>];</span><br><span class="line">            <span class="type">int</span> <span class="variable">len</span> <span class="operator">=</span> inputStream.read(bs);</span><br><span class="line">            <span class="type">String</span> <span class="variable">content</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>(bs,<span class="number">0</span>,len);</span><br><span class="line">            System.out.println(<span class="string">&quot;来之客户端的信息：&quot;</span>+content);</span><br><span class="line">            <span class="comment">//判断客户单输入的输入的数据是什么</span></span><br><span class="line">            <span class="keyword">if</span>(<span class="string">&quot;886&quot;</span>.equals(content))</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125; </span><br><span class="line">            <span class="comment">//4.2服务器向客户端发送数据</span></span><br><span class="line">            System.out.println(<span class="string">&quot;服务器端向客户端说：&quot;</span>);</span><br><span class="line">            <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> input.next();</span><br><span class="line">            outputStream.write(str.getBytes());</span><br><span class="line">            outputStream.flush();</span><br><span class="line">        &#125; </span><br><span class="line">        server.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="1、使用TCP模拟Tomcat服务器"><a href="#1、使用TCP模拟Tomcat服务器" class="headerlink" title="1、使用TCP模拟Tomcat服务器"></a><center>1、使用TCP模拟Tomcat服务器</center></h2><p>需求：利用浏览器进行网页访问，访问服务器中HTML页面，展示服务器端HTML页面在浏览器中</p><p>需要在项目中提供web目录并在web目录下提供html页面</p><p>在浏览器中访问地址时：</p><p>&ensp;&ensp;&ensp;&ensp;IP地址:服务器端口号&#x2F;访问资源路径 –》 相当于 –》127.0.0.1:9999&#x2F;web&#x2F;regist.html</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.net.ServerSocket;</span><br><span class="line"><span class="keyword">import</span> java.net.Socket;</span><br><span class="line"><span class="comment">//利用ServerSocket模拟Tomcat服务器提供网页访问服务器</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TomcatServer</span> </span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//1.通过读取浏览器页面请求信息，获取浏览器需要访问的路径</span></span><br><span class="line">        <span class="comment">//提供ServerSocket服务器端对象</span></span><br><span class="line">        <span class="type">ServerSocket</span> <span class="variable">server</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ServerSocket</span>(<span class="number">9999</span>);</span><br><span class="line">        <span class="comment">//调用accept方法获取连接的客户端</span></span><br><span class="line">        <span class="type">Socket</span> <span class="variable">socket</span> <span class="operator">=</span> server.accept();</span><br><span class="line">        <span class="comment">//通过返回socket对象获取网络字节输入流对象【建立连接通道】</span></span><br><span class="line">        <span class="type">InputStream</span> <span class="variable">inputStream</span> <span class="operator">=</span> socket.getInputStream();</span><br><span class="line">        <span class="comment">//将字节流转换为字符流【缓冲的】--》读取到字符串了</span></span><br><span class="line">        <span class="type">BufferedReader</span> <span class="variable">br</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BufferedReader</span>(<span class="keyword">new</span> <span class="title class_">InputStreamReader</span>(inputStream));</span><br><span class="line">        <span class="comment">//利用字符缓冲输入流读取文件访问路径</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">path</span> <span class="operator">=</span> br.readLine();</span><br><span class="line">        System.out.println(path);</span><br><span class="line">        <span class="comment">//利用空格将path路径进行分隔，获取到访问资源路径</span></span><br><span class="line">        String[] s = path.split(<span class="string">&quot; &quot;</span>);</span><br><span class="line">        <span class="comment">//通过下标获取出资源路径，将路径最前面的/去掉</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">realPath</span> <span class="operator">=</span> s[<span class="number">1</span>].substring(<span class="number">1</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;浏览器访问服务器的资源路径：&quot;</span>+realPath);</span><br><span class="line">        <span class="comment">//利用相对路径读取服务器中相对路径中资源反馈给浏览器</span></span><br><span class="line">        <span class="type">FileInputStream</span> <span class="variable">fis</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileInputStream</span>(realPath);</span><br><span class="line">        <span class="comment">//在通过accept方法获取Socket对象获取网络字节输出流【将流中数据反馈给浏览器】</span></span><br><span class="line">        <span class="type">OutputStream</span> <span class="variable">outputStream</span> <span class="operator">=</span> socket.getOutputStream();</span><br><span class="line">        <span class="comment">//开始读写</span></span><br><span class="line">        <span class="type">byte</span>[] bs = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">8192</span>];</span><br><span class="line">        <span class="type">int</span> len;</span><br><span class="line">        <span class="comment">//响应页面的时候需要将服务器返回给浏览器的必要信息</span></span><br><span class="line">        outputStream.write(<span class="string">&quot;HTTP/1.1 200OK\r\n&quot;</span>.getBytes());</span><br><span class="line">        outputStream.write(<span class="string">&quot;ContentType:text/html\r\n&quot;</span>.getBytes());</span><br><span class="line">        outputStream.write(<span class="string">&quot;\r\n&quot;</span>.getBytes());</span><br><span class="line">        <span class="keyword">while</span>((len = fis.read(bs))!=-<span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            outputStream.write(bs,<span class="number">0</span>,len);</span><br><span class="line">        &#125; </span><br><span class="line">        outputStream.flush();</span><br><span class="line">        <span class="comment">//关闭流</span></span><br><span class="line">        fis.close();</span><br><span class="line">        socket.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="知识点六：UDP协议编程（了解）"><a href="#知识点六：UDP协议编程（了解）" class="headerlink" title="知识点六：UDP协议编程（了解）"></a><center>知识点六：UDP协议编程（了解）</center></h1><p>Java中也提供UDP编程操作提供两个必要类：</p><p>&ensp;&ensp;&ensp;&ensp;<strong>DatagramSocket【即是客户端也是服务器】 和DatagramPacket【UDP需要的数据包】</strong></p><p>UDP是无责任的发送模式类似于【广播电台】，UDP发送数据是不保证包安全，UDP的客户端与服务器是同一个类，发送数据时候需要使用DatagramPacket进行数据封装，包的限制64K</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.qfedu.UDP;</span><br><span class="line"><span class="keyword">import</span> java.net.DatagramPacket;</span><br><span class="line"><span class="keyword">import</span> java.net.DatagramSocket;</span><br><span class="line"><span class="keyword">import</span> java.net.InetAddress;</span><br><span class="line"><span class="keyword">import</span> java.net.SocketException;</span><br><span class="line"><span class="comment">//UDP发送数据类</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Send</span> </span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//1.创建UDP对象</span></span><br><span class="line">        <span class="type">DatagramSocket</span> <span class="variable">sender</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DatagramSocket</span>();</span><br><span class="line">        <span class="comment">//2.提供信息</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">content</span> <span class="operator">=</span> <span class="string">&quot;今天天气好晴朗，下班要下雨了，赶快跑路....&quot;</span>;</span><br><span class="line">        <span class="comment">//3.提供数据包将数据封装到包中</span></span><br><span class="line">        <span class="type">DatagramPacket</span> <span class="variable">packet</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DatagramPacket</span>(</span><br><span class="line">            content.getBytes(),            <span class="comment">//提供数据字节数组</span></span><br><span class="line">            content.getBytes().length,    <span class="comment">//字节数组的长度</span></span><br><span class="line">            InetAddress.getByName(<span class="string">&quot;127.0.0.1&quot;</span>), <span class="comment">//设置发送IP地址</span></span><br><span class="line">            <span class="number">9999</span>    <span class="comment">//发送端口号</span></span><br><span class="line">        );</span><br><span class="line">        <span class="comment">//发送信息</span></span><br><span class="line">        sender.send(packet);</span><br><span class="line">    &#125;</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">import</span> java.net.DatagramPacket;</span><br><span class="line"><span class="keyword">import</span> java.net.DatagramSocket;</span><br><span class="line"><span class="keyword">import</span> java.net.SocketException;</span><br><span class="line"><span class="comment">//UDP接收类</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Receiver</span> </span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//1.创建UDP对象并指定接收数据端口号</span></span><br><span class="line">        <span class="type">DatagramSocket</span> <span class="variable">receiver</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DatagramSocket</span>(<span class="number">9999</span>);</span><br><span class="line">        <span class="comment">//2.需要提供byte类型数据接收存数据</span></span><br><span class="line">        <span class="type">byte</span>[] bs = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">1024</span>];</span><br><span class="line">        <span class="comment">//3.创建数据包对象</span></span><br><span class="line">        <span class="type">DatagramPacket</span> <span class="variable">packet</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DatagramPacket</span>(bs,bs.length);</span><br><span class="line">        <span class="comment">//接收数据存储在包对象中</span></span><br><span class="line">        receiver.receive(packet);</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        拆包:</span></span><br><span class="line"><span class="comment">            getData() 获取包中字节数组</span></span><br><span class="line"><span class="comment">            getLength() 获取包中字节数组的长度</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">content</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>(packet.getData(),<span class="number">0</span>,packet.getLength());</span><br><span class="line">        System.out.println(content);</span><br><span class="line">        receiver.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;知识点一：什么是网络编程&quot;&gt;&lt;a href=&quot;#知识点一：什么是网络编程&quot; class=&quot;headerlink&quot; title=&quot;知识点一：什么是网络编程&quot;&gt;&lt;/a&gt;&lt;center&gt;知识点一：什么是网络编程&lt;/center&gt;&lt;/h1&gt;&lt;p&gt;Java是Internet</summary>
      
    
    
    
    <category term="编程语言" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    <category term="Java" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Java/"/>
    
    
    <category term="Java" scheme="http://example.com/tags/Java/"/>
    
  </entry>
  
</feed>
